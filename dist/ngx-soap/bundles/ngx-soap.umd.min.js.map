{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-soap/lib/soap/nscontext.ts","ng://ngx-soap/lib/soap/utils.ts","ng://ngx-soap/lib/soap/wsdl.ts","ng://ngx-soap/lib/soap/security/BasicAuthSecurity.ts","ng://ngx-soap/lib/soap/security/WSSecurity.ts","ng://ngx-soap/lib/soap/security/BearerSecurity.ts","ng://ngx-soap/lib/soap/security/NTLMSecurity.ts","ng://ngx-soap/lib/soap/security/security.ts","ng://ngx-soap/lib/soap/multipart.ts","ng://ngx-soap/lib/soap/soapAttachment.ts","ng://ngx-soap/lib/soap/client.ts","ng://ngx-soap/lib/soap/soap.ts","ng://ngx-soap/lib/ngx-soap.service.ts","ng://ngx-soap/lib/ngx-soap.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","NamespaceScope","parent","getNamespaceURI","prefix","localOnly","nsUri","namespaces","uri","getNamespaceMapping","declared","mapping","getPrefix","p","NamespaceContext","addNamespace","currentScope","pushContext","scope","scopes","popContext","registerNamespace","prefixCount","declareNamespace","passwordDigest","nonce","created","password","rawNonce","Buffer","toString","Base64","stringify","sha1","TNS_PREFIX","findPrefix","xmlnsMapping","nsURI","utils.TNS_PREFIX","utils.findPrefix","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","splitQName","nsName","i","indexOf","name","substring","xmlEscape","obj","substr","replace","trimLeft","trimRight","trim","text","Element","attrs","options","parts","key","children","xmlns","_initializeOptions","match","exec","valueKey","$targetNamespace","undefined","prototype","ignoredNamespaces","xmlKey","deleteFixedAttrs","Object","keys","allowedChildren","startElement","stack","ChildClass","unexpected","endElement","parent_1","_.defaultsDeep","addChild","child","Error","description","definitions","$name","init","createSubClass","root","subElement","arguments","__proto__","ElementElement","AnyElement","InputElement","OutputElement","SimpleTypeElement","RestrictionElement","ExtensionElement","ChoiceElement","EnumerationElement","ComplexTypeElement","ComplexContentElement","SimpleContentElement","SequenceElement","AllElement","MessageElement","DocumentationElement","SchemaElement","TypesElement","OperationElement","PortTypeElement","BindingElement","PortElement","ServiceElement","DefinitionsElement","ElementTypeMap","types","schema","element","any","simpleType","restriction","extension","choice","enumeration","complexType","complexContent","simpleContent","sequence","all","service","port","binding","portType","message","operation","input","output","fault","documentation","mapElementTypes","rtn","split","forEach","type","complexTypes","elements","includes","schemas","inputSoap","outputSoap","style","soapAction","methods","transport","location","ports","messages","portTypes","bindings","services","merge","source","assert","_.merge","location_1","$schemaLocation","$location","namespace","$namespace","targetNamespace","hasOwnProperty","console","error","use","$use","encodingStyle","$encodingStyle","$soapAction","$style","$transport","self","postProcess","part","ns","$element","elementChildren","lookupTypes","targetNSAlias","$lookupType","_getNestedLookupTypeString","join","filter","schemaXmlns","_createLookupTypeObject","$lookupTypes","$type","typeNs","ctype","method","splice","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","lookupTypeObj","resolvedType","excluded","concat","self_1","resolvedChildType","tag","messageName","$message","$binding","desc","$base","typeName","schema_1","typeElement_1","getBase","map","typeElement","base","isMany","$maxOccurs","isNaN","$minOccurs","$ref","descriptions","elem_1","description_1","name_1","inputDesc","outputDesc","name_2","name_3","WSDL","definition","fromFunc","x","callback","_includesWsdl","WSDL_CACHE","charCodeAt","slice","_fromXML","_fromServices","processIncludes","name_4","name_5","bindingName","topEls","topElements","methodName","inputName","outputName","xmlnsInEnvelope","_xmlnsMap","catch","err","appendColon","charAt","noColonNameSpace","open_wsdl","wsdl_headers","wsdl_options","httpClient","get","responseType","toPromise","wsdlDef","_a","wsdl","onReady","BasicAuthSecurity","username","defaults","_username","_password","ignoreBaseNameSpaces","_originalIgnoredNamespaces","Array","isArray","override","escapeXML","returnFault","handleNilAsNull","namespaceArrayElements","request","forceSoap12Headers","customDeserializer","overrideRootElement","useEmptyTag","_processNextInclude","include","shift","test","includePath","url.resolve","_.assign","open_wsdl_recursive","fromCache","_.mergeWith","a","b","deepMerge","destination","_.isArray","describeServices","name_6","toXML","xml","xmlToObject","sax.parser","objectName","Envelope","Header","Security","UsernameToken","Username","Password","Body","Code","Value","Subcode","Reason","Text","statusCode","Detail","Fault","faultcode","faultstring","detail","id","object","refs","onopentag","node","attributeName","xsiTypeSchema","attributes","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","originalName","isInput","onerror","href","hrefs","par","res","toLowerCase","attributesKey","xsiType","typeURI","typeDef","findSchemaObject","nil","onclosetag","cur","topObject","_.isPlainObject","oncdata","originalText","top_1","ontext","resume","parseInt","Date","preserveWhitespace","write","close","finish","saxStream","sax.createStream","on","pipe","r","ref","code","$value","info","qname","def","objectToDocumentXML","params","nsPrefix","_xml","args","parameterTypeObj","objectToXML","objectToRpcXML","isParts","defs","prefixedKey","isIgnoredNameSpace","filterOutIgnoredNameSpace","isFirst","xmlnsAttr","schemaObject","nsContext","parentNsPrefix","current","soapHeader","qualified","$elementFormDefault","prefixNamespace","xmlnsAttrib","xmlnsAttributes","attribute","item","arrayAttr","processAttributes","correctOuterNsPrefix","openingTagParts","attr","nonSubNameSpace","emptyNonSubNameSpace","nameWithNsRegex","childSchemaObject","findChildSchemaObject","childNsPrefix","childName","childNsURI","childXmlnsAttrib","elementQName","unqualified","$form","resolvedChildSchemaObject","typeQName","typePrefix","findSchemaType","$baseNameSpace","xsi_type","attrObj","attrKey","attrValue","backtrace","found","typeObj","typeInfo","baseQName","childNameSpace","foundBase","_parse","strict","str","alias","addHeaders","headers","Authorization","addOptions","validPasswordTypes","WSSecurity","_passwordType","passwordType","_hasTimeStamp","hasTimeStamp","hasNonce","_hasNonce","_hasTokenCreated","hasTokenCreated","actor","_actor","mustUnderstand","_mustUnderstand","BearerSecurity","token","_token","NTLMSecurity","domain","workstation","ntlm","getDate","d","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","now","timeStampXml","getTime","Math","random","Connection","security","Multipart","preambleCRLF","postambleCRLF","build","boundary","add","preamble","size","byteLength","reduce","uint8array","Uint8Array","j","buffer","SoapAttachment","mimetype","contentId","fromFormFiles","files","FileList","from","promises","file","reader","FileReader","readAsArrayBuffer","onload","arrayBuffer","bytes","attachment","nonIdentifierChars","Client","endpoint","_initializeServices","overridePromiseSuffix","addSoapHeader","soapHeaders","changeSoapHeader","index","getSoapHeaders","clearSoapHeaders","addHttpHeader","httpHeaders","getHttpHeaders","clearHttpHeaders","addBodyAttribute","bodyAttribute","bodyAttributes","composition_1","getOwnPropertyNames","prop","idx","array","getBodyAttributes","clearBodyAttributes","setEndpoint","describe","setSecurity","setSOAPAction","SOAPAction","_defineService","streamAllowed","stream","normalizeNames","envelopeKey","_definePort","_defineMethod","extraHeaders","_invoke","encoding","Content-Type","xmlnsSoap","header","lastIndexOf","assert.ok","lastMessage","lastRequest","lastEndpoint","tryJSONparse","JSON","parse","attachments","soapAttachments","forceMTOM","start","uuid4","boundry","action","_b","__values","o","m","tslib_1.__values","_c","ct","multipart_1","Content-ID","Content-Transfer-Encoding","Content-Disposition","flatMap","post","observe","response","lastResponse","lastResponseHeaders","parseSync","json","_.isObject","responseBody","html","term","throwError","_this","cache","getFromCache","url","wsdl.open_wsdl","createClient","_requestWSDL","disableCache","NgxSoapService","http","wsdlUrl","Injectable","providedIn","HttpClient","NgxSoapModule","NgModule","imports","HttpClientModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\n\nexport class NamespaceScope {\n  parent: any;\n  namespaces: any;\n  constructor(parent: any) {\n    if (!(this instanceof NamespaceScope)) {\n      return new NamespaceScope(parent);\n    }\n    this.parent = parent;\n    this.namespaces = {};  \n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    switch (prefix) {\n      case 'xml':\n        return 'http://www.w3.org/XML/1998/namespace';\n      case 'xmlns':\n        return 'http://www.w3.org/2000/xmlns/';\n      default:\n        var nsUri = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (nsUri != null) {\n          return nsUri.uri;\n        } else if (!localOnly && this.parent) {\n          return this.parent.getNamespaceURI(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getNamespaceMapping = function(prefix) {\n    switch (prefix) {\n      case 'xml':\n        return {\n          uri: 'http://www.w3.org/XML/1998/namespace',\n          prefix: 'xml',\n          declared: true\n        };\n      case 'xmlns':\n        return {\n          uri: 'http://www.w3.org/2000/xmlns/',\n          prefix: 'xmlns',\n          declared: true\n        };\n      default:\n        var mapping = this.namespaces[prefix];\n        /*jshint -W116 */\n        if (mapping != null) {\n          return mapping;\n        } else if (this.parent) {\n          return this.parent.getNamespaceMapping(prefix);\n        } else {\n          return null;\n        }\n    }\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    switch (nsUri) {\n      case 'http://www.w3.org/XML/1998/namespace':\n        return 'xml';\n      case 'http://www.w3.org/2000/xmlns/':\n        return 'xmlns';\n      default:\n        for (var p in this.namespaces) {\n          if (this.namespaces[p].uri === nsUri) {\n            return p;\n          }\n        }\n        if (!localOnly && this.parent) {\n          return this.parent.getPrefix(nsUri);\n        } else {\n          return null;\n        }\n    }\n  }\n}\n\nexport class NamespaceContext {\n  scopes: any[];\n  prefixCount: number; \n\n  constructor() {\n    if (!(this instanceof NamespaceContext)) {\n      return new NamespaceContext();\n    }\n    this.scopes = [];\n    this.pushContext();\n    this.prefixCount = 0;\n  }\n\n  addNamespace = function(prefix, nsUri, localOnly) {\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n      return false;\n    }\n    if (this.currentScope) {\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: false\n      };\n      return true;\n    }\n    return false;\n  }\n\n  pushContext = function() {\n    var scope = new NamespaceScope(this.currentScope);\n    this.scopes.push(scope);\n    this.currentScope = scope;\n    return scope;\n  }\n\n  popContext = function() {\n    var scope = this.scopes.pop();\n    if (scope) {\n      this.currentScope = scope.parent;\n    } else {\n      this.currentScope = null;\n    }\n    return scope;\n  }\n\n  getNamespaceURI = function(prefix, localOnly) {\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n  }\n\n  getPrefix = function(nsUri, localOnly) {\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n  }\n  \n  registerNamespace = function(nsUri) {\n    var prefix = this.getPrefix(nsUri);\n    if (prefix) {\n      // If the namespace has already mapped to a prefix\n      return prefix;\n    } else {\n      // Try to generate a unique namespace\n      while (true) {\n        prefix = 'ns' + (++this.prefixCount);\n        if (!this.getNamespaceURI(prefix)) {\n          // The prefix is not used\n          break;\n        }\n      }\n    }\n    this.addNamespace(prefix, nsUri, true);\n    return prefix;\n  }\n\n  declareNamespace = function(prefix, nsUri) {\n    if (this.currentScope) {\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\n        return false;\n      }\n      this.currentScope.namespaces[prefix] = {\n        uri: nsUri,\n        prefix: prefix,\n        declared: true\n      };\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Scope for XML namespaces\n * @param [parent] Parent scope\n * \n */\n// export function NamespaceScope(parent) {\n//   if (!(this instanceof NamespaceScope)) {\n//     return NamespaceScope(parent);\n//   }\n//   this.parent = parent;\n//   this.namespaces = {};\n// }\n\n// /**\n//  * Namespace context that manages hierarchical scopes\n//  *  {NamespaceContext}\n//  */\n// export function NamespaceContext() {\n//   if (!(this instanceof NamespaceContext)) {\n//     return NamespaceContext();\n//   }\n//   this.scopes = [];\n//   this.pushContext();\n//   this.prefixCount = 0;\n// }\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceScope.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   switch (prefix) {\n//     case 'xml':\n//       return 'http://www.w3.org/XML/1998/namespace';\n//     case 'xmlns':\n//       return 'http://www.w3.org/2000/xmlns/';\n//     default:\n//       var nsUri = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (nsUri != null) {\n//         return nsUri.uri;\n//       } else if (!localOnly && this.parent) {\n//         return this.parent.getNamespaceURI(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// NamespaceScope.prototype.getNamespaceMapping = function(prefix) {\n//   switch (prefix) {\n//     case 'xml':\n//       return {\n//         uri: 'http://www.w3.org/XML/1998/namespace',\n//         prefix: 'xml',\n//         declared: true\n//       };\n//     case 'xmlns':\n//       return {\n//         uri: 'http://www.w3.org/2000/xmlns/',\n//         prefix: 'xmlns',\n//         declared: true\n//       };\n//     default:\n//       var mapping = this.namespaces[prefix];\n//       /*jshint -W116 */\n//       if (mapping != null) {\n//         return mapping;\n//       } else if (this.parent) {\n//         return this.parent.getNamespaceMapping(prefix);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceScope.prototype.getPrefix = function(nsUri, localOnly) {\n//   switch (nsUri) {\n//     case 'http://www.w3.org/XML/1998/namespace':\n//       return 'xml';\n//     case 'http://www.w3.org/2000/xmlns/':\n//       return 'xmlns';\n//     default:\n//       for (var p in this.namespaces) {\n//         if (this.namespaces[p].uri === nsUri) {\n//           return p;\n//         }\n//       }\n//       if (!localOnly && this.parent) {\n//         return this.parent.getPrefix(nsUri);\n//       } else {\n//         return null;\n//       }\n//   }\n// };\n\n// /**\n//  * Add a prefix/URI namespace mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *  {boolean} true if the mapping is added or false if the mapping\n//  * already exists\n//  */\n// NamespaceContext.prototype.addNamespace = function(prefix, nsUri, localOnly) {\n//   if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\n//     return false;\n//   }\n//   if (this.currentScope) {\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: false\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n\n// /**\n//  * Push a scope into the context\n//  *  The current scope\n//  */\n// NamespaceContext.prototype.pushContext = function() {\n//   var scope = NamespaceScope(this.currentScope);\n//   this.scopes.push(scope);\n//   this.currentScope = scope;\n//   return scope;\n// };\n\n// /**\n//  * Pop a scope out of the context\n//  *   The removed scope\n//  */\n// NamespaceContext.prototype.popContext = function() {\n//   var scope = this.scopes.pop();\n//   if (scope) {\n//     this.currentScope = scope.parent;\n//   } else {\n//     this.currentScope = null;\n//   }\n//   return scope;\n// };\n\n// /**\n//  * Look up the namespace URI by prefix\n//  * @param  prefix Namespace prefix\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace URI\n//  */\n// NamespaceContext.prototype.getNamespaceURI = function(prefix, localOnly) {\n//   return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\n// };\n\n// /**\n//  * Look up the namespace prefix by URI\n//  * @param  nsURI Namespace URI\n//  * @param  [localOnly] Search current scope only\n//  *   Namespace prefix\n//  */\n// NamespaceContext.prototype.getPrefix = function(nsUri, localOnly) {\n//   return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\n// };\n\n// /**\n//  * Register a namespace\n//  * @param  nsUri Namespace URI\n//  *   The matching or generated namespace prefix\n//  */\n// NamespaceContext.prototype.registerNamespace = function(nsUri) {\n//   var prefix = this.getPrefix(nsUri);\n//   if (prefix) {\n//     // If the namespace has already mapped to a prefix\n//     return prefix;\n//   } else {\n//     // Try to generate a unique namespace\n//     while (true) {\n//       prefix = 'ns' + (++this.prefixCount);\n//       if (!this.getNamespaceURI(prefix)) {\n//         // The prefix is not used\n//         break;\n//       }\n//     }\n//   }\n//   this.addNamespace(prefix, nsUri, true);\n//   return prefix;\n// };\n\n// /**\n//  * Declare a namespace prefix/uri mapping\n//  * @param  prefix Namespace prefix\n//  * @param  nsUri Namespace URI\n//  *   true if the declaration is created\n//  */\n// NamespaceContext.prototype.declareNamespace = function(prefix, nsUri) {\n//   if (this.currentScope) {\n//     var mapping = this.currentScope.getNamespaceMapping(prefix);\n//     if (mapping && mapping.uri === nsUri && mapping.declared) {\n//       return false;\n//     }\n//     this.currentScope.namespaces[prefix] = {\n//       uri: nsUri,\n//       prefix: prefix,\n//       declared: true\n//     };\n//     return true;\n//   }\n//   return false;\n// };\n","import sha1 from 'crypto-js/sha1';\nimport Base64 from 'crypto-js/enc-base64';\nimport { Buffer } from 'buffer';\n\nexport const passwordDigest = function passwordDigest(nonce, created, password) {\n  const rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\n  return Base64.stringify(sha1(rawNonce + created + password, ''));\n};\n\nexport const TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\n\n/**\n * Find a key from an object based on the value\n * @param  Namespace prefix/uri mapping\n * @param  nsURI value\n * @returns  The matching key\n */\nexport const findPrefix = function(xmlnsMapping, nsURI) {\n  for (const n in xmlnsMapping) {\n    if (n === TNS_PREFIX) { continue; }\n    if (xmlnsMapping[n] === nsURI) {\n      return n;\n    }\n  }\n};\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n *\n */\n/*jshint proto:true*/\n\n\"use strict\";\n\nimport * as sax from 'sax';\nimport { HttpClient } from '@angular/common/http';\nimport { NamespaceContext } Â from './nscontext';\nimport * as _ from 'lodash';\nimport * as utils from './utils';\nimport * as url from 'url';\nimport { ok as assert } from 'assert';\n\nconst stripBom = (x: string): string => {\n  // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\n  // conversion translates it to FEFF (UTF-16 BOM)\n  if (x.charCodeAt(0) === 0xFEFF) {\n    return x.slice(1);\n  }\n\n  return x;\n}\n\n\n\n\nlet TNS_PREFIX = utils.TNS_PREFIX;\nlet findPrefix = utils.findPrefix;\n\nlet Primitives = {\n  string: 1,\n  boolean: 1,\n  decimal: 1,\n  float: 1,\n  double: 1,\n  anyType: 1,\n  byte: 1,\n  int: 1,\n  long: 1,\n  short: 1,\n  negativeInteger: 1,\n  nonNegativeInteger: 1,\n  positiveInteger: 1,\n  nonPositiveInteger: 1,\n  unsignedByte: 1,\n  unsignedInt: 1,\n  unsignedLong: 1,\n  unsignedShort: 1,\n  duration: 0,\n  dateTime: 0,\n  time: 0,\n  date: 0,\n  gYearMonth: 0,\n  gYear: 0,\n  gMonthDay: 0,\n  gDay: 0,\n  gMonth: 0,\n  hexBinary: 0,\n  base64Binary: 0,\n  anyURI: 0,\n  QName: 0,\n  NOTATION: 0\n};\n\nfunction splitQName(nsName) {\n  let i = typeof nsName === 'string' ? nsName.indexOf(':') : -1;\n  return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\n    { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\n}\n\nfunction xmlEscape(obj) {\n  if (typeof (obj) === 'string') {\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\n      return obj;\n    }\n    return obj\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;');\n  }\n\n  return obj;\n}\n\nlet trimLeft = /^[\\s\\xA0]+/;\nlet trimRight = /[\\s\\xA0]+$/;\n\nfunction trim(text) {\n  return text.replace(trimLeft, '').replace(trimRight, '');\n}\n\nfunction deepMerge(destination, source) {\n  return _.mergeWith(destination || {}, source, function (a, b) {\n    return _.isArray(a) ? a.concat(b) : undefined;\n  });\n}\n\nlet Element: any = function (nsName, attrs, options) {\n  let parts = splitQName(nsName);\n\n  this.nsName = nsName;\n  this.prefix = parts.prefix;\n  this.name = parts.name;\n  this.children = [];\n  this.xmlns = {};\n\n  this._initializeOptions(options);\n\n  for (let key in attrs) {\n    let match = /^xmlns:?(.*)$/.exec(key);\n    if (match) {\n      this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\n    }\n    else {\n      if (key === 'value') {\n        this[this.valueKey] = attrs[key];\n      } else {\n        this['$' + key] = attrs[key];\n      }\n    }\n  }\n  if (this.$targetNamespace !== undefined) {\n    // Add targetNamespace to the mapping\n    this.xmlns[TNS_PREFIX] = this.$targetNamespace;\n  }\n};\n\nElement.prototype._initializeOptions = function (options) {\n  if (options) {\n    this.valueKey = options.valueKey || '$value';\n    this.xmlKey = options.xmlKey || '$xml';\n    this.ignoredNamespaces = options.ignoredNamespaces || [];\n  } else {\n    this.valueKey = '$value';\n    this.xmlKey = '$xml';\n    this.ignoredNamespaces = [];\n  }\n};\n\nElement.prototype.deleteFixedAttrs = function () {\n  this.children && this.children.length === 0 && delete this.children;\n  this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\n  delete this.nsName;\n  delete this.prefix;\n  delete this.name;\n};\n\nElement.prototype.allowedChildren = [];\n\nElement.prototype.startElement = function (stack, nsName, attrs, options) {\n  if (!this.allowedChildren) {\n    return;\n  }\n\n  let ChildClass = this.allowedChildren[splitQName(nsName).name],\n    element = null;\n\n  if (ChildClass) {\n    stack.push(new ChildClass(nsName, attrs, options));\n  }\n  else {\n    this.unexpected(nsName);\n  }\n\n};\n\nElement.prototype.endElement = function (stack, nsName) {\n  if (this.nsName === nsName) {\n    if (stack.length < 2)\n      return;\n    let parent = stack[stack.length - 2];\n    if (this !== stack[0]) {\n      _.defaultsDeep(stack[0].xmlns, this.xmlns);\n      // delete this.xmlns;\n      parent.children.push(this);\n      parent.addChild(this);\n    }\n    stack.pop();\n  }\n};\n\nElement.prototype.addChild = function (child) {\n  return;\n};\n\nElement.prototype.unexpected = function (name) {\n  throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\n};\n\nElement.prototype.description = function (definitions) {\n  return this.$name || this.name;\n};\n\nElement.prototype.init = function () {\n};\n\nElement.createSubClass = function () {\n  let root = this;\n  let subElement = function () {\n    root.apply(this, arguments);\n    this.init();\n  };\n  // inherits(subElement, root);\n  subElement.prototype.__proto__ = root.prototype;\n  return subElement;\n};\n\n\nlet ElementElement = Element.createSubClass();\nlet AnyElement = Element.createSubClass();\nlet InputElement = Element.createSubClass();\nlet OutputElement = Element.createSubClass();\nlet SimpleTypeElement = Element.createSubClass();\nlet RestrictionElement = Element.createSubClass();\nlet ExtensionElement = Element.createSubClass();\nlet ChoiceElement = Element.createSubClass();\nlet EnumerationElement = Element.createSubClass();\nlet ComplexTypeElement = Element.createSubClass();\nlet ComplexContentElement = Element.createSubClass();\nlet SimpleContentElement = Element.createSubClass();\nlet SequenceElement = Element.createSubClass();\nlet AllElement = Element.createSubClass();\nlet MessageElement = Element.createSubClass();\nlet DocumentationElement = Element.createSubClass();\n\nlet SchemaElement = Element.createSubClass();\nlet TypesElement = Element.createSubClass();\nlet OperationElement = Element.createSubClass();\nlet PortTypeElement = Element.createSubClass();\nlet BindingElement = Element.createSubClass();\nlet PortElement = Element.createSubClass();\nlet ServiceElement = Element.createSubClass();\nlet DefinitionsElement = Element.createSubClass();\n\nlet ElementTypeMap = {\n  types: [TypesElement, 'schema documentation'],\n  schema: [SchemaElement, 'element complexType simpleType include import'],\n  element: [ElementElement, 'annotation complexType'],\n  any: [AnyElement, ''],\n  simpleType: [SimpleTypeElement, 'restriction'],\n  restriction: [RestrictionElement, 'enumeration all choice sequence'],\n  extension: [ExtensionElement, 'all sequence choice'],\n  choice: [ChoiceElement, 'element sequence choice any'],\n  // group: [GroupElement, 'element group'],\n  enumeration: [EnumerationElement, ''],\n  complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\n  complexContent: [ComplexContentElement, 'extension'],\n  simpleContent: [SimpleContentElement, 'extension'],\n  sequence: [SequenceElement, 'element sequence choice any'],\n  all: [AllElement, 'element choice'],\n\n  service: [ServiceElement, 'port documentation'],\n  port: [PortElement, 'address documentation'],\n  binding: [BindingElement, '_binding SecuritySpec operation documentation'],\n  portType: [PortTypeElement, 'operation documentation'],\n  message: [MessageElement, 'part documentation'],\n  operation: [OperationElement, 'documentation input output fault _operation'],\n  input: [InputElement, 'body SecuritySpecRef documentation header'],\n  output: [OutputElement, 'body SecuritySpecRef documentation header'],\n  fault: [Element, '_fault documentation'],\n  definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\n  documentation: [DocumentationElement, '']\n};\n\nfunction mapElementTypes(types) {\n  let rtn = {};\n  types = types.split(' ');\n  types.forEach(function (type) {\n    rtn[type.replace(/^_/, '')] = (ElementTypeMap[type] || [Element])[0];\n  });\n  return rtn;\n}\n\nfor (let n in ElementTypeMap) {\n  let v = ElementTypeMap[n];\n  v[0].prototype.allowedChildren = mapElementTypes(v[1]);\n}\n\nMessageElement.prototype.init = function () {\n  this.element = null;\n  this.parts = null;\n};\n\nSchemaElement.prototype.init = function () {\n  this.complexTypes = {};\n  this.types = {};\n  this.elements = {};\n  this.includes = [];\n};\n\nTypesElement.prototype.init = function () {\n  this.schemas = {};\n};\n\nOperationElement.prototype.init = function () {\n  this.input = null;\n  this.output = null;\n  this.inputSoap = null;\n  this.outputSoap = null;\n  this.style = '';\n  this.soapAction = '';\n};\n\nPortTypeElement.prototype.init = function () {\n  this.methods = {};\n};\n\nBindingElement.prototype.init = function () {\n  this.transport = '';\n  this.style = '';\n  this.methods = {};\n};\n\nPortElement.prototype.init = function () {\n  this.location = null;\n};\n\nServiceElement.prototype.init = function () {\n  this.ports = {};\n};\n\nDefinitionsElement.prototype.init = function () {\n  if (this.name !== 'definitions') this.unexpected(this.nsName);\n  this.messages = {};\n  this.portTypes = {};\n  this.bindings = {};\n  this.services = {};\n  this.schemas = {};\n};\n\nDocumentationElement.prototype.init = function () {\n};\n\nSchemaElement.prototype.merge = function (source) {\n  assert(source instanceof SchemaElement);\n  if (this.$targetNamespace === source.$targetNamespace) {\n    _.merge(this.complexTypes, source.complexTypes);\n    _.merge(this.types, source.types);\n    _.merge(this.elements, source.elements);\n    _.merge(this.xmlns, source.xmlns);\n  }\n  return this;\n};\n\n\nSchemaElement.prototype.addChild = function (child) {\n  if (child.$name in Primitives)\n    return;\n  if (child.name === 'include' || child.name === 'import') {\n    let location = child.$schemaLocation || child.$location;\n    if (location) {\n      this.includes.push({\n        namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\n        location: location\n      });\n    }\n  }\n  else if (child.name === 'complexType') {\n    this.complexTypes[child.$name] = child;\n  }\n  else if (child.name === 'element') {\n    this.elements[child.$name] = child;\n  }\n  else if (child.$name) {\n    this.types[child.$name] = child;\n  }\n  this.children.pop();\n  // child.deleteFixedAttrs();\n};\n//fix#325\nTypesElement.prototype.addChild = function (child) {\n  assert(child instanceof SchemaElement);\n\n  let targetNamespace = child.$targetNamespace;\n\n  if (!this.schemas.hasOwnProperty(targetNamespace)) {\n    this.schemas[targetNamespace] = child;\n  } else {\n    console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\n  }\n};\n\nInputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOutputElement.prototype.addChild = function (child) {\n  if (child.name === 'body') {\n    this.use = child.$use;\n    if (this.use === 'encoded') {\n      this.encodingStyle = child.$encodingStyle;\n    }\n    this.children.pop();\n  }\n};\n\nOperationElement.prototype.addChild = function (child) {\n  if (child.name === 'operation') {\n    this.soapAction = child.$soapAction || '';\n    this.style = child.$style || '';\n    this.children.pop();\n  }\n};\n\nBindingElement.prototype.addChild = function (child) {\n  if (child.name === 'binding') {\n    this.transport = child.$transport;\n    this.style = child.$style;\n    this.children.pop();\n  }\n};\n\nPortElement.prototype.addChild = function (child) {\n  if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\n    this.location = child.$location;\n  }\n};\n\nDefinitionsElement.prototype.addChild = function (child) {\n  let self = this;\n  if (child instanceof TypesElement) {\n    // Merge types.schemas into definitions.schemas\n    _.merge(self.schemas, child.schemas);\n  }\n  else if (child instanceof MessageElement) {\n    self.messages[child.$name] = child;\n  }\n  else if (child.name === 'import') {\n    self.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\n    self.schemas[child.$namespace].addChild(child);\n  }\n  else if (child instanceof PortTypeElement) {\n    self.portTypes[child.$name] = child;\n  }\n  else if (child instanceof BindingElement) {\n    if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\n      child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\n      self.bindings[child.$name] = child;\n  }\n  else if (child instanceof ServiceElement) {\n    self.services[child.$name] = child;\n  }\n  else if (child instanceof DocumentationElement) {\n  }\n  this.children.pop();\n};\n\nMessageElement.prototype.postProcess = function (definitions) {\n  let part = null;\n  let child = undefined;\n  let children = this.children || [];\n  let ns = undefined;\n  let nsName = undefined;\n  let i = undefined;\n  let type = undefined;\n\n  for (i in children) {\n    if ((child = children[i]).name === 'part') {\n      part = child;\n      break;\n    }\n  }\n\n  if (!part) {\n    return;\n  }\n\n  if (part.$element) {\n    let lookupTypes = [],\n      elementChildren;\n\n    delete this.parts;\n\n    nsName = splitQName(part.$element);\n    ns = nsName.prefix;\n    let schema = definitions.schemas[definitions.xmlns[ns]];\n    this.element = schema.elements[nsName.name];\n    if (!this.element) {\n      // debug(nsName.name + \" is not present in wsdl and cannot be processed correctly.\");\n      return;\n    }\n    this.element.targetNSAlias = ns;\n    this.element.targetNamespace = definitions.xmlns[ns];\n\n    // set the optional $lookupType to be used within `client#_invoke()` when\n    // calling `wsdl#objectToDocumentXML()\n    this.element.$lookupType = part.$element;\n\n    elementChildren = this.element.children;\n\n    // get all nested lookup types (only complex types are followed)\n    if (elementChildren.length > 0) {\n      for (i = 0; i < elementChildren.length; i++) {\n        lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\n      }\n    }\n\n    // if nested lookup types where found, prepare them for furter usage\n    if (lookupTypes.length > 0) {\n      lookupTypes = lookupTypes.\n        join('_').\n        split('_').\n        filter(function removeEmptyLookupTypes(type) {\n          return type !== '^';\n        });\n\n      let schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\n\n      for (i = 0; i < lookupTypes.length; i++) {\n        lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\n      }\n    }\n\n    this.element.$lookupTypes = lookupTypes;\n\n    if (this.element.$type) {\n      type = splitQName(this.element.$type);\n      let typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\n\n      if (typeNs) {\n        if (type.name in Primitives) {\n          // this.element = this.element.$type;\n        }\n        else {\n          // first check local mapping of ns alias to namespace\n          schema = definitions.schemas[typeNs];\n          let ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\n\n\n          if (ctype) {\n            this.parts = ctype.description(definitions, schema.xmlns);\n          }\n        }\n      }\n    }\n    else {\n      let method = this.element.description(definitions, schema.xmlns);\n      this.parts = method[nsName.name];\n    }\n\n\n    this.children.splice(0, 1);\n  } else {\n    // rpc encoding\n    this.parts = {};\n    delete this.element;\n    for (i = 0; part = this.children[i]; i++) {\n      if (part.name === 'documentation') {\n        // <wsdl:documentation can be present under <wsdl:message>\n        continue;\n      }\n      assert(part.name === 'part', 'Expected part element');\n      nsName = splitQName(part.$type);\n      ns = definitions.xmlns[nsName.prefix];\n      type = nsName.name;\n      let schemaDefinition = definitions.schemas[ns];\n      if (typeof schemaDefinition !== 'undefined') {\n        this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\n      } else {\n        this.parts[part.$name] = part.$type;\n      }\n\n      if (typeof this.parts[part.$name] === 'object') {\n        this.parts[part.$name].prefix = nsName.prefix;\n        this.parts[part.$name].xmlns = ns;\n      }\n\n      this.children.splice(i--, 1);\n    }\n  }\n  this.deleteFixedAttrs();\n};\n\n/**\n * Takes a given namespaced String(for example: 'alias:property') and creates a lookupType\n * object for further use in as first (lookup) `parameterTypeObj` within the `objectToXML`\n * method and provides an entry point for the already existing code in `findChildSchemaObject`.\n *\n * @method _createLookupTypeObject\n * @param {String}            nsString          The NS String (for example \"alias:type\").\n * @param {Object}            xmlns       The fully parsed `wsdl` definitions object (including all schemas).\n * @returns {Object}\n * @private\n */\nMessageElement.prototype._createLookupTypeObject = function (nsString, xmlns) {\n  let splittedNSString = splitQName(nsString),\n    nsAlias = splittedNSString.prefix,\n    splittedName = splittedNSString.name.split('#'),\n    type = splittedName[0],\n    name = splittedName[1],\n    lookupTypeObj: any = {};\n\n  lookupTypeObj.$namespace = xmlns[nsAlias];\n  lookupTypeObj.$type = nsAlias + ':' + type;\n  lookupTypeObj.$name = name;\n\n  return lookupTypeObj;\n};\n\n/**\n * Iterates through the element and every nested child to find any defined `$type`\n * property and returns it in a underscore ('_') separated String (using '^' as default\n * value if no `$type` property was found).\n *\n * @method _getNestedLookupTypeString\n * @param {Object}            element         The element which (probably) contains nested `$type` values.\n * @returns {String}\n * @private\n */\nMessageElement.prototype._getNestedLookupTypeString = function (element) {\n  let resolvedType = '^',\n    excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\n\n  if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\n    if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\n      resolvedType += ('_' + element.$type + '#' + element.$name);\n    }\n  }\n\n  if (element.children.length > 0) {\n    let self = this;\n\n    element.children.forEach(function (child) {\n      let resolvedChildType = self._getNestedLookupTypeString(child).replace(/\\^_/, '');\n\n      if (resolvedChildType && typeof resolvedChildType === 'string') {\n        resolvedType += ('_' + resolvedChildType);\n      }\n    });\n  }\n\n  return resolvedType;\n};\n\nOperationElement.prototype.postProcess = function (definitions, tag) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'input' && child.name !== 'output')\n      continue;\n    if (tag === 'binding') {\n      this[child.name] = child;\n      children.splice(i--, 1);\n      continue;\n    }\n    let messageName = splitQName(child.$message).name;\n    let message = definitions.messages[messageName];\n    message.postProcess(definitions);\n    if (message.element) {\n      definitions.messages[message.element.$name] = message;\n      this[child.name] = message.element;\n    }\n    else {\n      this[child.name] = message;\n    }\n    children.splice(i--, 1);\n  }\n  this.deleteFixedAttrs();\n};\n\nPortTypeElement.prototype.postProcess = function (definitions) {\n  let children = this.children;\n  if (typeof children === 'undefined')\n    return;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child.name !== 'operation')\n      continue;\n    child.postProcess(definitions, 'portType');\n    this.methods[child.$name] = child;\n    children.splice(i--, 1);\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\nBindingElement.prototype.postProcess = function (definitions) {\n  let type = splitQName(this.$type).name,\n    portType = definitions.portTypes[type],\n    style = this.style,\n    children = this.children;\n  if (portType) {\n    portType.postProcess(definitions);\n    this.methods = portType.methods;\n\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'operation')\n        continue;\n      child.postProcess(definitions, 'binding');\n      children.splice(i--, 1);\n      child.style || (child.style = style);\n      let method = this.methods[child.$name];\n\n      if (method) {\n        method.style = child.style;\n        method.soapAction = child.soapAction;\n        method.inputSoap = child.input || null;\n        method.outputSoap = child.output || null;\n        method.inputSoap && method.inputSoap.deleteFixedAttrs();\n        method.outputSoap && method.outputSoap.deleteFixedAttrs();\n      }\n    }\n  }\n  delete this.$name;\n  delete this.$type;\n  this.deleteFixedAttrs();\n};\n\nServiceElement.prototype.postProcess = function (definitions) {\n  let children = this.children,\n    bindings = definitions.bindings;\n  if (children && children.length > 0) {\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child.name !== 'port')\n        continue;\n      let bindingName = splitQName(child.$binding).name;\n      let binding = bindings[bindingName];\n      if (binding) {\n        binding.postProcess(definitions);\n        this.ports[child.$name] = {\n          location: child.location,\n          binding: binding\n        };\n        children.splice(i--, 1);\n      }\n    }\n  }\n  delete this.$name;\n  this.deleteFixedAttrs();\n};\n\n\nSimpleTypeElement.prototype.description = function (definitions) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof RestrictionElement)\n      return this.$name + \"|\" + child.description();\n  }\n  return {};\n};\n\nRestrictionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n      break;\n    }\n  }\n  if (desc && this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\n\n    desc.getBase = function () {\n      return typeElement.description(definitions, schema.xmlns);\n    };\n    return desc;\n  }\n\n  // then simple element\n  let base = this.$base ? this.$base + \"|\" : \"\";\n  return base + this.children.map(function (child) {\n    return child.description();\n  }).join(\",\");\n};\n\nExtensionElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let desc = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof SequenceElement ||\n      child instanceof ChoiceElement) {\n      desc = child.description(definitions, xmlns);\n    }\n  }\n  if (this.$base) {\n    let type = splitQName(this.$base),\n      typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns];\n\n    if (typeName in Primitives) {\n      return this.$base;\n    }\n    else {\n      let typeElement = schema && (schema.complexTypes[typeName] ||\n        schema.types[typeName] || schema.elements[typeName]);\n\n      if (typeElement) {\n        let base = typeElement.description(definitions, schema.xmlns);\n        desc = _.defaultsDeep(base, desc);\n      }\n    }\n  }\n  return desc;\n};\n\nEnumerationElement.prototype.description = function () {\n  return this[this.valueKey];\n};\n\nComplexTypeElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children || [];\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ChoiceElement ||\n      child instanceof SequenceElement ||\n      child instanceof AllElement ||\n      child instanceof SimpleContentElement ||\n      child instanceof ComplexContentElement) {\n\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nComplexContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nSimpleContentElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  for (let i = 0, child; child = children[i]; i++) {\n    if (child instanceof ExtensionElement) {\n      return child.description(definitions, xmlns);\n    }\n  }\n  return {};\n};\n\nElementElement.prototype.description = function (definitions, xmlns) {\n  let element = {},\n    name = this.$name;\n  let isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\n  if (this.$minOccurs !== this.$maxOccurs && isMany) {\n    name += '[]';\n  }\n\n  if (xmlns && xmlns[TNS_PREFIX]) {\n    this.$targetNamespace = xmlns[TNS_PREFIX];\n  }\n  let type = this.$type || this.$ref;\n  if (type) {\n    type = splitQName(type);\n    let typeName = type.name,\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\n      schema = definitions.schemas[ns],\n      typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\n\n    if (ns && definitions.schemas[ns]) {\n      xmlns = definitions.schemas[ns].xmlns;\n    }\n\n    if (typeElement && !(typeName in Primitives)) {\n\n      if (!(typeName in definitions.descriptions.types)) {\n\n        let elem: any = {};\n        definitions.descriptions.types[typeName] = elem;\n        let description = typeElement.description(definitions, xmlns);\n        if (typeof description === 'string') {\n          elem = description;\n        }\n        else {\n          Object.keys(description).forEach(function (key) {\n            elem[key] = description[key];\n          });\n        }\n\n        if (this.$ref) {\n          element = elem;\n        }\n        else {\n          element[name] = elem;\n        }\n\n        if (typeof elem === 'object') {\n          elem.targetNSAlias = type.prefix;\n          elem.targetNamespace = ns;\n        }\n\n        definitions.descriptions.types[typeName] = elem;\n      }\n      else {\n        if (this.$ref) {\n          element = definitions.descriptions.types[typeName];\n        }\n        else {\n          element[name] = definitions.descriptions.types[typeName];\n        }\n      }\n\n    }\n    else {\n      element[name] = this.$type;\n    }\n  }\n  else {\n    let children = this.children;\n    element[name] = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof ComplexTypeElement) {\n        element[name] = child.description(definitions, xmlns);\n      }\n    }\n  }\n  return element;\n};\n\nAllElement.prototype.description =\n  SequenceElement.prototype.description = function (definitions, xmlns) {\n    let children = this.children;\n    let sequence = {};\n    for (let i = 0, child; child = children[i]; i++) {\n      if (child instanceof AnyElement) {\n        continue;\n      }\n      let description = child.description(definitions, xmlns);\n      for (let key in description) {\n        sequence[key] = description[key];\n      }\n    }\n    return sequence;\n  };\n\nChoiceElement.prototype.description = function (definitions, xmlns) {\n  let children = this.children;\n  let choice = {};\n  for (let i = 0, child; child = children[i]; i++) {\n    let description = child.description(definitions, xmlns);\n    for (let key in description) {\n      choice[key] = description[key];\n    }\n  }\n  return choice;\n};\n\nMessageElement.prototype.description = function (definitions) {\n  if (this.element) {\n    return this.element && this.element.description(definitions);\n  }\n  let desc = {};\n  desc[this.$name] = this.parts;\n  return desc;\n};\n\nPortTypeElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nOperationElement.prototype.description = function (definitions) {\n  let inputDesc = this.input ? this.input.description(definitions) : null;\n  let outputDesc = this.output ? this.output.description(definitions) : null;\n  return {\n    input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\n    output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\n  };\n};\n\nBindingElement.prototype.description = function (definitions) {\n  let methods = {};\n  for (let name in this.methods) {\n    let method = this.methods[name];\n    methods[name] = method.description(definitions);\n  }\n  return methods;\n};\n\nServiceElement.prototype.description = function (definitions) {\n  let ports = {};\n  for (let name in this.ports) {\n    let port = this.ports[name];\n    ports[name] = port.binding.description(definitions);\n  }\n  return ports;\n};\n\nexport let WSDL = function (definition, uri, options) {\n  let self = this,\n    fromFunc;\n\n  this.uri = uri;\n  this.callback = function () {\n  };\n  this._includesWsdl = [];\n\n  // initialize WSDL cache\n  this.WSDL_CACHE = (options || {}).WSDL_CACHE || {};\n\n  this._initializeOptions(options);\n\n  if (typeof definition === 'string') {\n    definition = stripBom(definition);\n    fromFunc = this._fromXML;\n  }\n  else if (typeof definition === 'object') {\n    fromFunc = this._fromServices;\n  }\n  else {\n    throw new Error('WSDL letructor takes either an XML string or service definition');\n  }\n\n  Promise.resolve(true).then(() => {\n    try {\n      fromFunc.call(self, definition);\n    } catch (e) {\n      return self.callback(e.message);\n    }\n\n    self.processIncludes().then(() => {\n      self.definitions.deleteFixedAttrs();\n      let services = self.services = self.definitions.services;\n      if (services) {\n        for (const name in services) {\n          services[name].postProcess(self.definitions);\n        }\n      }\n      let complexTypes = self.definitions.complexTypes;\n      if (complexTypes) {\n        for (const name in complexTypes) {\n          complexTypes[name].deleteFixedAttrs();\n        }\n      }\n\n      // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n      let bindings = self.definitions.bindings;\n      for (let bindingName in bindings) {\n        let binding = bindings[bindingName];\n        if (typeof binding.style === 'undefined') {\n          binding.style = 'document';\n        }\n        if (binding.style !== 'document')\n          continue;\n        let methods = binding.methods;\n        let topEls = binding.topElements = {};\n        for (let methodName in methods) {\n          if (methods[methodName].input) {\n            let inputName = methods[methodName].input.$name;\n            let outputName = \"\";\n            if (methods[methodName].output)\n              outputName = methods[methodName].output.$name;\n            topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\n          }\n        }\n      }\n\n      // prepare soap envelope xmlns definition string\n      self.xmlnsInEnvelope = self._xmlnsMap();\n      self.callback(null, self);\n    }).catch(err => self.callback(err));\n\n  });\n\n  // process.nextTick(function() {\n  //   try {\n  //     fromFunc.call(self, definition);\n  //   } catch (e) {\n  //     return self.callback(e.message);\n  //   }\n\n  //   self.processIncludes(function(err) {\n  //     let name;\n  //     if (err) {\n  //       return self.callback(err);\n  //     }\n\n  //     self.definitions.deleteFixedAttrs();\n  //     let services = self.services = self.definitions.services;\n  //     if (services) {\n  //       for (name in services) {\n  //         services[name].postProcess(self.definitions);\n  //       }\n  //     }\n  //     let complexTypes = self.definitions.complexTypes;\n  //     if (complexTypes) {\n  //       for (name in complexTypes) {\n  //         complexTypes[name].deleteFixedAttrs();\n  //       }\n  //     }\n\n  //     // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\n  //     let bindings = self.definitions.bindings;\n  //     for (let bindingName in bindings) {\n  //       let binding = bindings[bindingName];\n  //       if (typeof binding.style === 'undefined') {\n  //         binding.style = 'document';\n  //       }\n  //       if (binding.style !== 'document')\n  //         continue;\n  //       let methods = binding.methods;\n  //       let topEls = binding.topElements = {};\n  //       for (let methodName in methods) {\n  //         if (methods[methodName].input) {\n  //           let inputName = methods[methodName].input.$name;\n  //           let outputName=\"\";\n  //           if(methods[methodName].output )\n  //             outputName = methods[methodName].output.$name;\n  //           topEls[inputName] = {\"methodName\": methodName, \"outputName\": outputName};\n  //         }\n  //       }\n  //     }\n\n  //     // prepare soap envelope xmlns definition string\n  //     self.xmlnsInEnvelope = self._xmlnsMap();\n\n  //     self.callback(err, self);\n  //   });\n\n  // });\n};\n\nWSDL.prototype.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\n\nWSDL.prototype.ignoreBaseNameSpaces = false;\n\nWSDL.prototype.valueKey = '$value';\nWSDL.prototype.xmlKey = '$xml';\n\nWSDL.prototype._initializeOptions = function (options) {\n  this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\n  this.options = {};\n\n  let ignoredNamespaces = options ? options.ignoredNamespaces : null;\n\n  if (ignoredNamespaces &&\n    (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\n    if (ignoredNamespaces.override) {\n      this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\n    } else {\n      this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\n    }\n  } else {\n    this.options.ignoredNamespaces = this.ignoredNamespaces;\n  }\n\n  this.options.valueKey = options.valueKey || this.valueKey;\n  this.options.xmlKey = options.xmlKey || this.xmlKey;\n  if (options.escapeXML !== undefined) {\n    this.options.escapeXML = options.escapeXML;\n  } else {\n    this.options.escapeXML = true;\n  }\n  if (options.returnFault !== undefined) {\n    this.options.returnFault = options.returnFault;\n  } else {\n    this.options.returnFault = false;\n  }\n  this.options.handleNilAsNull = !!options.handleNilAsNull;\n\n  if (options.namespaceArrayElements !== undefined) {\n    this.options.namespaceArrayElements = options.namespaceArrayElements;\n  } else {\n    this.options.namespaceArrayElements = true;\n  }\n\n  // Allow any request headers to keep passing through\n  this.options.wsdl_headers = options.wsdl_headers;\n  this.options.wsdl_options = options.wsdl_options;\n  if (options.httpClient) {\n    this.options.httpClient = options.httpClient;\n  }\n\n  // The supplied request-object should be passed through\n  if (options.request) {\n    this.options.request = options.request;\n  }\n\n  let ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\n  if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\n    this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\n  } else {\n    this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\n  }\n\n  // Works only in client\n  this.options.forceSoap12Headers = options.forceSoap12Headers;\n  this.options.customDeserializer = options.customDeserializer;\n\n  if (options.overrideRootElement !== undefined) {\n    this.options.overrideRootElement = options.overrideRootElement;\n  }\n\n  this.options.useEmptyTag = !!options.useEmptyTag;\n};\n\nWSDL.prototype.onReady = function (callback) {\n  if (callback)\n    this.callback = callback;\n};\n\nWSDL.prototype._processNextInclude = async function (includes) {\n  let self = this,\n    include = includes.shift(),\n    options;\n\n  if (!include)\n    return; // callback();\n\n  let includePath;\n  if (!/^https?:/.test(self.uri) && !/^https?:/.test(include.location)) {\n    // includePath = path.resolve(path.dirname(self.uri), include.location);\n  } else {\n    includePath = url.resolve(self.uri || '', include.location);\n  }\n\n  options = _.assign({}, this.options);\n  // follow supplied ignoredNamespaces option\n  options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\n  options.WSDL_CACHE = this.WSDL_CACHE;\n\n  const wsdl = await open_wsdl_recursive(includePath, options)\n  self._includesWsdl.push(wsdl);\n\n  if (wsdl.definitions instanceof DefinitionsElement) {\n    _.mergeWith(self.definitions, wsdl.definitions, function (a, b) {\n      return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n    });\n  } else {\n    self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  }\n\n  return self._processNextInclude(includes);\n\n  // open_wsdl_recursive(includePath, options, function(err, wsdl) {\n  //   if (err) {\n  //     return callback(err);\n  //   }\n\n  //   self._includesWsdl.push(wsdl);\n\n  //   if (wsdl.definitions instanceof DefinitionsElement) {\n  //     _.mergeWith(self.definitions, wsdl.definitions, function(a,b) {\n  //       return (a instanceof SchemaElement) ? a.merge(b) : undefined;\n  //     });\n  //   } else {\n  //     self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\n  //   }\n  //   self._processNextInclude(includes, function(err) {\n  //     callback(err);\n  //   });\n  // });\n};\n\nWSDL.prototype.processIncludes = async function () {\n  let schemas = this.definitions.schemas,\n    includes = [];\n\n  for (let ns in schemas) {\n    let schema = schemas[ns];\n    includes = includes.concat(schema.includes || []);\n  }\n\n  return this._processNextInclude(includes);\n};\n\nWSDL.prototype.describeServices = function () {\n  let services = {};\n  for (let name in this.services) {\n    let service = this.services[name];\n    services[name] = service.description(this.definitions);\n  }\n  return services;\n};\n\nWSDL.prototype.toXML = function () {\n  return this.xml || '';\n};\n\nWSDL.prototype.xmlToObject = function (xml, callback) {\n  let self = this;\n  let p = typeof callback === 'function' ? {} : sax.parser(true);\n  let objectName = null;\n  let root: any = {};\n  let schema = {};\n  /*let schema = {\n    Envelope: {\n      Header: {\n        Security: {\n          UsernameToken: {\n            Username: 'string',\n            Password: 'string'\n          }\n        }\n      },\n      Body: {\n        Fault: {\n          faultcode: 'string',\n          faultstring: 'string',\n          detail: 'string'\n        }\n      }\n    }\n  };*/\n  if(!this.options.forceSoap12Headers){\n    schema ={\n      Envelope: {\n        Header: {\n          Security: {\n            UsernameToken: {\n              Username:'string',\n              Password:'string'\n            }\n          }\n        },\n        Body:{\n          Fault: {\n            faultcode: 'string',\n            faultstring: 'string',\n            detail:'string'\n          }\n        }\n      }\n    }\n  } else {\n    schema = {\n      Envelope: {\n        Header: {\n          Security: {\n            UsernameToken: {\n              Username: 'string',\n              Password: 'string'\n            }\n          }\n        },\n        Body: {\n          Code: {\n            Value: 'string',\n            Subcode:\n                {\n                  Value: 'string'\n                }\n          },\n          Reason: {Text: 'string'},\n          statusCode: 'number',\n          Detail: 'object'\n        }\n\n      }\n\n    }\n  }\n      let stack: any[] = [{ name: null, object: root, schema: schema }];\n  let xmlns: any = {};\n\n  let refs = {}, id; // {id:{hrefs:[],obj:}, ...}\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs: any = node.attributes;\n    let name = splitQName(nsName).name,\n      attributeName,\n      top = stack[stack.length - 1],\n      topSchema = top.schema,\n      elementAttributes = {},\n      hasNonXmlnsAttribute = false,\n      hasNilAttribute = false,\n      obj = {};\n    let originalName = name;\n\n    if (!objectName && top.name === 'Body' && name !== 'Fault') {\n      let message = self.definitions.messages[name];\n      // Support RPC/literal messages where response body contains one element named\n      // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\n      if (!message) {\n        try {\n          // Determine if this is request or response\n          let isInput = false;\n          let isOutput = false;\n          if ((/Response$/).test(name)) {\n            isOutput = true;\n            name = name.replace(/Response$/, '');\n          } else if ((/Request$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Request$/, '');\n          } else if ((/Solicit$/).test(name)) {\n            isInput = true;\n            name = name.replace(/Solicit$/, '');\n          }\n          // Look up the appropriate message as given in the portType's operations\n          let portTypes = self.definitions.portTypes;\n          let portTypeNames = Object.keys(portTypes);\n          // Currently this supports only one portType definition.\n          let portType = portTypes[portTypeNames[0]];\n          if (isInput) {\n            name = portType.methods[name].input.$name;\n          } else {\n            name = portType.methods[name].output.$name;\n          }\n          message = self.definitions.messages[name];\n          // 'cache' this alias to speed future lookups\n          self.definitions.messages[originalName] = self.definitions.messages[name];\n        } catch (e) {\n          if (self.options.returnFault) {\n            p.onerror(e);\n          }\n        }\n      }\n\n      topSchema = message.description(self.definitions);\n      objectName = originalName;\n    }\n\n    if (attrs.href) {\n      id = attrs.href.substr(1);\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n      refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\n    }\n    if (id = attrs.id) {\n      if (!refs[id]) {\n        refs[id] = { hrefs: [], obj: null };\n      }\n    }\n\n    //Handle element attributes\n    for (attributeName in attrs) {\n      if (/^xmlns:|^xmlns$/.test(attributeName)) {\n        xmlns[splitQName(attributeName).name] = attrs[attributeName];\n        continue;\n      }\n      hasNonXmlnsAttribute = true;\n      elementAttributes[attributeName] = attrs[attributeName];\n    }\n\n    for (attributeName in elementAttributes) {\n      let res = splitQName(attributeName);\n      if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance' && elementAttributes[attributeName] &&\n        (elementAttributes[attributeName].toLowerCase() === 'true' || elementAttributes[attributeName] === '1')\n      ) {\n        hasNilAttribute = true;\n        break;\n      }\n    }\n\n    if (hasNonXmlnsAttribute) {\n      obj[self.options.attributesKey] = elementAttributes;\n    }\n\n    // Pick up the schema for the type specified in element's xsi:type attribute.\n    let xsiTypeSchema;\n    let xsiType = elementAttributes['xsi:type'];\n    if (xsiType) {\n      let type = splitQName(xsiType);\n      let typeURI;\n      if (type.prefix === TNS_PREFIX) {\n        // In case of xsi:type = \"MyType\"\n        typeURI = xmlns[type.prefix] || xmlns.xmlns;\n      } else {\n        typeURI = xmlns[type.prefix];\n      }\n      let typeDef = self.findSchemaObject(typeURI, type.name);\n      if (typeDef) {\n        xsiTypeSchema = typeDef.description(self.definitions);\n      }\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      name = name + '[]';\n    }\n    stack.push({\n      name: originalName,\n      object: obj,\n      schema: (xsiTypeSchema || (topSchema && topSchema[name])),\n      id: attrs.id,\n      nil: hasNilAttribute\n    });\n  };\n\n  p.onclosetag = function (nsName) {\n    let cur: any = stack.pop(),\n      obj = cur.object,\n      top = stack[stack.length - 1],\n      topObject = top.object,\n      topSchema = top.schema,\n      name = splitQName(nsName).name;\n\n    if (typeof cur.schema === 'string' && (cur.schema === 'string' || (<string>cur.schema).split(':')[1] === 'string')) {\n      if (typeof obj === 'object' && Object.keys(obj).length === 0) obj = cur.object = '';\n    }\n\n    if (cur.nil === true) {\n      if (self.options.handleNilAsNull) {\n        obj = null;\n      } else {\n        return;\n      }\n    }\n\n    if (_.isPlainObject(obj) && !Object.keys(obj).length) {\n      obj = null;\n    }\n\n    if (topSchema && topSchema[name + '[]']) {\n      if (!topObject[name]) {\n        topObject[name] = [];\n      }\n      topObject[name].push(obj);\n    } else if (name in topObject) {\n      if (!Array.isArray(topObject[name])) {\n        topObject[name] = [topObject[name]];\n      }\n      topObject[name].push(obj);\n    } else {\n      topObject[name] = obj;\n    }\n\n    if (cur.id) {\n      refs[cur.id].obj = obj;\n    }\n  };\n\n  p.oncdata = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\n      let top = stack[stack.length - 1];\n      let value = self.xmlToObject(text);\n      if (top.object[self.options.attributesKey]) {\n        top.object[self.options.valueKey] = value;\n      } else {\n        top.object = value;\n      }\n    } else {\n      p.ontext(originalText);\n    }\n  };\n\n  p.onerror = function (e) {\n    p.resume();\n    throw {\n      Fault: {\n        faultcode: 500,\n        faultstring: 'Invalid XML',\n        detail: new Error(e).message,\n        statusCode: 500\n      }\n    };\n  };\n\n  p.ontext = function (text) {\n    let originalText = text;\n    text = trim(text);\n    if (!text.length) {\n      return;\n    }\n\n    let top = stack[stack.length - 1];\n    let name = splitQName(top.schema).name,\n      value;\n    if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\n      value = self.options.customDeserializer[name](text, top);\n    }\n    else {\n      if (name === 'int' || name === 'integer') {\n        value = parseInt(text, 10);\n      } else if (name === 'bool' || name === 'boolean') {\n        value = text.toLowerCase() === 'true' || text === '1';\n      } else if (name === 'dateTime' || name === 'date') {\n        value = new Date(text);\n      } else {\n        if (self.options.preserveWhitespace) {\n          text = originalText;\n        }\n        // handle string or other types\n        if (typeof top.object !== 'string') {\n          value = text;\n        } else {\n          value = top.object + text;\n        }\n      }\n    }\n\n    if (top.object[self.options.attributesKey]) {\n      top.object[self.options.valueKey] = value;\n    } else {\n      top.object = value;\n    }\n  };\n\n  if (typeof callback === 'function') {\n    // we be streaming\n    let saxStream = sax.createStream(true);\n    saxStream.on('opentag', p.onopentag);\n    saxStream.on('closetag', p.onclosetag);\n    saxStream.on('cdata', p.oncdata);\n    saxStream.on('text', p.ontext);\n    xml.pipe(saxStream)\n      .on('error', function (err) {\n        callback(err);\n      })\n      .on('end', function () {\n        let r;\n        try {\n          r = finish();\n        } catch (e) {\n          return callback(e);\n        }\n        callback(null, r);\n      });\n    return;\n  }\n  p.write(xml).close();\n\n  return finish();\n\n  function finish() {\n    // MultiRef support: merge objects instead of replacing\n    for (let n in refs) {\n      let ref = refs[n];\n      for (let i = 0; i < ref.hrefs.length; i++) {\n        _.assign(ref.hrefs[i].obj, ref.obj);\n      }\n    }\n\n    if (root.Envelope) {\n      let body = root.Envelope.Body;\n      let error: any;\n      if (body && body.Fault) {\n        if(!body.Fault.Code) {\n          let code = body.Fault.faultcode && body.Fault.faultcode.$value;\n          let string = body.Fault.faultstring && body.Fault.faultstring.$value;\n          let detail = body.Fault.detail && body.Fault.detail.$value;\n\n          code = code || body.Fault.faultcode;\n          string = string || body.Fault.faultstring;\n          detail = detail || body.Fault.detail;\n\n          let error: any = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n        } else {\n          let code = body.Fault.Code.Value;\n          let string = body.Fault.Reason.Text.$value;\n          let detail = body.Fault.Detail.info;\n          error = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\n        }\n\n        error.root = root;\n        throw body.Fault;\n      }\n      return root.Envelope;\n    }\n    return root;\n  }\n};\n\n/**\n * Look up a XSD type or element by namespace URI and name\n * @param {String} nsURI Namespace URI\n * @param {String} qname Local or qualified name\n * @returns {*} The XSD type/element definition\n */\nWSDL.prototype.findSchemaObject = function (nsURI, qname) {\n  if (!nsURI || !qname) {\n    return null;\n  }\n\n  let def = null;\n\n  if (this.definitions.schemas) {\n    let schema = this.definitions.schemas[nsURI];\n    if (schema) {\n      if (qname.indexOf(':') !== -1) {\n        qname = qname.substring(qname.indexOf(':') + 1, qname.length);\n      }\n\n      // if the client passed an input element which has a `$lookupType` property instead of `$type`\n      // the `def` is found in `schema.elements`.\n      def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\n    }\n  }\n\n  return def;\n};\n\n/**\n * Create document style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @param {String} type\n */\nWSDL.prototype.objectToDocumentXML = function (name, params, nsPrefix, nsURI, type) {\n  //If user supplies XML already, just use that.  XML Declaration should not be present.\n  if (params && params._xml) {\n    return params._xml;\n  }\n  let args = {};\n  args[name] = params;\n  let parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\n  return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\n};\n\n/**\n * Create RPC style xml string from the parameters\n * @param {String} name\n * @param {*} params\n * @param {String} nsPrefix\n * @param {String} nsURI\n * @returns {string}\n */\nWSDL.prototype.objectToRpcXML = function (name, params, nsPrefix, nsURI, isParts) {\n  let parts = [];\n  let defs = this.definitions;\n  let nsAttrName = '_xmlns';\n\n  nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\n\n  nsURI = nsURI || defs.xmlns[nsPrefix];\n  nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\n\n  parts.push(['<', nsPrefix, name, '>'].join(''));\n\n  for (let key in params) {\n    if (!params.hasOwnProperty(key)) {\n      continue;\n    }\n    if (key !== nsAttrName) {\n      let value = params[key];\n      let prefixedKey = (isParts ? '' : nsPrefix) + key;\n      let attributes = [];\n      if (typeof value === 'object' && value.hasOwnProperty(this.options.attributesKey)) {\n        let attrs = value[this.options.attributesKey];\n        for (let n in attrs) {\n          attributes.push(' ' + n + '=' + '\"' + attrs[n] + '\"');\n        }\n      }\n      parts.push(['<', prefixedKey].concat(attributes).concat('>').join(''));\n      parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\n      parts.push(['</', prefixedKey, '>'].join(''));\n    }\n  }\n  parts.push(['</', nsPrefix, name, '>'].join(''));\n  return parts.join('');\n};\n\n\nfunction appendColon(ns) {\n  return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\n}\n\nfunction noColonNameSpace(ns) {\n  return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\n}\n\nWSDL.prototype.isIgnoredNameSpace = function (ns) {\n  return this.options.ignoredNamespaces.indexOf(ns) > -1;\n};\n\nWSDL.prototype.filterOutIgnoredNameSpace = function (ns) {\n  let namespace = noColonNameSpace(ns);\n  return this.isIgnoredNameSpace(namespace) ? '' : namespace;\n};\n\n\n\n/**\n * Convert an object to XML.  This is a recursive method as it calls itself.\n *\n * @param {Object} obj the object to convert.\n * @param {String} name the name of the element (if the object being traversed is\n * an element).\n * @param {String} nsPrefix the namespace prefix of the object I.E. xsd.\n * @param {String} nsURI the full namespace of the object I.E. http://w3.org/schema.\n * @param {Boolean} isFirst whether or not this is the first item being traversed.\n * @param {?} xmlnsAttr\n * @param {?} parameterTypeObject\n * @param {NamespaceContext} nsContext Namespace context\n */\nWSDL.prototype.objectToXML = function (obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\n  let self = this;\n  let schema = this.definitions.schemas[nsURI];\n\n  let parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\n  if (typeof parentNsPrefix !== 'undefined') {\n    //we got the parentNsPrefix for our array. setting the namespace-letiable back to the current namespace string\n    nsPrefix = nsPrefix.current;\n  }\n\n  parentNsPrefix = noColonNameSpace(parentNsPrefix);\n  if (this.isIgnoredNameSpace(parentNsPrefix)) {\n    parentNsPrefix = '';\n  }\n\n  let soapHeader = !schema;\n  let qualified = schema && schema.$elementFormDefault === 'qualified';\n  let parts = [];\n  let prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\n\n  let xmlnsAttrib = '';\n  if (nsURI && isFirst) {\n    if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\n      self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute) {\n        xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\n      });\n    } else {\n      if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\n        // resolve the prefix namespace\n        xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\n      }\n      // only add default namespace if the schema elementFormDefault is qualified\n      if (qualified || soapHeader) xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\n    }\n  }\n\n  if (!nsContext) {\n    nsContext = new NamespaceContext();\n    nsContext.declareNamespace(nsPrefix, nsURI);\n  } else {\n    nsContext.pushContext();\n  }\n\n  // explicitly use xmlns attribute if available\n  if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\n    xmlnsAttrib = xmlnsAttr;\n  }\n\n  let ns = '';\n\n  if (self.options.overrideRootElement && isFirst) {\n    ns = self.options.overrideRootElement.namespace;\n  } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\n    ns = nsPrefix;\n  }\n\n  let i, n;\n  // start building out XML string.\n  if (Array.isArray(obj)) {\n    for (i = 0, n = obj.length; i < n; i++) {\n      let item = obj[i];\n      let arrayAttr = self.processAttributes(item, nsContext),\n        correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\n\n      let body = self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n\n      let openingTagParts = ['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib];\n\n      if (body === '' && self.options.useEmptyTag) {\n        // Use empty (self-closing) tags if no contents\n        openingTagParts.push(' />');\n        parts.push(openingTagParts.join(''));\n      } else {\n        openingTagParts.push('>');\n        if (self.options.namespaceArrayElements || i === 0) {\n          parts.push(openingTagParts.join(''));\n        }\n        parts.push(body);\n        if (self.options.namespaceArrayElements || i === n - 1) {\n          parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (typeof obj === 'object') {\n    for (name in obj) {\n      if (!obj.hasOwnProperty(name)) continue;\n      //don't process attributes as element\n      if (name === self.options.attributesKey) {\n        continue;\n      }\n      //Its the value of a xml object. Return it directly.\n      if (name === self.options.xmlKey) {\n        nsContext.popContext();\n        return obj[name];\n      }\n      //Its the value of an item. Return it directly.\n      if (name === self.options.valueKey) {\n        nsContext.popContext();\n        return xmlEscape(obj[name]);\n      }\n\n      let child = obj[name];\n      if (typeof child === 'undefined') {\n        continue;\n      }\n\n      let attr = self.processAttributes(child, nsContext);\n\n      let value = '';\n      let nonSubNameSpace = '';\n      let emptyNonSubNameSpace = false;\n\n      let nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\n      if (nameWithNsRegex) {\n        nonSubNameSpace = nameWithNsRegex[1] + ':';\n        name = nameWithNsRegex[2];\n      } else if (name[0] === ':') {\n        emptyNonSubNameSpace = true;\n        name = name.substr(1);\n      }\n\n      if (isFirst) {\n        value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\n      } else {\n\n        if (self.definitions.schemas) {\n          if (schema) {\n            let childSchemaObject = self.findChildSchemaObject(schemaObject, name);\n            //find sub namespace if not a primitive\n            if (childSchemaObject &&\n              ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\n                childSchemaObject.$ref || childSchemaObject.$name)) {\n              /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\n               This is because in some services the child nodes do not need the baseNameSpace.\n               */\n\n              let childNsPrefix: any = '';\n              let childName = '';\n              let childNsURI;\n              let childXmlnsAttrib = '';\n\n              let elementQName = childSchemaObject.$ref || childSchemaObject.$name;\n              if (elementQName) {\n                elementQName = splitQName(elementQName);\n                childName = elementQName.name;\n                if (elementQName.prefix === TNS_PREFIX) {\n                  // Local element\n                  childNsURI = childSchemaObject.$targetNamespace;\n                  childNsPrefix = nsContext.registerNamespace(childNsURI);\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                } else {\n                  childNsPrefix = elementQName.prefix;\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\n                    childNsPrefix = nsPrefix;\n                  }\n                  childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\n                }\n\n                let unqualified = false;\n                // Check qualification form for local elements\n                if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\n                  if (childSchemaObject.$form === 'unqualified') {\n                    unqualified = true;\n                  } else if (childSchemaObject.$form === 'qualified') {\n                    unqualified = false;\n                  } else {\n                    unqualified = schema.$elementFormDefault !== 'qualified';\n                  }\n                }\n                if (unqualified) {\n                  childNsPrefix = '';\n                }\n\n                if (childNsURI && childNsPrefix) {\n                  if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\n                    childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\n                    xmlnsAttrib += childXmlnsAttrib;\n                  }\n                }\n              }\n\n              let resolvedChildSchemaObject;\n              if (childSchemaObject.$type) {\n                let typeQName = splitQName(childSchemaObject.$type);\n                let typePrefix = typeQName.prefix;\n                let typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\n                childNsURI = typeURI;\n                if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\n                  // Add the prefix/namespace mapping, but not declare it\n                  nsContext.addNamespace(typePrefix, typeURI);\n                }\n                resolvedChildSchemaObject =\n                  self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\n              } else {\n                resolvedChildSchemaObject =\n                  self.findSchemaObject(childNsURI, childName) || childSchemaObject;\n              }\n\n              if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = nsPrefix;\n                childNsURI = nsURI;\n              }\n\n              if (this.options.ignoreBaseNameSpaces) {\n                childNsPrefix = '';\n                childNsURI = '';\n              }\n\n              ns = childNsPrefix;\n\n              if (Array.isArray(child)) {\n                //for arrays, we need to remember the current namespace\n                childNsPrefix = {\n                  current: childNsPrefix,\n                  parent: ns\n                };\n              } else {\n                //parent (array) already got the namespace\n                childXmlnsAttrib = null;\n              }\n\n              value = self.objectToXML(child, name, childNsPrefix, childNsURI,\n                false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\n            } else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\n              //if parent object has complex type defined and child not found in parent\n              let completeChildParamTypeObject = self.findChildSchemaObject(\n                obj[self.options.attributesKey].xsi_type.type,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n\n              nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\n              nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns);\n              value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix,\n                obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\n            } else {\n              if (Array.isArray(child)) {\n                name = nonSubNameSpace + name;\n              }\n\n              value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n            }\n          } else {\n            value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\n          }\n        }\n      }\n\n      ns = noColonNameSpace(ns);\n      if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\n        ns = nsPrefix;\n      } else if (this.isIgnoredNameSpace(ns)) {\n        ns = '';\n      }\n\n      let useEmptyTag = !value && self.options.useEmptyTag;\n      if (!Array.isArray(child)) {\n        // start tag\n        parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\n          (child === null ? ' xsi:nil=\"true\"' : ''),\n          useEmptyTag ? ' />' : '>'\n        ].join(''));\n      }\n\n      if (!useEmptyTag) {\n        parts.push(value);\n        if (!Array.isArray(child)) {\n          // end tag\n          parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\n        }\n      }\n    }\n  } else if (obj !== undefined) {\n    parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\n  }\n  nsContext.popContext();\n  return parts.join('');\n};\n\nWSDL.prototype.processAttributes = function (child, nsContext) {\n  let attr = '';\n\n  if (child === null) {\n    child = [];\n  }\n\n  let attrObj = child[this.options.attributesKey];\n  if (attrObj && attrObj.xsi_type) {\n    let xsiType = attrObj.xsi_type;\n\n    let prefix = xsiType.prefix || xsiType.namespace;\n    // Generate a new namespace for complex extension if one not provided\n    if (!prefix) {\n      prefix = nsContext.registerNamespace(xsiType.xmlns);\n    } else {\n      nsContext.declareNamespace(prefix, xsiType.xmlns);\n    }\n    xsiType.prefix = prefix;\n  }\n\n\n  if (attrObj) {\n    for (let attrKey in attrObj) {\n      //handle complex extension separately\n      if (attrKey === 'xsi_type') {\n        let attrValue = attrObj[attrKey];\n        attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\n        attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\n\n        continue;\n      } else {\n        attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\n      }\n    }\n  }\n\n  return attr;\n};\n\n/**\n * Look up a schema type definition\n * @param name\n * @param nsURI\n * @returns {*}\n */\nWSDL.prototype.findSchemaType = function (name, nsURI) {\n  if (!this.definitions.schemas || !name || !nsURI) {\n    return null;\n  }\n\n  let schema = this.definitions.schemas[nsURI];\n  if (!schema || !schema.complexTypes) {\n    return null;\n  }\n\n  return schema.complexTypes[name];\n};\n\nWSDL.prototype.findChildSchemaObject = function (parameterTypeObj, childName, backtrace) {\n  if (!parameterTypeObj || !childName) {\n    return null;\n  }\n\n  if (!backtrace) {\n    backtrace = [];\n  }\n\n  if (backtrace.indexOf(parameterTypeObj) >= 0) {\n    // We've recursed back to ourselves; break.\n    return null;\n  } else {\n    backtrace = backtrace.concat([parameterTypeObj]);\n  }\n\n  let found = null,\n    i = 0,\n    child,\n    ref;\n\n  if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\n    let types = parameterTypeObj.$lookupTypes;\n\n    for (i = 0; i < types.length; i++) {\n      let typeObj = types[i];\n\n      if (typeObj.$name === childName) {\n        found = typeObj;\n        break;\n      }\n    }\n  }\n\n  let object = parameterTypeObj;\n  if (object.$name === childName && object.name === 'element') {\n    return object;\n  }\n  if (object.$ref) {\n    ref = splitQName(object.$ref);\n    if (ref.name === childName) {\n      return object;\n    }\n  }\n\n  let childNsURI;\n\n  // want to avoid unecessary recursion to improve performance\n  if (object.$type && backtrace.length === 1) {\n    let typeInfo = splitQName(object.$type);\n    if (typeInfo.prefix === TNS_PREFIX) {\n      childNsURI = parameterTypeObj.$targetNamespace;\n    } else {\n      childNsURI = this.definitions.xmlns[typeInfo.prefix];\n    }\n    let typeDef = this.findSchemaType(typeInfo.name, childNsURI);\n    if (typeDef) {\n      return this.findChildSchemaObject(typeDef, childName, backtrace);\n    }\n  }\n\n  if (object.children) {\n    for (i = 0, child; child = object.children[i]; i++) {\n      found = this.findChildSchemaObject(child, childName, backtrace);\n      if (found) {\n        break;\n      }\n\n      if (child.$base) {\n        let baseQName = splitQName(child.$base);\n        let childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\n        childNsURI = child.xmlns[baseQName.prefix] || this.definitions.xmlns[baseQName.prefix];\n\n        let foundBase = this.findSchemaType(baseQName.name, childNsURI);\n\n        if (foundBase) {\n          found = this.findChildSchemaObject(foundBase, childName, backtrace);\n\n          if (found) {\n            found.$baseNameSpace = childNameSpace;\n            found.$type = childNameSpace + ':' + childName;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if (!found && object.$name === childName) {\n    return object;\n  }\n\n  return found;\n};\n\nWSDL.prototype._parse = function (xml) {\n  let self = this,\n    p = sax.parser(true),\n    stack = [],\n    root = null,\n    types = null,\n    schema = null,\n    options = self.options;\n\n  p.onopentag = function (node) {\n    let nsName = node.name;\n    let attrs = node.attributes;\n\n    let top = stack[stack.length - 1];\n    let name;\n    if (top) {\n      try {\n        top.startElement(stack, nsName, attrs, options);\n      } catch (e) {\n        if (self.options.strict) {\n          throw e;\n        } else {\n          stack.push(new Element(nsName, attrs, options));\n        }\n      }\n    } else {\n      name = splitQName(nsName).name;\n      if (name === 'definitions') {\n        root = new DefinitionsElement(nsName, attrs, options);\n        stack.push(root);\n      } else if (name === 'schema') {\n        // Shim a structure in here to allow the proper objects to be created when merging back.\n        root = new DefinitionsElement('definitions', {}, {});\n        types = new TypesElement('types', {}, {});\n        schema = new SchemaElement(nsName, attrs, options);\n        types.addChild(schema);\n        root.addChild(types);\n        stack.push(schema);\n      } else {\n        throw new Error('Unexpected root element of WSDL or include');\n      }\n    }\n  };\n\n  p.onclosetag = function (name) {\n    let top = stack[stack.length - 1];\n    assert(top, 'Unmatched close tag: ' + name);\n\n    top.endElement(stack, name);\n  };\n\n  p.write(xml).close();\n\n  return root;\n};\n\nWSDL.prototype._fromXML = function (xml) {\n  this.definitions = this._parse(xml);\n  this.definitions.descriptions = {\n    types: {}\n  };\n  this.xml = xml;\n};\n\nWSDL.prototype._fromServices = function (services) {\n\n};\n\n\n\nWSDL.prototype._xmlnsMap = function () {\n  let xmlns = this.definitions.xmlns;\n  let str = '';\n  for (let alias in xmlns) {\n    if (alias === '' || alias === TNS_PREFIX) {\n      continue;\n    }\n    let ns = xmlns[alias];\n    switch (ns) {\n      case \"http://xml.apache.org/xml-soap\": // apachesoap\n      case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\n      case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\n      case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\n      case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\n      case \"http://www.w3.org/2001/XMLSchema\": // xsd\n        continue;\n    }\n    if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://www.w3.org/')) {\n      continue;\n    }\n    if (~ns.indexOf('http://xml.apache.org/')) {\n      continue;\n    }\n    str += ' xmlns:' + alias + '=\"' + ns + '\"';\n  }\n  return str;\n};\n\n/*\n * Have another function to load previous WSDLs as we\n * don't want this to be invoked externally (expect for tests)\n * This will attempt to fix circular dependencies with XSD files,\n * Given\n * - file.wsdl\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * - A.xsd\n *   - xs:import namespace=\"B\" schemaLocation: B.xsd\n * - B.xsd\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\n * file.wsdl will start loading, import A, then A will import B, which will then import A\n * Because A has already started to load previously it will be returned right away and\n * have an internal circular reference\n * B would then complete loading, then A, then file.wsdl\n * By the time file A starts processing its includes its definitions will be already loaded,\n * this is the only thing that B will depend on when \"opening\" A\n */\nfunction open_wsdl_recursive(uri, options): Promise<any> {\n  let fromCache,\n    WSDL_CACHE;\n\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  WSDL_CACHE = options.WSDL_CACHE;\n\n  if (fromCache = WSDL_CACHE[uri]) {\n    // return callback.call(fromCache, null, fromCache);\n    return fromCache;\n  }\n\n  return open_wsdl(uri, options);\n}\n\nexport async function open_wsdl(uri, options): Promise<any> {\n  // if (typeof options === 'function') {\n  //   callback = options;\n  //   options = {};\n  // }\n\n  // initialize cache when calling open_wsdl directly\n  let WSDL_CACHE = options.WSDL_CACHE || {};\n  let request_headers = options.wsdl_headers;\n  let request_options = options.wsdl_options;\n\n  // let wsdl;\n  // if (!/^https?:/.test(uri)) {\n  //   // debug('Reading file: %s', uri);\n  //   // fs.readFile(uri, 'utf8', function(err, definition) {\n  //   //   if (err) {\n  //   //     callback(err);\n  //   //   }\n  //   //   else {\n  //   //     wsdl = new WSDL(definition, uri, options);\n  //   //     WSDL_CACHE[ uri ] = wsdl;\n  //   //     wsdl.WSDL_CACHE = WSDL_CACHE;\n  //   //     wsdl.onReady(callback);\n  //   //   }\n  //   // });\n  // }\n  // else {\n  //   debug('Reading url: %s', uri);\n  //   let httpClient = options.httpClient || new HttpClient(options);\n  //   httpClient.request(uri, null /* options */, function(err, response, definition) {\n  //     if (err) {\n  //       callback(err);\n  //     } else if (response && response.statusCode === 200) {\n  //       wsdl = new WSDL(definition, uri, options);\n  //       WSDL_CACHE[ uri ] = wsdl;\n  //       wsdl.WSDL_CACHE = WSDL_CACHE;\n  //       wsdl.onReady(callback);\n  //     } else {\n  //       callback(new Error('Invalid WSDL URL: ' + uri + \"\\n\\n\\r Code: \" + response.statusCode + \"\\n\\n\\r Response Body: \" + response.body));\n  //     }\n  //   }, request_headers, request_options);\n  // }\n  // return wsdl;\n\n  const httpClient: HttpClient = options.httpClient;\n  const wsdlDef = await httpClient.get(uri, { responseType: 'text' }).toPromise();\n  const wsdlObj = await new Promise((resolve) => {\n    const wsdl = new WSDL(wsdlDef, uri, options);\n    WSDL_CACHE[uri] = wsdl;\n    wsdl.WSDL_CACHE = WSDL_CACHE;\n    wsdl.onReady(resolve(wsdl));\n  });\n  return wsdlObj;\n}\n","import * as _ from 'lodash';\nimport { Buffer } from 'buffer';\n\nexport function BasicAuthSecurity(username, password, defaults) {\n  this._username = username;\n  this._password = password;\n  this.defaults = {};\n  _.merge(this.defaults, defaults);\n}\n\nBasicAuthSecurity.prototype.addHeaders = function(headers) {\n  headers.Authorization = 'Basic ' + new Buffer((this._username + ':' + this._password) || '').toString('base64');\n};\n\nBasicAuthSecurity.prototype.toXML = function() {\n  return '';\n};\n\nBasicAuthSecurity.prototype.addOptions = function(options) {\n  _.merge(options, this.defaults);\n};\n","\"use strict\";\n\n// var crypto = require('crypto');\nimport sha1 from 'crypto-js/sha1';\nimport Base64 from 'crypto-js/enc-base64';\n\n// var passwordDigest = require('../utils').passwordDigest;\nimport { passwordDigest } from '../utils';\n\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\n\nexport function WSSecurity(username, password, options) {\n  options = options || {};\n  this._username = username;\n  this._password = password;\n  //must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true   \n  if (typeof options === 'string') {\n    this._passwordType = options ? options : 'PasswordText';\n    options = {};\n  } else {\n    this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\n  }\n\n  if (validPasswordTypes.indexOf(this._passwordType) === -1) {\n    this._passwordType = 'PasswordText';\n  }\n\n  this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\n  /*jshint eqnull:true */\n  if (options.hasNonce != null) {\n    this._hasNonce = !!options.hasNonce;\n  }\n  this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\n  if (options.actor != null) {\n    this._actor = options.actor;\n  }\n  if (options.mustUnderstand != null) {\n    this._mustUnderstand = !!options.mustUnderstand;\n  }\n}\n\nWSSecurity.prototype.toXML = function() {\n  // avoid dependency on date formatting libraries\n  function getDate(d) {\n    function pad(n) {\n      return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-'\n      + pad(d.getUTCMonth() + 1) + '-'\n      + pad(d.getUTCDate()) + 'T'\n      + pad(d.getUTCHours()) + ':'\n      + pad(d.getUTCMinutes()) + ':'\n      + pad(d.getUTCSeconds()) + 'Z';\n  }\n  var now = new Date();\n  var created = getDate(now);\n  var timeStampXml = '';\n  if (this._hasTimeStamp) {\n    var expires = getDate( new Date(now.getTime() + (1000 * 600)) );\n    timeStampXml = \"<wsu:Timestamp wsu:Id=\\\"Timestamp-\"+created+\"\\\">\" +\n      \"<wsu:Created>\"+created+\"</wsu:Created>\" +\n      \"<wsu:Expires>\"+expires+\"</wsu:Expires>\" +\n      \"</wsu:Timestamp>\";\n  }\n\n  var password, nonce;\n  if (this._hasNonce || this._passwordType !== 'PasswordText') {\n    // nonce = base64 ( sha1 ( created + random ) )\n    // var nHash = crypto.createHash('sha1');\n    // nHash.update(created + Math.random());\n    // nonce = nHash.digest('base64');\n    nonce = Base64.stringify(sha1(created + Math.random(), ''));\n  }\n  if (this._passwordType === 'PasswordText') {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + this._password + \"</wsse:Password>\";\n    if (nonce) {\n      password += \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n    }\n  } else {\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\">\" + passwordDigest(nonce, created, this._password) + \"</wsse:Password>\" +\n      \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\n  }\n\n  return \"<wsse:Security \" + (this._actor ? \"soap:actor=\\\"\" + this._actor + \"\\\" \" : \"\") +\n    (this._mustUnderstand ? \"soap:mustUnderstand=\\\"1\\\" \" : \"\") +\n    \"xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\" xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\">\" +\n    timeStampXml +\n    \"<wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\" wsu:Id=\\\"SecurityToken-\" + created + \"\\\">\" +\n    \"<wsse:Username>\" + this._username + \"</wsse:Username>\" +\n    password +\n    (this._hasTokenCreated ? \"<wsu:Created>\" + created + \"</wsu:Created>\" : \"\") +\n    \"</wsse:UsernameToken>\" +\n    \"</wsse:Security>\";\n};\n\n// module.exports = WSSecurity;\n","\"use strict\";\n\n// var _ = require('lodash');\nimport * as _ from 'lodash';\n\nexport function BearerSecurity(token, defaults) {\n\tthis._token = token;\n\tthis.defaults = {};\n\t_.merge(this.defaults, defaults);\n}\n\nBearerSecurity.prototype.addHeaders = function(headers) {\n\theaders.Authorization = \"Bearer \" + this._token;\n};\n\nBearerSecurity.prototype.toXML = function() {\n\treturn '';\n};\n\nBearerSecurity.prototype.addOptions = function(options) {\n  _.merge(options, this.defaults);\n};\n\n// module.exports = BearerSecurity;\n","\"use strict\";\n\n// var _ = require('lodash');\nimport * as _ from 'lodash';\n\nexport function NTLMSecurity(username, password, domain, workstation) {\n  if (typeof username === \"object\") {\n    this.defaults = username;\n    this.defaults.ntlm = true;\n  } else {\n    this.defaults = {\n      ntlm: true,\n      username: username,\n      password: password,\n      domain: domain,\n      workstation: workstation\n    };\n  }\n}\n\nNTLMSecurity.prototype.addHeaders = function (headers) {\n  headers.Connection = 'keep-alive';\n};\n\nNTLMSecurity.prototype.toXML = function () {\n  return '';\n};\n\nNTLMSecurity.prototype.addOptions = function (options) {\n  _.merge(options, this.defaults);\n};\n\n// module.exports = NTLMSecurity;\n","\"use strict\";\n\nimport {Â BasicAuthSecurity } from './BasicAuthSecurity';\nimport { WSSecurity } from './WSSecurity';\n// import { WSSecurityCert } from './WSSecurityCert';\nimport { BearerSecurity } from './BearerSecurity';\nimport { NTLMSecurity } from './NTLMSecurity';\n\nexport const security = { \n  BasicAuthSecurity,\n  BearerSecurity,\n  WSSecurity,\n  // WSSecurityCert,\n  NTLMSecurity,\n  // ClientSSLSecurity,\n  // ClientSSLSecurityPFX\n};","export class Multipart  {\n  preambleCRLF = true;\n  postambleCRLF = true;\n\n  build(parts, boundary) {\n    const body = [];\n\n    function add (part) {\n      if (typeof part === 'number') {\n        part = part.toString();\n      }\n      return body.push(part)\n    }\n\n    if (this.preambleCRLF) {\n      add('\\r\\n')\n    }\n\n    parts.forEach(function (part) {\n      let preamble = '--' + boundary + '\\r\\n';\n      Object.keys(part).forEach(function (key) {\n        if (key === 'body') { return }\n        preamble += key + ': ' + part[key] + '\\r\\n'\n      });\n      preamble += '\\r\\n';\n      add(preamble);\n      add(part.body);\n      add('\\r\\n');\n    });\n    add('--' + boundary + '--');\n\n    if (this.postambleCRLF) {\n      add('\\r\\n');\n    }\n\n    const size = body.map((part) => {\n      if (typeof part === 'string') {\n        return part.length\n      } else {\n        return part.byteLength;\n      }\n    }).reduce((a, b) => a + b, 0);\n\n    let uint8array = new Uint8Array(size);\n    let i = 0;\n    body.forEach((part) => {\n      if (typeof part === 'string') {\n        for (let j = 0; j < part.length; i++, j++) {\n          uint8array[i] = part.charCodeAt(j) & 0xff;\n        }\n      } else {\n        for (let j = 0; j < part.byteLength; i++, j++) {\n          uint8array[i] = part[j];\n        }\n      }\n    });\n    return uint8array.buffer;\n  }\n\n}\n","export class SoapAttachment {\n\n  constructor(\n    public mimetype: string,\n    public contentId: string,\n    public name: string,\n    public body: any\n  ) {\n\n  }\n\n  static fromFormFiles(files: FileList | File[] = []): Promise<any> {\n    if (files instanceof FileList) {\n      files = Array.from(files);\n    }\n\n    const promises = files.map((file: any) => {\n      return new Promise(function(resolve) {\n        const reader = new FileReader();\n        reader.readAsArrayBuffer(file);\n        reader.onload = function (e) {\n          const arrayBuffer = (e.target as any).result;\n          const bytes = new Uint8Array(arrayBuffer);\n          const attachment = new SoapAttachment(file.type, file.contentId || file.name, file.name, bytes);\n          resolve(attachment);\n        }\n      });\n    });\n\n   return Promise.all(promises);\n  }\n\n}\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport * as assert from 'assert';\nimport { findPrefix } from './utils';\nimport * as _ from 'lodash';\nimport uuid4 from 'uuid/v4';\nimport { from, Observable, throwError } from 'rxjs';\nimport { flatMap, map } from 'rxjs/operators';\nimport { Multipart } from './multipart';\nimport { SoapAttachment } from './soapAttachment';\n\nconst nonIdentifierChars = /[^a-z$_0-9]/i;\n\nexport const Client = function(wsdl, endpoint, options) {\n    options = options || {};\n    this.wsdl = wsdl;\n    this._initializeOptions(options);\n    this._initializeServices(endpoint);\n    this.httpClient = options.httpClient as HttpClient;\n    const promiseOptions: any = { multiArgs: true };\n    if (options.overridePromiseSuffix) {\n        promiseOptions.suffix = options.overridePromiseSuffix;\n    }\n    Promise.all([this, promiseOptions]);\n};\n\nClient.prototype.addSoapHeader = function(soapHeader, name, namespace, xmlns) {\n    if (!this.soapHeaders) {\n        this.soapHeaders = [];\n    }\n    if (typeof soapHeader === 'object') {\n        soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n    }\n    return this.soapHeaders.push(soapHeader) - 1;\n};\n\nClient.prototype.changeSoapHeader = function(index, soapHeader, name, namespace, xmlns) {\n    if (!this.soapHeaders) {\n        this.soapHeaders = [];\n    }\n    if (typeof soapHeader === 'object') {\n        soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\n    }\n    this.soapHeaders[index] = soapHeader;\n};\n\nClient.prototype.getSoapHeaders = function() {\n    return this.soapHeaders;\n};\n\nClient.prototype.clearSoapHeaders = function() {\n    this.soapHeaders = null;\n};\n\nClient.prototype.addHttpHeader = function(name, value) {\n    if (!this.httpHeaders) {\n        this.httpHeaders = {};\n    }\n    this.httpHeaders[name] = value;\n};\n\nClient.prototype.getHttpHeaders = function() {\n    return this.httpHeaders;\n};\n\nClient.prototype.clearHttpHeaders = function() {\n    this.httpHeaders = {};\n};\n\nClient.prototype.addBodyAttribute = function(bodyAttribute, name, namespace, xmlns) {\n    if (!this.bodyAttributes) {\n        this.bodyAttributes = [];\n    }\n    if (typeof bodyAttribute === 'object') {\n        let composition = '';\n        Object.getOwnPropertyNames(bodyAttribute).forEach(function(prop, idx, array) {\n            composition += ' ' + prop + '=\"' + bodyAttribute[prop] + '\"';\n        });\n        bodyAttribute = composition;\n    }\n    if (bodyAttribute.substr(0, 1) !== ' ') bodyAttribute = ' ' + bodyAttribute;\n    this.bodyAttributes.push(bodyAttribute);\n};\n\nClient.prototype.getBodyAttributes = function() {\n    return this.bodyAttributes;\n};\n\nClient.prototype.clearBodyAttributes = function() {\n    this.bodyAttributes = null;\n};\n\nClient.prototype.setEndpoint = function(endpoint) {\n    this.endpoint = endpoint;\n    this._initializeServices(endpoint);\n};\n\nClient.prototype.describe = function() {\n    const types = this.wsdl.definitions.types;\n    return this.wsdl.describeServices();\n};\n\nClient.prototype.setSecurity = function(security) {\n    this.security = security;\n};\n\nClient.prototype.setSOAPAction = function(SOAPAction) {\n    this.SOAPAction = SOAPAction;\n};\n\nClient.prototype._initializeServices = function(endpoint) {\n    const definitions = this.wsdl.definitions,\n        services = definitions.services;\n    for (const name in services) {\n        this[name] = this._defineService(services[name], endpoint);\n    }\n};\n\nClient.prototype._initializeOptions = function(options) {\n    this.streamAllowed = options.stream;\n    this.normalizeNames = options.normalizeNames;\n    this.wsdl.options.attributesKey = options.attributesKey || 'attributes';\n    this.wsdl.options.envelopeKey = options.envelopeKey || 'soap';\n    this.wsdl.options.preserveWhitespace = !!options.preserveWhitespace;\n    if (options.ignoredNamespaces !== undefined) {\n        if (options.ignoredNamespaces.override !== undefined) {\n            if (options.ignoredNamespaces.override === true) {\n                if (options.ignoredNamespaces.namespaces !== undefined) {\n                    this.wsdl.options.ignoredNamespaces = options.ignoredNamespaces.namespaces;\n                }\n            }\n        }\n    }\n    if (options.overrideRootElement !== undefined) {\n        this.wsdl.options.overrideRootElement = options.overrideRootElement;\n    }\n    this.wsdl.options.forceSoap12Headers = !!options.forceSoap12Headers;\n};\n\nClient.prototype._defineService = function(service, endpoint) {\n    const ports = service.ports,\n        def = {};\n    for (const name in ports) {\n        def[name] = this._definePort(ports[name], endpoint ? endpoint : ports[name].location);\n    }\n    return def;\n};\n\nClient.prototype._definePort = function(port, endpoint) {\n    const location = endpoint,\n        binding = port.binding,\n        methods = binding.methods,\n        def = {};\n    for (const name in methods) {\n        def[name] = this._defineMethod(methods[name], location);\n        const methodName = this.normalizeNames ? name.replace(nonIdentifierChars, '_') : name;\n        this[methodName] = def[name];\n    }\n    return def;\n};\n\nClient.prototype._defineMethod = function(method, location) {\n    const self = this;\n    let temp = null;\n    return function(args, options, extraHeaders): Observable<any> {\n        return self._invoke(method, args, location, options, extraHeaders);\n    };\n};\n\nClient.prototype._invoke = function(method, args, location, options, extraHeaders): Observable<any> {\n    let self = this,\n        name = method.$name,\n        input = method.input,\n        output = method.output,\n        style = method.style,\n        defs = this.wsdl.definitions,\n        envelopeKey = this.wsdl.options.envelopeKey,\n        ns = defs.$targetNamespace,\n        encoding = '',\n        message = '',\n        xml = null,\n        req = null,\n        soapAction = null,\n        alias = findPrefix(defs.xmlns, ns),\n        headers: any = {\n            'Content-Type': 'text/xml; charset=utf-8'\n        },\n        xmlnsSoap = 'xmlns:' + envelopeKey + '=\"http://schemas.xmlsoap.org/soap/envelope/\"';\n\n    if (this.wsdl.options.forceSoap12Headers) {\n        headers['Content-Type'] = 'application/soap+xml; charset=utf-8';\n        xmlnsSoap = 'xmlns:' + envelopeKey + '=\"http://www.w3.org/2003/05/soap-envelope\"';\n    }\n\n    if (this.SOAPAction) {\n        soapAction = this.SOAPAction;\n    } else if (method.soapAction !== undefined && method.soapAction !== null) {\n        soapAction = method.soapAction;\n    } else {\n        soapAction = (ns.lastIndexOf('/') !== ns.length - 1 ? ns + '/' : ns) + name;\n    }\n\n    if (!this.wsdl.options.forceSoap12Headers) {\n        headers.SOAPAction = '\"' + soapAction + '\"';\n    }\n\n    options = options || {};\n\n    //Add extra headers\n    for (const header in this.httpHeaders) {\n        headers[header] = this.httpHeaders[header];\n    }\n    for (const attr in extraHeaders) {\n        headers[attr] = extraHeaders[attr];\n    }\n\n    // Allow the security object to add headers\n    if (self.security && self.security.addHeaders) self.security.addHeaders(headers);\n    if (self.security && self.security.addOptions) self.security.addOptions(options);\n\n    if (style === 'rpc' && (input.parts || input.name === 'element' || args === null)) {\n        assert.ok(!style || style === 'rpc', 'invalid message definition for document style binding');\n        message = self.wsdl.objectToRpcXML(name, args, alias, ns, input.name !== 'element');\n        method.inputSoap === 'encoded' && (encoding = 'soap:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" ');\n    } else {\n        assert.ok(!style || style === 'document', 'invalid message definition for rpc style binding');\n        // pass `input.$lookupType` if `input.$type` could not be found\n        message = self.wsdl.objectToDocumentXML(input.$name, args, input.targetNSAlias, input.targetNamespace, input.$type || input.$lookupType);\n    }\n    xml =\n        '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n        '<' +\n        envelopeKey +\n        ':Envelope ' +\n        xmlnsSoap +\n        ' ' +\n        'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n        encoding +\n        this.wsdl.xmlnsInEnvelope +\n        '>' +\n        (self.soapHeaders || self.security\n            ? '<' +\n              envelopeKey +\n              ':Header>' +\n              (self.soapHeaders ? self.soapHeaders.join('\\n') : '') +\n              (self.security && !self.security.postProcess ? self.security.toXML() : '') +\n              '</' +\n              envelopeKey +\n              ':Header>'\n            : '') +\n        '<' +\n        envelopeKey +\n        ':Body' +\n        (self.bodyAttributes ? self.bodyAttributes.join(' ') : '') +\n        (self.security && self.security.postProcess ? ' Id=\"_0\"' : '') +\n        '>' +\n        message +\n        '</' +\n        envelopeKey +\n        ':Body>' +\n        '</' +\n        envelopeKey +\n        ':Envelope>';\n\n    if (self.security && self.security.postProcess) {\n        xml = self.security.postProcess(xml, envelopeKey);\n    }\n\n    if (options && options.postProcess) {\n        xml = options.postProcess(xml);\n    }\n\n    self.lastMessage = message;\n    self.lastRequest = xml;\n    self.lastEndpoint = location;\n\n    const tryJSONparse = function(body) {\n        try {\n            return JSON.parse(body);\n        } catch (err) {\n            return undefined;\n        }\n    };\n\n    return from(SoapAttachment.fromFormFiles(options.attachments)).pipe(\n        map((soapAttachments: SoapAttachment[]) => {\n            if (!soapAttachments.length) {\n                return xml;\n            }\n\n            if (options.forceMTOM || soapAttachments.length > 0) {\n                const start = uuid4();\n                const boundry = uuid4();\n                let action = null;\n                if (headers['Content-Type'].indexOf('action') > -1) {\n                    for (const ct of headers['Content-Type'].split('; ')) {\n                        if (ct.indexOf('action') > -1) {\n                            action = ct;\n                        }\n                    }\n                }\n\n                headers['Content-Type'] =\n                    'multipart/related; type=\"application/xop+xml\"; start=\"<' + start + '>\"; start-info=\"text/xml\"; boundary=\"' + boundry + '\"';\n                if (action) {\n                    headers['Content-Type'] = headers['Content-Type'] + '; ' + action;\n                }\n\n                const multipart: any[] = [\n                    {\n                        'Content-Type': 'application/xop+xml; charset=UTF-8; type=\"text/xml\"',\n                        'Content-ID': '<' + start + '>',\n                        body: xml\n                    }\n                ];\n\n                soapAttachments.forEach((attachment: SoapAttachment) => {\n                    multipart.push({\n                        'Content-Type': attachment.mimetype + ';',\n                        'Content-Transfer-Encoding': 'binary',\n                        'Content-ID': '<' + (attachment.contentId || attachment.name) + '>',\n                        'Content-Disposition': 'attachment; name=\"' + attachment.name + '\"; filename=\"' + attachment.name + '\"',\n                        body: attachment.body\n                    });\n                });\n\n                return new Multipart().build(multipart, boundry);\n            }\n        }),\n        flatMap((body: any) =>\n            (<HttpClient>self.httpClient)\n                .post(location, body, {\n                    headers: headers,\n                    responseType: 'text',\n                    observe: 'response'\n                })\n                .pipe(\n                    map((response: HttpResponse<any>) => {\n                        self.lastResponse = response.body;\n                        self.lastResponseHeaders = response && response.headers;\n                        return parseSync(response.body, response);\n                    })\n                )\n        )\n    );\n\n    function parseSync(body, response: HttpResponse<any>) {\n        let obj;\n        try {\n            obj = self.wsdl.xmlToObject(body);\n        } catch (error) {\n            //  When the output element cannot be looked up in the wsdl and the body is JSON\n            //  instead of sending the error, we pass the body in the response.\n            if (!output || !output.$lookupTypes) {\n                // debug('Response element is not present. Unable to convert response xml to json.');\n                //  If the response is JSON then return it as-is.\n                const json = _.isObject(body) ? body : tryJSONparse(body);\n                if (json) {\n                    return { err: null, response, responseBody: json, header: undefined, xml };\n                }\n            }\n            error.response = response;\n            error.body = body;\n            // self.emit('soapError', error, eid);\n            throw error;\n        }\n        return finish(obj, body, response);\n    }\n\n    function finish(obj, responseBody, response) {\n        let result = null;\n\n        if (!output) {\n            // one-way, no output expected\n            return { err: null, response: null, responseBody, header: obj.Header, xml };\n        }\n\n        // If it's not HTML and Soap Body is empty\n        if (!obj.html && !obj.Body) {\n            return { err: null, obj, responseBody, header: obj.Header, xml };\n        }\n\n        if (typeof obj.Body !== 'object') {\n            const error: any = new Error('Cannot parse response');\n            error.response = response;\n            error.body = responseBody;\n            return { err: error, obj, responseBody, header: undefined, xml };\n        }\n\n        result = obj.Body[output.$name];\n        // RPC/literal response body may contain elements with added suffixes I.E.\n        // 'Response', or 'Output', or 'Out'\n        // This doesn't necessarily equal the ouput message name. See WSDL 1.1 Section 2.4.5\n        if (!result) {\n            result = obj.Body[output.$name.replace(/(?:Out(?:put)?|Response)$/, '')];\n        }\n        if (!result) {\n            ['Response', 'Out', 'Output'].forEach(function(term) {\n                if (obj.Body.hasOwnProperty(name + term)) {\n                    return (result = obj.Body[name + term]);\n                }\n            });\n        }\n\n        return { err: null, result, responseBody, header: obj.Header, xml };\n    }\n};\n\nClient.prototype.call = function(method: string, body: any, options?: any, extraHeaders?: any): Observable<any> {\n    if (!this[method]) {\n        return throwError(`Method ${method} not found`);\n    }\n\n    return (<Function>this[method]).call(this, body, options, extraHeaders);\n};\n","/*\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\n * MIT Licensed\n */\n\nimport * as wsdl from './wsdl';\nimport { security } from './security/security';\nimport { Client } from './client';\nexport { Client } from './client';\nexport { security  } from './security/security';\n\nexport { passwordDigest } from './utils'\nexport const WSDL = wsdl.WSDL;\n\nconst cache = {}; // TODO some caching?\n\nconst getFromCache = async (url, options) => {\n  // console.log('Getting from cache', url);\n  // console.log('Cache', cache)\n  if (cache[url]) {\n    // console.log('Found in cache', url);\n    return cache[url];\n  } else {\n    return wsdl.open_wsdl(url, options).then(wsdl => {\n      cache[url] = wsdl;\n      return wsdl;\n    })\n  }\n};\n\nasync function _requestWSDL(url, options) {\n  if (options.disableCache === true) {\n    return wsdl.open_wsdl(url, options);\n  } else {\n    return getFromCache(url, options);\n  }\n\n}\n\nexport async function createClient(url, options, endpoint): Promise<any> {\n  if (typeof options === 'undefined') {\n    options = {};\n  }\n  // console.log(\"createClient\", options)\n  endpoint = options.endpoint || endpoint;\n  \n  const wsdl = await _requestWSDL(url, options);\n  const client = new Client(wsdl, endpoint, options);\n  return client;\n}\n\nexport const BasicAuthSecurity = security.BasicAuthSecurity;\nexport const NTLMSecurity = security.NTLMSecurity;\nexport const WSSecurity = security.WSSecurity;\n// export const WSSecurityCert = security.WSSecurityCert;\nexport const BearerSecurity = security.BearerSecurity;\n// export const ClientSSLSecurity = security.ClientSSLSecurity;\n// export const ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;\n","import { Injectable } from '@angular/core';\nimport { createClient } from './soap/soap';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from './soap/interfaces';\n\nexport {\n  Client,\n  WSDL,\n  ISoapMethod,\n  ISoapMethodResponse,\n  BasicAuthSecurity,\n  BearerSecurity,\n  // WSSecurityCert,\n  WSSecurity,\n  NTLMSecurity\n} from './soap/interfaces';\n\nexport { security } from './soap/security/security'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSoapService {\n\n  constructor(private http: HttpClient) { }\n\n  createClient(wsdlUrl: string, options: any = {}, endpoint?: string): Promise<Client> {\n    options.httpClient = this.http;\n    return createClient(wsdlUrl, options, endpoint) ;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  exports: []\n})\nexport class NgxSoapModule { }\n"]}