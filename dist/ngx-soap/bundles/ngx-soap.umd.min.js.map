{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-soap/lib/soap/nscontext.ts","ng://ngx-soap/lib/soap/utils.ts","ng://ngx-soap/lib/soap/wsdl.ts","ng://ngx-soap/lib/soap/security/BasicAuthSecurity.ts","ng://ngx-soap/lib/soap/security/WSSecurity.ts","ng://ngx-soap/lib/soap/security/BearerSecurity.ts","ng://ngx-soap/lib/soap/security/NTLMSecurity.ts","ng://ngx-soap/lib/soap/security/security.ts","ng://ngx-soap/lib/soap/multipart.ts","ng://ngx-soap/lib/soap/soapAttachment.ts","ng://ngx-soap/lib/soap/client.ts","ng://ngx-soap/lib/soap/soap.ts","ng://ngx-soap/lib/ngx-soap.service.ts","ng://ngx-soap/lib/ngx-soap.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__values","o","s","m","i","NamespaceScope","parent","getNamespaceURI","prefix","localOnly","nsUri","namespaces","uri","getNamespaceMapping","declared","mapping","getPrefix","p","NamespaceContext","addNamespace","currentScope","pushContext","scope","scopes","popContext","registerNamespace","prefixCount","declareNamespace","findPrefix","xmlnsMapping","nsURI","utils.findPrefix","Primitives","string","boolean","decimal","float","double","anyType","byte","int","long","short","negativeInteger","nonNegativeInteger","positiveInteger","nonPositiveInteger","unsignedByte","unsignedInt","unsignedLong","unsignedShort","duration","dateTime","time","date","gYearMonth","gYear","gMonthDay","gDay","gMonth","hexBinary","base64Binary","anyURI","QName","NOTATION","splitQName","nsName","indexOf","name","substring","xmlEscape","obj","substr","replace","trimLeft","trimRight","trim","text","Element","attrs","options","parts","key","children","xmlns","_initializeOptions","match","exec","valueKey","undefined","$targetNamespace","prototype","xmlKey","ignoredNamespaces","deleteFixedAttrs","Object","keys","allowedChildren","startElement","stack","ChildClass","unexpected","endElement","parent_1","_.defaultsDeep","addChild","child","Error","description","definitions","$name","init","createSubClass","root","subElement","arguments","__proto__","ElementElement","AnyElement","InputElement","OutputElement","SimpleTypeElement","RestrictionElement","ExtensionElement","ChoiceElement","EnumerationElement","ComplexTypeElement","ComplexContentElement","SimpleContentElement","SequenceElement","AllElement","MessageElement","DocumentationElement","SchemaElement","TypesElement","OperationElement","PortTypeElement","BindingElement","PortElement","ServiceElement","DefinitionsElement","ElementTypeMap","types","schema","element","any","simpleType","restriction","extension","choice","enumeration","complexType","complexContent","simpleContent","sequence","all","service","port","binding","portType","message","operation","input","output","fault","documentation","mapElementTypes","rtn","split","forEach","type","complexTypes","elements","includes","schemas","inputSoap","outputSoap","style","soapAction","methods","transport","location","ports","messages","portTypes","bindings","services","merge","source","assert","_.merge","location_1","$schemaLocation","$location","namespace","$namespace","targetNamespace","hasOwnProperty","console","error","use","$use","encodingStyle","$encodingStyle","$soapAction","$style","$transport","postProcess","part","ns","$element","elementChildren","lookupTypes","targetNSAlias","$lookupType","_getNestedLookupTypeString","join","filter","schemaXmlns","_createLookupTypeObject","$lookupTypes","$type","typeNs","ctype","method","splice","schemaDefinition","nsString","splittedNSString","nsAlias","splittedName","lookupTypeObj","resolvedType","excluded","concat","self_1","resolvedChildType","tag","messageName","$message","$binding","desc","$base","typeName","schema_1","typeElement_1","getBase","map","typeElement","base","isMany","$maxOccurs","isNaN","$minOccurs","$ref","descriptions","elem_1","description_1","name_1","inputDesc","outputDesc","name_2","name_3","WSDL","definition","fromFunc","x","self","callback","_includesWsdl","WSDL_CACHE","charCodeAt","slice","_fromXML","_fromServices","processIncludes","name_4","name_5","bindingName","topEls","topElements","methodName","inputName","outputName","xmlnsInEnvelope","_xmlnsMap","catch","err","appendColon","charAt","noColonNameSpace","open_wsdl_recursive","fromCache","open_wsdl","wsdl_headers","wsdl_options","httpClient","get","responseType","toPromise","wsdlDef","_a","wsdl","onReady","BasicAuthSecurity","username","password","defaults","_username","_password","ignoreBaseNameSpaces","_originalIgnoredNamespaces","Array","isArray","override","escapeXML","returnFault","handleNilAsNull","namespaceArrayElements","request","forceSoap12Headers","customDeserializer","overrideRootElement","useEmptyTag","_processNextInclude","include","shift","test","includePath","url.resolve","_.assign","_.mergeWith","a","b","destination","_.isArray","describeServices","name_6","toXML","xml","xmlToObject","sax.parser","objectName","Envelope","Header","Security","UsernameToken","Username","Password","Body","Code","Value","Subcode","Reason","Text","statusCode","Detail","Fault","faultcode","faultstring","detail","id","object","refs","onopentag","node","attributeName","xsiTypeSchema","attributes","top","topSchema","elementAttributes","hasNonXmlnsAttribute","hasNilAttribute","originalName","isInput","onerror","href","hrefs","par","res","toLowerCase","attributesKey","xsiType","typeURI","typeDef","findSchemaObject","nil","onclosetag","cur","topObject","_.isPlainObject","oncdata","originalText","top_1","ontext","resume","parseInt","Date","preserveWhitespace","saxStream","sax.createStream","on","pipe","r","finish","write","close","ref","code","$value","info","qname","def","objectToDocumentXML","params","nsPrefix","_xml","args","parameterTypeObj","objectToXML","objectToRpcXML","isParts","defs","prefixedKey","isIgnoredNameSpace","filterOutIgnoredNameSpace","isFirst","xmlnsAttr","schemaObject","nsContext","parentNsPrefix","current","soapHeader","qualified","$elementFormDefault","prefixNamespace","xmlnsAttrib","xmlnsAttributes","attribute","item","arrayAttr","processAttributes","correctOuterNsPrefix","openingTagParts","attr","nonSubNameSpace","emptyNonSubNameSpace","nameWithNsRegex","childSchemaObject","findChildSchemaObject","childNsPrefix","childName","childNsURI","childXmlnsAttrib","elementQName","unqualified","$form","resolvedChildSchemaObject","typeQName","typePrefix","findSchemaType","$baseNameSpace","xsi_type","attrObj","attrKey","attrValue","backtrace","found","typeObj","typeInfo","baseQName","childNameSpace","foundBase","_parse","strict","str","alias","addHeaders","headers","Authorization","Buffer","toString","addOptions","validPasswordTypes","WSSecurity","_passwordType","passwordType","_hasTimeStamp","hasTimeStamp","hasNonce","_hasNonce","_hasTokenCreated","hasTokenCreated","actor","_actor","mustUnderstand","_mustUnderstand","BearerSecurity","token","_token","NTLMSecurity","domain","workstation","ntlm","getDate","d","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","nonce","now","created","timeStampXml","getTime","Base64","stringify","sha1","Math","random","rawNonce","passwordDigest","Connection","security","Multipart","preambleCRLF","postambleCRLF","build","boundary","add","preamble","size","byteLength","reduce","uint8array","Uint8Array","j","buffer","SoapAttachment","mimetype","contentId","fromFormFiles","files","FileList","from","promises","file","reader","FileReader","readAsArrayBuffer","onload","arrayBuffer","target","bytes","attachment","nonIdentifierChars","Client","endpoint","_initializeServices","promiseOptions","multiArgs","overridePromiseSuffix","suffix","addSoapHeader","soapHeaders","changeSoapHeader","index","getSoapHeaders","clearSoapHeaders","addHttpHeader","httpHeaders","getHttpHeaders","clearHttpHeaders","addBodyAttribute","bodyAttribute","bodyAttributes","composition_1","getOwnPropertyNames","prop","idx","array","getBodyAttributes","clearBodyAttributes","setEndpoint","describe","setSecurity","setSOAPAction","SOAPAction","_defineService","streamAllowed","stream","normalizeNames","envelopeKey","_definePort","_defineMethod","extraHeaders","_invoke","encoding","Content-Type","xmlnsSoap","header","lastIndexOf","assert.ok","lastMessage","lastRequest","lastEndpoint","attachments","soapAttachments","forceMTOM","start","uuid4","boundry","action","_b","_c","ct","multipart_1","Content-ID","Content-Transfer-Encoding","Content-Disposition","flatMap","post","observe","response","lastResponse","lastResponseHeaders","json","_.isObject","JSON","parse","tryJSONparse","responseBody","html","term","parseSync","throwError","cache","getFromCache","url","wsdl.open_wsdl","_requestWSDL","disableCache","NgxSoapService","http","createClient","wsdlUrl","core","HttpClient","factory","Éµfac","providedIn","NgxSoapModule","imports","HttpClientModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","'use strict';\r\n\r\nexport class NamespaceScope {\r\n  parent: any;\r\n  namespaces: any;\r\n  constructor(parent: any) {\r\n    if (!(this instanceof NamespaceScope)) {\r\n      return new NamespaceScope(parent);\r\n    }\r\n    this.parent = parent;\r\n    this.namespaces = {};  \r\n  }\r\n\r\n  getNamespaceURI = function(prefix, localOnly) {\r\n    switch (prefix) {\r\n      case 'xml':\r\n        return 'http://www.w3.org/XML/1998/namespace';\r\n      case 'xmlns':\r\n        return 'http://www.w3.org/2000/xmlns/';\r\n      default:\r\n        var nsUri = this.namespaces[prefix];\r\n        /*jshint -W116 */\r\n        if (nsUri != null) {\r\n          return nsUri.uri;\r\n        } else if (!localOnly && this.parent) {\r\n          return this.parent.getNamespaceURI(prefix);\r\n        } else {\r\n          return null;\r\n        }\r\n    }\r\n  }\r\n\r\n  getNamespaceMapping = function(prefix) {\r\n    switch (prefix) {\r\n      case 'xml':\r\n        return {\r\n          uri: 'http://www.w3.org/XML/1998/namespace',\r\n          prefix: 'xml',\r\n          declared: true\r\n        };\r\n      case 'xmlns':\r\n        return {\r\n          uri: 'http://www.w3.org/2000/xmlns/',\r\n          prefix: 'xmlns',\r\n          declared: true\r\n        };\r\n      default:\r\n        var mapping = this.namespaces[prefix];\r\n        /*jshint -W116 */\r\n        if (mapping != null) {\r\n          return mapping;\r\n        } else if (this.parent) {\r\n          return this.parent.getNamespaceMapping(prefix);\r\n        } else {\r\n          return null;\r\n        }\r\n    }\r\n  }\r\n\r\n  getPrefix = function(nsUri, localOnly) {\r\n    switch (nsUri) {\r\n      case 'http://www.w3.org/XML/1998/namespace':\r\n        return 'xml';\r\n      case 'http://www.w3.org/2000/xmlns/':\r\n        return 'xmlns';\r\n      default:\r\n        for (var p in this.namespaces) {\r\n          if (this.namespaces[p].uri === nsUri) {\r\n            return p;\r\n          }\r\n        }\r\n        if (!localOnly && this.parent) {\r\n          return this.parent.getPrefix(nsUri);\r\n        } else {\r\n          return null;\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\nexport class NamespaceContext {\r\n  scopes: any[];\r\n  prefixCount: number; \r\n\r\n  constructor() {\r\n    if (!(this instanceof NamespaceContext)) {\r\n      return new NamespaceContext();\r\n    }\r\n    this.scopes = [];\r\n    this.pushContext();\r\n    this.prefixCount = 0;\r\n  }\r\n\r\n  addNamespace = function(prefix, nsUri, localOnly) {\r\n    if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\r\n      return false;\r\n    }\r\n    if (this.currentScope) {\r\n      this.currentScope.namespaces[prefix] = {\r\n        uri: nsUri,\r\n        prefix: prefix,\r\n        declared: false\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  pushContext = function() {\r\n    var scope = new NamespaceScope(this.currentScope);\r\n    this.scopes.push(scope);\r\n    this.currentScope = scope;\r\n    return scope;\r\n  }\r\n\r\n  popContext = function() {\r\n    var scope = this.scopes.pop();\r\n    if (scope) {\r\n      this.currentScope = scope.parent;\r\n    } else {\r\n      this.currentScope = null;\r\n    }\r\n    return scope;\r\n  }\r\n\r\n  getNamespaceURI = function(prefix, localOnly) {\r\n    return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\r\n  }\r\n\r\n  getPrefix = function(nsUri, localOnly) {\r\n    return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\r\n  }\r\n  \r\n  registerNamespace = function(nsUri) {\r\n    var prefix = this.getPrefix(nsUri);\r\n    if (prefix) {\r\n      // If the namespace has already mapped to a prefix\r\n      return prefix;\r\n    } else {\r\n      // Try to generate a unique namespace\r\n      while (true) {\r\n        prefix = 'ns' + (++this.prefixCount);\r\n        if (!this.getNamespaceURI(prefix)) {\r\n          // The prefix is not used\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.addNamespace(prefix, nsUri, true);\r\n    return prefix;\r\n  }\r\n\r\n  declareNamespace = function(prefix, nsUri) {\r\n    if (this.currentScope) {\r\n      var mapping = this.currentScope.getNamespaceMapping(prefix);\r\n      if (mapping && mapping.uri === nsUri && mapping.declared) {\r\n        return false;\r\n      }\r\n      this.currentScope.namespaces[prefix] = {\r\n        uri: nsUri,\r\n        prefix: prefix,\r\n        declared: true\r\n      };\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Scope for XML namespaces\r\n * @param [parent] Parent scope\r\n * \r\n */\r\n// export function NamespaceScope(parent) {\r\n//   if (!(this instanceof NamespaceScope)) {\r\n//     return NamespaceScope(parent);\r\n//   }\r\n//   this.parent = parent;\r\n//   this.namespaces = {};\r\n// }\r\n\r\n// /**\r\n//  * Namespace context that manages hierarchical scopes\r\n//  *  {NamespaceContext}\r\n//  */\r\n// export function NamespaceContext() {\r\n//   if (!(this instanceof NamespaceContext)) {\r\n//     return NamespaceContext();\r\n//   }\r\n//   this.scopes = [];\r\n//   this.pushContext();\r\n//   this.prefixCount = 0;\r\n// }\r\n\r\n// /**\r\n//  * Look up the namespace URI by prefix\r\n//  * @param  prefix Namespace prefix\r\n//  * @param  [localOnly] Search current scope only\r\n//  *   Namespace URI\r\n//  */\r\n// NamespaceScope.prototype.getNamespaceURI = function(prefix, localOnly) {\r\n//   switch (prefix) {\r\n//     case 'xml':\r\n//       return 'http://www.w3.org/XML/1998/namespace';\r\n//     case 'xmlns':\r\n//       return 'http://www.w3.org/2000/xmlns/';\r\n//     default:\r\n//       var nsUri = this.namespaces[prefix];\r\n//       /*jshint -W116 */\r\n//       if (nsUri != null) {\r\n//         return nsUri.uri;\r\n//       } else if (!localOnly && this.parent) {\r\n//         return this.parent.getNamespaceURI(prefix);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//   }\r\n// };\r\n\r\n// NamespaceScope.prototype.getNamespaceMapping = function(prefix) {\r\n//   switch (prefix) {\r\n//     case 'xml':\r\n//       return {\r\n//         uri: 'http://www.w3.org/XML/1998/namespace',\r\n//         prefix: 'xml',\r\n//         declared: true\r\n//       };\r\n//     case 'xmlns':\r\n//       return {\r\n//         uri: 'http://www.w3.org/2000/xmlns/',\r\n//         prefix: 'xmlns',\r\n//         declared: true\r\n//       };\r\n//     default:\r\n//       var mapping = this.namespaces[prefix];\r\n//       /*jshint -W116 */\r\n//       if (mapping != null) {\r\n//         return mapping;\r\n//       } else if (this.parent) {\r\n//         return this.parent.getNamespaceMapping(prefix);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//   }\r\n// };\r\n\r\n// /**\r\n//  * Look up the namespace prefix by URI\r\n//  * @param  nsUri Namespace URI\r\n//  * @param  [localOnly] Search current scope only\r\n//  *   Namespace prefix\r\n//  */\r\n// NamespaceScope.prototype.getPrefix = function(nsUri, localOnly) {\r\n//   switch (nsUri) {\r\n//     case 'http://www.w3.org/XML/1998/namespace':\r\n//       return 'xml';\r\n//     case 'http://www.w3.org/2000/xmlns/':\r\n//       return 'xmlns';\r\n//     default:\r\n//       for (var p in this.namespaces) {\r\n//         if (this.namespaces[p].uri === nsUri) {\r\n//           return p;\r\n//         }\r\n//       }\r\n//       if (!localOnly && this.parent) {\r\n//         return this.parent.getPrefix(nsUri);\r\n//       } else {\r\n//         return null;\r\n//       }\r\n//   }\r\n// };\r\n\r\n// /**\r\n//  * Add a prefix/URI namespace mapping\r\n//  * @param  prefix Namespace prefix\r\n//  * @param  nsUri Namespace URI\r\n//  * @param  [localOnly] Search current scope only\r\n//  *  {boolean} true if the mapping is added or false if the mapping\r\n//  * already exists\r\n//  */\r\n// NamespaceContext.prototype.addNamespace = function(prefix, nsUri, localOnly) {\r\n//   if (this.getNamespaceURI(prefix, localOnly) === nsUri) {\r\n//     return false;\r\n//   }\r\n//   if (this.currentScope) {\r\n//     this.currentScope.namespaces[prefix] = {\r\n//       uri: nsUri,\r\n//       prefix: prefix,\r\n//       declared: false\r\n//     };\r\n//     return true;\r\n//   }\r\n//   return false;\r\n// };\r\n\r\n// /**\r\n//  * Push a scope into the context\r\n//  *  The current scope\r\n//  */\r\n// NamespaceContext.prototype.pushContext = function() {\r\n//   var scope = NamespaceScope(this.currentScope);\r\n//   this.scopes.push(scope);\r\n//   this.currentScope = scope;\r\n//   return scope;\r\n// };\r\n\r\n// /**\r\n//  * Pop a scope out of the context\r\n//  *   The removed scope\r\n//  */\r\n// NamespaceContext.prototype.popContext = function() {\r\n//   var scope = this.scopes.pop();\r\n//   if (scope) {\r\n//     this.currentScope = scope.parent;\r\n//   } else {\r\n//     this.currentScope = null;\r\n//   }\r\n//   return scope;\r\n// };\r\n\r\n// /**\r\n//  * Look up the namespace URI by prefix\r\n//  * @param  prefix Namespace prefix\r\n//  * @param  [localOnly] Search current scope only\r\n//  *   Namespace URI\r\n//  */\r\n// NamespaceContext.prototype.getNamespaceURI = function(prefix, localOnly) {\r\n//   return this.currentScope && this.currentScope.getNamespaceURI(prefix, localOnly);\r\n// };\r\n\r\n// /**\r\n//  * Look up the namespace prefix by URI\r\n//  * @param  nsURI Namespace URI\r\n//  * @param  [localOnly] Search current scope only\r\n//  *   Namespace prefix\r\n//  */\r\n// NamespaceContext.prototype.getPrefix = function(nsUri, localOnly) {\r\n//   return this.currentScope && this.currentScope.getPrefix(nsUri, localOnly);\r\n// };\r\n\r\n// /**\r\n//  * Register a namespace\r\n//  * @param  nsUri Namespace URI\r\n//  *   The matching or generated namespace prefix\r\n//  */\r\n// NamespaceContext.prototype.registerNamespace = function(nsUri) {\r\n//   var prefix = this.getPrefix(nsUri);\r\n//   if (prefix) {\r\n//     // If the namespace has already mapped to a prefix\r\n//     return prefix;\r\n//   } else {\r\n//     // Try to generate a unique namespace\r\n//     while (true) {\r\n//       prefix = 'ns' + (++this.prefixCount);\r\n//       if (!this.getNamespaceURI(prefix)) {\r\n//         // The prefix is not used\r\n//         break;\r\n//       }\r\n//     }\r\n//   }\r\n//   this.addNamespace(prefix, nsUri, true);\r\n//   return prefix;\r\n// };\r\n\r\n// /**\r\n//  * Declare a namespace prefix/uri mapping\r\n//  * @param  prefix Namespace prefix\r\n//  * @param  nsUri Namespace URI\r\n//  *   true if the declaration is created\r\n//  */\r\n// NamespaceContext.prototype.declareNamespace = function(prefix, nsUri) {\r\n//   if (this.currentScope) {\r\n//     var mapping = this.currentScope.getNamespaceMapping(prefix);\r\n//     if (mapping && mapping.uri === nsUri && mapping.declared) {\r\n//       return false;\r\n//     }\r\n//     this.currentScope.namespaces[prefix] = {\r\n//       uri: nsUri,\r\n//       prefix: prefix,\r\n//       declared: true\r\n//     };\r\n//     return true;\r\n//   }\r\n//   return false;\r\n// };\r\n","import sha1 from 'crypto-js/sha1';\r\nimport Base64 from 'crypto-js/enc-base64';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport const passwordDigest = function passwordDigest(nonce, created, password) {\r\n  const rawNonce = new Buffer(nonce || '', 'base64').toString('binary');\r\n  return Base64.stringify(sha1(rawNonce + created + password, ''));\r\n};\r\n\r\nexport const TNS_PREFIX = '__tns__'; // Prefix for targetNamespace\r\n\r\n/**\r\n * Find a key from an object based on the value\r\n * @param  Namespace prefix/uri mapping\r\n * @param  nsURI value\r\n * @returns  The matching key\r\n */\r\nexport const findPrefix = function(xmlnsMapping, nsURI) {\r\n  for (const n in xmlnsMapping) {\r\n    if (n === TNS_PREFIX) { continue; }\r\n    if (xmlnsMapping[n] === nsURI) {\r\n      return n;\r\n    }\r\n  }\r\n};\r\n","/*\r\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\r\n * MIT Licensed\r\n *\r\n */\r\n/*jshint proto:true*/\r\n\r\n\"use strict\";\r\n\r\nimport * as sax from 'sax';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NamespaceContext } Â from './nscontext';\r\nimport * as _ from 'lodash';\r\nimport * as utils from './utils';\r\nimport * as url from 'url';\r\nimport { ok as assert } from 'assert';\r\n\r\nconst stripBom = (x: string): string => {\r\n  // Catches EFBBBF (UTF-8 BOM) because the buffer-to-string\r\n  // conversion translates it to FEFF (UTF-16 BOM)\r\n  if (x.charCodeAt(0) === 0xFEFF) {\r\n    return x.slice(1);\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n\r\n\r\nlet TNS_PREFIX = utils.TNS_PREFIX;\r\nlet findPrefix = utils.findPrefix;\r\n\r\nlet Primitives = {\r\n  string: 1,\r\n  boolean: 1,\r\n  decimal: 1,\r\n  float: 1,\r\n  double: 1,\r\n  anyType: 1,\r\n  byte: 1,\r\n  int: 1,\r\n  long: 1,\r\n  short: 1,\r\n  negativeInteger: 1,\r\n  nonNegativeInteger: 1,\r\n  positiveInteger: 1,\r\n  nonPositiveInteger: 1,\r\n  unsignedByte: 1,\r\n  unsignedInt: 1,\r\n  unsignedLong: 1,\r\n  unsignedShort: 1,\r\n  duration: 0,\r\n  dateTime: 0,\r\n  time: 0,\r\n  date: 0,\r\n  gYearMonth: 0,\r\n  gYear: 0,\r\n  gMonthDay: 0,\r\n  gDay: 0,\r\n  gMonth: 0,\r\n  hexBinary: 0,\r\n  base64Binary: 0,\r\n  anyURI: 0,\r\n  QName: 0,\r\n  NOTATION: 0\r\n};\r\n\r\nfunction splitQName(nsName) {\r\n  let i = typeof nsName === 'string' ? nsName.indexOf(':') : -1;\r\n  return i < 0 ? { prefix: TNS_PREFIX, name: nsName } :\r\n    { prefix: nsName.substring(0, i), name: nsName.substring(i + 1) };\r\n}\r\n\r\nfunction xmlEscape(obj) {\r\n  if (typeof (obj) === 'string') {\r\n    if (obj.substr(0, 9) === '<![CDATA[' && obj.substr(-3) === \"]]>\") {\r\n      return obj;\r\n    }\r\n    return obj\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&apos;');\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nlet trimLeft = /^[\\s\\xA0]+/;\r\nlet trimRight = /[\\s\\xA0]+$/;\r\n\r\nfunction trim(text) {\r\n  return text.replace(trimLeft, '').replace(trimRight, '');\r\n}\r\n\r\nfunction deepMerge(destination, source) {\r\n  return _.mergeWith(destination || {}, source, function (a, b) {\r\n    return _.isArray(a) ? a.concat(b) : undefined;\r\n  });\r\n}\r\n\r\nlet Element: any = function (nsName, attrs, options) {\r\n  let parts = splitQName(nsName);\r\n\r\n  this.nsName = nsName;\r\n  this.prefix = parts.prefix;\r\n  this.name = parts.name;\r\n  this.children = [];\r\n  this.xmlns = {};\r\n\r\n  this._initializeOptions(options);\r\n\r\n  for (let key in attrs) {\r\n    let match = /^xmlns:?(.*)$/.exec(key);\r\n    if (match) {\r\n      this.xmlns[match[1] ? match[1] : TNS_PREFIX] = attrs[key];\r\n    }\r\n    else {\r\n      if (key === 'value') {\r\n        this[this.valueKey] = attrs[key];\r\n      } else {\r\n        this['$' + key] = attrs[key];\r\n      }\r\n    }\r\n  }\r\n  if (this.$targetNamespace !== undefined) {\r\n    // Add targetNamespace to the mapping\r\n    this.xmlns[TNS_PREFIX] = this.$targetNamespace;\r\n  }\r\n};\r\n\r\nElement.prototype._initializeOptions = function (options) {\r\n  if (options) {\r\n    this.valueKey = options.valueKey || '$value';\r\n    this.xmlKey = options.xmlKey || '$xml';\r\n    this.ignoredNamespaces = options.ignoredNamespaces || [];\r\n  } else {\r\n    this.valueKey = '$value';\r\n    this.xmlKey = '$xml';\r\n    this.ignoredNamespaces = [];\r\n  }\r\n};\r\n\r\nElement.prototype.deleteFixedAttrs = function () {\r\n  this.children && this.children.length === 0 && delete this.children;\r\n  this.xmlns && Object.keys(this.xmlns).length === 0 && delete this.xmlns;\r\n  delete this.nsName;\r\n  delete this.prefix;\r\n  delete this.name;\r\n};\r\n\r\nElement.prototype.allowedChildren = [];\r\n\r\nElement.prototype.startElement = function (stack, nsName, attrs, options) {\r\n  if (!this.allowedChildren) {\r\n    return;\r\n  }\r\n\r\n  let ChildClass = this.allowedChildren[splitQName(nsName).name],\r\n    element = null;\r\n\r\n  if (ChildClass) {\r\n    stack.push(new ChildClass(nsName, attrs, options));\r\n  }\r\n  else {\r\n    this.unexpected(nsName);\r\n  }\r\n\r\n};\r\n\r\nElement.prototype.endElement = function (stack, nsName) {\r\n  if (this.nsName === nsName) {\r\n    if (stack.length < 2)\r\n      return;\r\n    let parent = stack[stack.length - 2];\r\n    if (this !== stack[0]) {\r\n      _.defaultsDeep(stack[0].xmlns, this.xmlns);\r\n      // delete this.xmlns;\r\n      parent.children.push(this);\r\n      parent.addChild(this);\r\n    }\r\n    stack.pop();\r\n  }\r\n};\r\n\r\nElement.prototype.addChild = function (child) {\r\n  return;\r\n};\r\n\r\nElement.prototype.unexpected = function (name) {\r\n  throw new Error('Found unexpected element (' + name + ') inside ' + this.nsName);\r\n};\r\n\r\nElement.prototype.description = function (definitions) {\r\n  return this.$name || this.name;\r\n};\r\n\r\nElement.prototype.init = function () {\r\n};\r\n\r\nElement.createSubClass = function () {\r\n  let root = this;\r\n  let subElement = function () {\r\n    root.apply(this, arguments);\r\n    this.init();\r\n  };\r\n  // inherits(subElement, root);\r\n  subElement.prototype.__proto__ = root.prototype;\r\n  return subElement;\r\n};\r\n\r\n\r\nlet ElementElement = Element.createSubClass();\r\nlet AnyElement = Element.createSubClass();\r\nlet InputElement = Element.createSubClass();\r\nlet OutputElement = Element.createSubClass();\r\nlet SimpleTypeElement = Element.createSubClass();\r\nlet RestrictionElement = Element.createSubClass();\r\nlet ExtensionElement = Element.createSubClass();\r\nlet ChoiceElement = Element.createSubClass();\r\nlet EnumerationElement = Element.createSubClass();\r\nlet ComplexTypeElement = Element.createSubClass();\r\nlet ComplexContentElement = Element.createSubClass();\r\nlet SimpleContentElement = Element.createSubClass();\r\nlet SequenceElement = Element.createSubClass();\r\nlet AllElement = Element.createSubClass();\r\nlet MessageElement = Element.createSubClass();\r\nlet DocumentationElement = Element.createSubClass();\r\n\r\nlet SchemaElement = Element.createSubClass();\r\nlet TypesElement = Element.createSubClass();\r\nlet OperationElement = Element.createSubClass();\r\nlet PortTypeElement = Element.createSubClass();\r\nlet BindingElement = Element.createSubClass();\r\nlet PortElement = Element.createSubClass();\r\nlet ServiceElement = Element.createSubClass();\r\nlet DefinitionsElement = Element.createSubClass();\r\n\r\nlet ElementTypeMap = {\r\n  types: [TypesElement, 'schema documentation'],\r\n  schema: [SchemaElement, 'element complexType simpleType include import'],\r\n  element: [ElementElement, 'annotation complexType'],\r\n  any: [AnyElement, ''],\r\n  simpleType: [SimpleTypeElement, 'restriction'],\r\n  restriction: [RestrictionElement, 'enumeration all choice sequence'],\r\n  extension: [ExtensionElement, 'all sequence choice'],\r\n  choice: [ChoiceElement, 'element sequence choice any'],\r\n  // group: [GroupElement, 'element group'],\r\n  enumeration: [EnumerationElement, ''],\r\n  complexType: [ComplexTypeElement, 'annotation sequence all complexContent simpleContent choice'],\r\n  complexContent: [ComplexContentElement, 'extension'],\r\n  simpleContent: [SimpleContentElement, 'extension'],\r\n  sequence: [SequenceElement, 'element sequence choice any'],\r\n  all: [AllElement, 'element choice'],\r\n\r\n  service: [ServiceElement, 'port documentation'],\r\n  port: [PortElement, 'address documentation'],\r\n  binding: [BindingElement, '_binding SecuritySpec operation documentation'],\r\n  portType: [PortTypeElement, 'operation documentation'],\r\n  message: [MessageElement, 'part documentation'],\r\n  operation: [OperationElement, 'documentation input output fault _operation'],\r\n  input: [InputElement, 'body SecuritySpecRef documentation header'],\r\n  output: [OutputElement, 'body SecuritySpecRef documentation header'],\r\n  fault: [Element, '_fault documentation'],\r\n  definitions: [DefinitionsElement, 'types message portType binding service import documentation'],\r\n  documentation: [DocumentationElement, '']\r\n};\r\n\r\nfunction mapElementTypes(types) {\r\n  let rtn = {};\r\n  types = types.split(' ');\r\n  types.forEach(function (type) {\r\n    rtn[type.replace(/^_/, '')] = (ElementTypeMap[type] || [Element])[0];\r\n  });\r\n  return rtn;\r\n}\r\n\r\nfor (let n in ElementTypeMap) {\r\n  let v = ElementTypeMap[n];\r\n  v[0].prototype.allowedChildren = mapElementTypes(v[1]);\r\n}\r\n\r\nMessageElement.prototype.init = function () {\r\n  this.element = null;\r\n  this.parts = null;\r\n};\r\n\r\nSchemaElement.prototype.init = function () {\r\n  this.complexTypes = {};\r\n  this.types = {};\r\n  this.elements = {};\r\n  this.includes = [];\r\n};\r\n\r\nTypesElement.prototype.init = function () {\r\n  this.schemas = {};\r\n};\r\n\r\nOperationElement.prototype.init = function () {\r\n  this.input = null;\r\n  this.output = null;\r\n  this.inputSoap = null;\r\n  this.outputSoap = null;\r\n  this.style = '';\r\n  this.soapAction = '';\r\n};\r\n\r\nPortTypeElement.prototype.init = function () {\r\n  this.methods = {};\r\n};\r\n\r\nBindingElement.prototype.init = function () {\r\n  this.transport = '';\r\n  this.style = '';\r\n  this.methods = {};\r\n};\r\n\r\nPortElement.prototype.init = function () {\r\n  this.location = null;\r\n};\r\n\r\nServiceElement.prototype.init = function () {\r\n  this.ports = {};\r\n};\r\n\r\nDefinitionsElement.prototype.init = function () {\r\n  if (this.name !== 'definitions') this.unexpected(this.nsName);\r\n  this.messages = {};\r\n  this.portTypes = {};\r\n  this.bindings = {};\r\n  this.services = {};\r\n  this.schemas = {};\r\n};\r\n\r\nDocumentationElement.prototype.init = function () {\r\n};\r\n\r\nSchemaElement.prototype.merge = function (source) {\r\n  assert(source instanceof SchemaElement);\r\n  if (this.$targetNamespace === source.$targetNamespace) {\r\n    _.merge(this.complexTypes, source.complexTypes);\r\n    _.merge(this.types, source.types);\r\n    _.merge(this.elements, source.elements);\r\n    _.merge(this.xmlns, source.xmlns);\r\n  }\r\n  return this;\r\n};\r\n\r\n\r\nSchemaElement.prototype.addChild = function (child) {\r\n  if (child.$name in Primitives)\r\n    return;\r\n  if (child.name === 'include' || child.name === 'import') {\r\n    let location = child.$schemaLocation || child.$location;\r\n    if (location) {\r\n      this.includes.push({\r\n        namespace: child.$namespace || child.$targetNamespace || this.$targetNamespace,\r\n        location: location\r\n      });\r\n    }\r\n  }\r\n  else if (child.name === 'complexType') {\r\n    this.complexTypes[child.$name] = child;\r\n  }\r\n  else if (child.name === 'element') {\r\n    this.elements[child.$name] = child;\r\n  }\r\n  else if (child.$name) {\r\n    this.types[child.$name] = child;\r\n  }\r\n  this.children.pop();\r\n  // child.deleteFixedAttrs();\r\n};\r\n//fix#325\r\nTypesElement.prototype.addChild = function (child) {\r\n  assert(child instanceof SchemaElement);\r\n\r\n  let targetNamespace = child.$targetNamespace;\r\n\r\n  if (!this.schemas.hasOwnProperty(targetNamespace)) {\r\n    this.schemas[targetNamespace] = child;\r\n  } else {\r\n    console.error('Target-Namespace \"' + targetNamespace + '\" already in use by another Schema!');\r\n  }\r\n};\r\n\r\nInputElement.prototype.addChild = function (child) {\r\n  if (child.name === 'body') {\r\n    this.use = child.$use;\r\n    if (this.use === 'encoded') {\r\n      this.encodingStyle = child.$encodingStyle;\r\n    }\r\n    this.children.pop();\r\n  }\r\n};\r\n\r\nOutputElement.prototype.addChild = function (child) {\r\n  if (child.name === 'body') {\r\n    this.use = child.$use;\r\n    if (this.use === 'encoded') {\r\n      this.encodingStyle = child.$encodingStyle;\r\n    }\r\n    this.children.pop();\r\n  }\r\n};\r\n\r\nOperationElement.prototype.addChild = function (child) {\r\n  if (child.name === 'operation') {\r\n    this.soapAction = child.$soapAction || '';\r\n    this.style = child.$style || '';\r\n    this.children.pop();\r\n  }\r\n};\r\n\r\nBindingElement.prototype.addChild = function (child) {\r\n  if (child.name === 'binding') {\r\n    this.transport = child.$transport;\r\n    this.style = child.$style;\r\n    this.children.pop();\r\n  }\r\n};\r\n\r\nPortElement.prototype.addChild = function (child) {\r\n  if (child.name === 'address' && typeof (child.$location) !== 'undefined') {\r\n    this.location = child.$location;\r\n  }\r\n};\r\n\r\nDefinitionsElement.prototype.addChild = function (child) {\r\n  let self = this;\r\n  if (child instanceof TypesElement) {\r\n    // Merge types.schemas into definitions.schemas\r\n    _.merge(self.schemas, child.schemas);\r\n  }\r\n  else if (child instanceof MessageElement) {\r\n    self.messages[child.$name] = child;\r\n  }\r\n  else if (child.name === 'import') {\r\n    self.schemas[child.$namespace] = new SchemaElement(child.$namespace, {});\r\n    self.schemas[child.$namespace].addChild(child);\r\n  }\r\n  else if (child instanceof PortTypeElement) {\r\n    self.portTypes[child.$name] = child;\r\n  }\r\n  else if (child instanceof BindingElement) {\r\n    if (child.transport === 'http://schemas.xmlsoap.org/soap/http' ||\r\n      child.transport === 'http://www.w3.org/2003/05/soap/bindings/HTTP/')\r\n      self.bindings[child.$name] = child;\r\n  }\r\n  else if (child instanceof ServiceElement) {\r\n    self.services[child.$name] = child;\r\n  }\r\n  else if (child instanceof DocumentationElement) {\r\n  }\r\n  this.children.pop();\r\n};\r\n\r\nMessageElement.prototype.postProcess = function (definitions) {\r\n  let part = null;\r\n  let child = undefined;\r\n  let children = this.children || [];\r\n  let ns = undefined;\r\n  let nsName = undefined;\r\n  let i = undefined;\r\n  let type = undefined;\r\n\r\n  for (i in children) {\r\n    if ((child = children[i]).name === 'part') {\r\n      part = child;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (!part) {\r\n    return;\r\n  }\r\n\r\n  if (part.$element) {\r\n    let lookupTypes = [],\r\n      elementChildren;\r\n\r\n    delete this.parts;\r\n\r\n    nsName = splitQName(part.$element);\r\n    ns = nsName.prefix;\r\n    let schema = definitions.schemas[definitions.xmlns[ns]];\r\n    this.element = schema.elements[nsName.name];\r\n    if (!this.element) {\r\n      // debug(nsName.name + \" is not present in wsdl and cannot be processed correctly.\");\r\n      return;\r\n    }\r\n    this.element.targetNSAlias = ns;\r\n    this.element.targetNamespace = definitions.xmlns[ns];\r\n\r\n    // set the optional $lookupType to be used within `client#_invoke()` when\r\n    // calling `wsdl#objectToDocumentXML()\r\n    this.element.$lookupType = part.$element;\r\n\r\n    elementChildren = this.element.children;\r\n\r\n    // get all nested lookup types (only complex types are followed)\r\n    if (elementChildren.length > 0) {\r\n      for (i = 0; i < elementChildren.length; i++) {\r\n        lookupTypes.push(this._getNestedLookupTypeString(elementChildren[i]));\r\n      }\r\n    }\r\n\r\n    // if nested lookup types where found, prepare them for furter usage\r\n    if (lookupTypes.length > 0) {\r\n      lookupTypes = lookupTypes.\r\n        join('_').\r\n        split('_').\r\n        filter(function removeEmptyLookupTypes(type) {\r\n          return type !== '^';\r\n        });\r\n\r\n      let schemaXmlns = definitions.schemas[this.element.targetNamespace].xmlns;\r\n\r\n      for (i = 0; i < lookupTypes.length; i++) {\r\n        lookupTypes[i] = this._createLookupTypeObject(lookupTypes[i], schemaXmlns);\r\n      }\r\n    }\r\n\r\n    this.element.$lookupTypes = lookupTypes;\r\n\r\n    if (this.element.$type) {\r\n      type = splitQName(this.element.$type);\r\n      let typeNs = schema.xmlns && schema.xmlns[type.prefix] || definitions.xmlns[type.prefix];\r\n\r\n      if (typeNs) {\r\n        if (type.name in Primitives) {\r\n          // this.element = this.element.$type;\r\n        }\r\n        else {\r\n          // first check local mapping of ns alias to namespace\r\n          schema = definitions.schemas[typeNs];\r\n          let ctype = schema.complexTypes[type.name] || schema.types[type.name] || schema.elements[type.name];\r\n\r\n\r\n          if (ctype) {\r\n            this.parts = ctype.description(definitions, schema.xmlns);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      let method = this.element.description(definitions, schema.xmlns);\r\n      this.parts = method[nsName.name];\r\n    }\r\n\r\n\r\n    this.children.splice(0, 1);\r\n  } else {\r\n    // rpc encoding\r\n    this.parts = {};\r\n    delete this.element;\r\n    for (i = 0; part = this.children[i]; i++) {\r\n      if (part.name === 'documentation') {\r\n        // <wsdl:documentation can be present under <wsdl:message>\r\n        continue;\r\n      }\r\n      assert(part.name === 'part', 'Expected part element');\r\n      nsName = splitQName(part.$type);\r\n      ns = definitions.xmlns[nsName.prefix];\r\n      type = nsName.name;\r\n      let schemaDefinition = definitions.schemas[ns];\r\n      if (typeof schemaDefinition !== 'undefined') {\r\n        this.parts[part.$name] = definitions.schemas[ns].types[type] || definitions.schemas[ns].complexTypes[type];\r\n      } else {\r\n        this.parts[part.$name] = part.$type;\r\n      }\r\n\r\n      if (typeof this.parts[part.$name] === 'object') {\r\n        this.parts[part.$name].prefix = nsName.prefix;\r\n        this.parts[part.$name].xmlns = ns;\r\n      }\r\n\r\n      this.children.splice(i--, 1);\r\n    }\r\n  }\r\n  this.deleteFixedAttrs();\r\n};\r\n\r\n/**\r\n * Takes a given namespaced String(for example: 'alias:property') and creates a lookupType\r\n * object for further use in as first (lookup) `parameterTypeObj` within the `objectToXML`\r\n * method and provides an entry point for the already existing code in `findChildSchemaObject`.\r\n *\r\n * @method _createLookupTypeObject\r\n * @param {String}            nsString          The NS String (for example \"alias:type\").\r\n * @param {Object}            xmlns       The fully parsed `wsdl` definitions object (including all schemas).\r\n * @returns {Object}\r\n * @private\r\n */\r\nMessageElement.prototype._createLookupTypeObject = function (nsString, xmlns) {\r\n  let splittedNSString = splitQName(nsString),\r\n    nsAlias = splittedNSString.prefix,\r\n    splittedName = splittedNSString.name.split('#'),\r\n    type = splittedName[0],\r\n    name = splittedName[1],\r\n    lookupTypeObj: any = {};\r\n\r\n  lookupTypeObj.$namespace = xmlns[nsAlias];\r\n  lookupTypeObj.$type = nsAlias + ':' + type;\r\n  lookupTypeObj.$name = name;\r\n\r\n  return lookupTypeObj;\r\n};\r\n\r\n/**\r\n * Iterates through the element and every nested child to find any defined `$type`\r\n * property and returns it in a underscore ('_') separated String (using '^' as default\r\n * value if no `$type` property was found).\r\n *\r\n * @method _getNestedLookupTypeString\r\n * @param {Object}            element         The element which (probably) contains nested `$type` values.\r\n * @returns {String}\r\n * @private\r\n */\r\nMessageElement.prototype._getNestedLookupTypeString = function (element) {\r\n  let resolvedType = '^',\r\n    excluded = this.ignoredNamespaces.concat('xs'); // do not process $type values wich start with\r\n\r\n  if (element.hasOwnProperty('$type') && typeof element.$type === 'string') {\r\n    if (excluded.indexOf(element.$type.split(':')[0]) === -1) {\r\n      resolvedType += ('_' + element.$type + '#' + element.$name);\r\n    }\r\n  }\r\n\r\n  if (element.children.length > 0) {\r\n    let self = this;\r\n\r\n    element.children.forEach(function (child) {\r\n      let resolvedChildType = self._getNestedLookupTypeString(child).replace(/\\^_/, '');\r\n\r\n      if (resolvedChildType && typeof resolvedChildType === 'string') {\r\n        resolvedType += ('_' + resolvedChildType);\r\n      }\r\n    });\r\n  }\r\n\r\n  return resolvedType;\r\n};\r\n\r\nOperationElement.prototype.postProcess = function (definitions, tag) {\r\n  let children = this.children;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child.name !== 'input' && child.name !== 'output')\r\n      continue;\r\n    if (tag === 'binding') {\r\n      this[child.name] = child;\r\n      children.splice(i--, 1);\r\n      continue;\r\n    }\r\n    let messageName = splitQName(child.$message).name;\r\n    let message = definitions.messages[messageName];\r\n    message.postProcess(definitions);\r\n    if (message.element) {\r\n      definitions.messages[message.element.$name] = message;\r\n      this[child.name] = message.element;\r\n    }\r\n    else {\r\n      this[child.name] = message;\r\n    }\r\n    children.splice(i--, 1);\r\n  }\r\n  this.deleteFixedAttrs();\r\n};\r\n\r\nPortTypeElement.prototype.postProcess = function (definitions) {\r\n  let children = this.children;\r\n  if (typeof children === 'undefined')\r\n    return;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child.name !== 'operation')\r\n      continue;\r\n    child.postProcess(definitions, 'portType');\r\n    this.methods[child.$name] = child;\r\n    children.splice(i--, 1);\r\n  }\r\n  delete this.$name;\r\n  this.deleteFixedAttrs();\r\n};\r\n\r\nBindingElement.prototype.postProcess = function (definitions) {\r\n  let type = splitQName(this.$type).name,\r\n    portType = definitions.portTypes[type],\r\n    style = this.style,\r\n    children = this.children;\r\n  if (portType) {\r\n    portType.postProcess(definitions);\r\n    this.methods = portType.methods;\r\n\r\n    for (let i = 0, child; child = children[i]; i++) {\r\n      if (child.name !== 'operation')\r\n        continue;\r\n      child.postProcess(definitions, 'binding');\r\n      children.splice(i--, 1);\r\n      child.style || (child.style = style);\r\n      let method = this.methods[child.$name];\r\n\r\n      if (method) {\r\n        method.style = child.style;\r\n        method.soapAction = child.soapAction;\r\n        method.inputSoap = child.input || null;\r\n        method.outputSoap = child.output || null;\r\n        method.inputSoap && method.inputSoap.deleteFixedAttrs();\r\n        method.outputSoap && method.outputSoap.deleteFixedAttrs();\r\n      }\r\n    }\r\n  }\r\n  delete this.$name;\r\n  delete this.$type;\r\n  this.deleteFixedAttrs();\r\n};\r\n\r\nServiceElement.prototype.postProcess = function (definitions) {\r\n  let children = this.children,\r\n    bindings = definitions.bindings;\r\n  if (children && children.length > 0) {\r\n    for (let i = 0, child; child = children[i]; i++) {\r\n      if (child.name !== 'port')\r\n        continue;\r\n      let bindingName = splitQName(child.$binding).name;\r\n      let binding = bindings[bindingName];\r\n      if (binding) {\r\n        binding.postProcess(definitions);\r\n        this.ports[child.$name] = {\r\n          location: child.location,\r\n          binding: binding\r\n        };\r\n        children.splice(i--, 1);\r\n      }\r\n    }\r\n  }\r\n  delete this.$name;\r\n  this.deleteFixedAttrs();\r\n};\r\n\r\n\r\nSimpleTypeElement.prototype.description = function (definitions) {\r\n  let children = this.children;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof RestrictionElement)\r\n      return this.$name + \"|\" + child.description();\r\n  }\r\n  return {};\r\n};\r\n\r\nRestrictionElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children;\r\n  let desc;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof SequenceElement ||\r\n      child instanceof ChoiceElement) {\r\n      desc = child.description(definitions, xmlns);\r\n      break;\r\n    }\r\n  }\r\n  if (desc && this.$base) {\r\n    let type = splitQName(this.$base),\r\n      typeName = type.name,\r\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\r\n      schema = definitions.schemas[ns],\r\n      typeElement = schema && (schema.complexTypes[typeName] || schema.types[typeName] || schema.elements[typeName]);\r\n\r\n    desc.getBase = function () {\r\n      return typeElement.description(definitions, schema.xmlns);\r\n    };\r\n    return desc;\r\n  }\r\n\r\n  // then simple element\r\n  let base = this.$base ? this.$base + \"|\" : \"\";\r\n  return base + this.children.map(function (child) {\r\n    return child.description();\r\n  }).join(\",\");\r\n};\r\n\r\nExtensionElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children;\r\n  let desc = {};\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof SequenceElement ||\r\n      child instanceof ChoiceElement) {\r\n      desc = child.description(definitions, xmlns);\r\n    }\r\n  }\r\n  if (this.$base) {\r\n    let type = splitQName(this.$base),\r\n      typeName = type.name,\r\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\r\n      schema = definitions.schemas[ns];\r\n\r\n    if (typeName in Primitives) {\r\n      return this.$base;\r\n    }\r\n    else {\r\n      let typeElement = schema && (schema.complexTypes[typeName] ||\r\n        schema.types[typeName] || schema.elements[typeName]);\r\n\r\n      if (typeElement) {\r\n        let base = typeElement.description(definitions, schema.xmlns);\r\n        desc = _.defaultsDeep(base, desc);\r\n      }\r\n    }\r\n  }\r\n  return desc;\r\n};\r\n\r\nEnumerationElement.prototype.description = function () {\r\n  return this[this.valueKey];\r\n};\r\n\r\nComplexTypeElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children || [];\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof ChoiceElement ||\r\n      child instanceof SequenceElement ||\r\n      child instanceof AllElement ||\r\n      child instanceof SimpleContentElement ||\r\n      child instanceof ComplexContentElement) {\r\n\r\n      return child.description(definitions, xmlns);\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nComplexContentElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof ExtensionElement) {\r\n      return child.description(definitions, xmlns);\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nSimpleContentElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children;\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    if (child instanceof ExtensionElement) {\r\n      return child.description(definitions, xmlns);\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nElementElement.prototype.description = function (definitions, xmlns) {\r\n  let element = {},\r\n    name = this.$name;\r\n  let isMany = !this.$maxOccurs ? false : (isNaN(this.$maxOccurs) ? (this.$maxOccurs === 'unbounded') : (this.$maxOccurs > 1));\r\n  if (this.$minOccurs !== this.$maxOccurs && isMany) {\r\n    name += '[]';\r\n  }\r\n\r\n  if (xmlns && xmlns[TNS_PREFIX]) {\r\n    this.$targetNamespace = xmlns[TNS_PREFIX];\r\n  }\r\n  let type = this.$type || this.$ref;\r\n  if (type) {\r\n    type = splitQName(type);\r\n    let typeName = type.name,\r\n      ns = xmlns && xmlns[type.prefix] || definitions.xmlns[type.prefix],\r\n      schema = definitions.schemas[ns],\r\n      typeElement = schema && (this.$type ? schema.complexTypes[typeName] || schema.types[typeName] : schema.elements[typeName]);\r\n\r\n    if (ns && definitions.schemas[ns]) {\r\n      xmlns = definitions.schemas[ns].xmlns;\r\n    }\r\n\r\n    if (typeElement && !(typeName in Primitives)) {\r\n\r\n      if (!(typeName in definitions.descriptions.types)) {\r\n\r\n        let elem: any = {};\r\n        definitions.descriptions.types[typeName] = elem;\r\n        let description = typeElement.description(definitions, xmlns);\r\n        if (typeof description === 'string') {\r\n          elem = description;\r\n        }\r\n        else {\r\n          Object.keys(description).forEach(function (key) {\r\n            elem[key] = description[key];\r\n          });\r\n        }\r\n\r\n        if (this.$ref) {\r\n          element = elem;\r\n        }\r\n        else {\r\n          element[name] = elem;\r\n        }\r\n\r\n        if (typeof elem === 'object') {\r\n          elem.targetNSAlias = type.prefix;\r\n          elem.targetNamespace = ns;\r\n        }\r\n\r\n        definitions.descriptions.types[typeName] = elem;\r\n      }\r\n      else {\r\n        if (this.$ref) {\r\n          element = definitions.descriptions.types[typeName];\r\n        }\r\n        else {\r\n          element[name] = definitions.descriptions.types[typeName];\r\n        }\r\n      }\r\n\r\n    }\r\n    else {\r\n      element[name] = this.$type;\r\n    }\r\n  }\r\n  else {\r\n    let children = this.children;\r\n    element[name] = {};\r\n    for (let i = 0, child; child = children[i]; i++) {\r\n      if (child instanceof ComplexTypeElement) {\r\n        element[name] = child.description(definitions, xmlns);\r\n      }\r\n    }\r\n  }\r\n  return element;\r\n};\r\n\r\nAllElement.prototype.description =\r\n  SequenceElement.prototype.description = function (definitions, xmlns) {\r\n    let children = this.children;\r\n    let sequence = {};\r\n    for (let i = 0, child; child = children[i]; i++) {\r\n      if (child instanceof AnyElement) {\r\n        continue;\r\n      }\r\n      let description = child.description(definitions, xmlns);\r\n      for (let key in description) {\r\n        sequence[key] = description[key];\r\n      }\r\n    }\r\n    return sequence;\r\n  };\r\n\r\nChoiceElement.prototype.description = function (definitions, xmlns) {\r\n  let children = this.children;\r\n  let choice = {};\r\n  for (let i = 0, child; child = children[i]; i++) {\r\n    let description = child.description(definitions, xmlns);\r\n    for (let key in description) {\r\n      choice[key] = description[key];\r\n    }\r\n  }\r\n  return choice;\r\n};\r\n\r\nMessageElement.prototype.description = function (definitions) {\r\n  if (this.element) {\r\n    return this.element && this.element.description(definitions);\r\n  }\r\n  let desc = {};\r\n  desc[this.$name] = this.parts;\r\n  return desc;\r\n};\r\n\r\nPortTypeElement.prototype.description = function (definitions) {\r\n  let methods = {};\r\n  for (let name in this.methods) {\r\n    let method = this.methods[name];\r\n    methods[name] = method.description(definitions);\r\n  }\r\n  return methods;\r\n};\r\n\r\nOperationElement.prototype.description = function (definitions) {\r\n  let inputDesc = this.input ? this.input.description(definitions) : null;\r\n  let outputDesc = this.output ? this.output.description(definitions) : null;\r\n  return {\r\n    input: inputDesc && inputDesc[Object.keys(inputDesc)[0]],\r\n    output: outputDesc && outputDesc[Object.keys(outputDesc)[0]]\r\n  };\r\n};\r\n\r\nBindingElement.prototype.description = function (definitions) {\r\n  let methods = {};\r\n  for (let name in this.methods) {\r\n    let method = this.methods[name];\r\n    methods[name] = method.description(definitions);\r\n  }\r\n  return methods;\r\n};\r\n\r\nServiceElement.prototype.description = function (definitions) {\r\n  let ports = {};\r\n  for (let name in this.ports) {\r\n    let port = this.ports[name];\r\n    ports[name] = port.binding.description(definitions);\r\n  }\r\n  return ports;\r\n};\r\n\r\nexport let WSDL = function (definition, uri, options) {\r\n  let self = this,\r\n    fromFunc;\r\n\r\n  this.uri = uri;\r\n  this.callback = function () {\r\n  };\r\n  this._includesWsdl = [];\r\n\r\n  // initialize WSDL cache\r\n  this.WSDL_CACHE = (options || {}).WSDL_CACHE || {};\r\n\r\n  this._initializeOptions(options);\r\n\r\n  if (typeof definition === 'string') {\r\n    definition = stripBom(definition);\r\n    fromFunc = this._fromXML;\r\n  }\r\n  else if (typeof definition === 'object') {\r\n    fromFunc = this._fromServices;\r\n  }\r\n  else {\r\n    throw new Error('WSDL letructor takes either an XML string or service definition');\r\n  }\r\n\r\n  Promise.resolve(true).then(() => {\r\n    try {\r\n      fromFunc.call(self, definition);\r\n    } catch (e) {\r\n      return self.callback(e.message);\r\n    }\r\n\r\n    self.processIncludes().then(() => {\r\n      self.definitions.deleteFixedAttrs();\r\n      let services = self.services = self.definitions.services;\r\n      if (services) {\r\n        for (const name in services) {\r\n          services[name].postProcess(self.definitions);\r\n        }\r\n      }\r\n      let complexTypes = self.definitions.complexTypes;\r\n      if (complexTypes) {\r\n        for (const name in complexTypes) {\r\n          complexTypes[name].deleteFixedAttrs();\r\n        }\r\n      }\r\n\r\n      // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\r\n      let bindings = self.definitions.bindings;\r\n      for (let bindingName in bindings) {\r\n        let binding = bindings[bindingName];\r\n        if (typeof binding.style === 'undefined') {\r\n          binding.style = 'document';\r\n        }\r\n        if (binding.style !== 'document')\r\n          continue;\r\n        let methods = binding.methods;\r\n        let topEls = binding.topElements = {};\r\n        for (let methodName in methods) {\r\n          if (methods[methodName].input) {\r\n            let inputName = methods[methodName].input.$name;\r\n            let outputName = \"\";\r\n            if (methods[methodName].output)\r\n              outputName = methods[methodName].output.$name;\r\n            topEls[inputName] = { \"methodName\": methodName, \"outputName\": outputName };\r\n          }\r\n        }\r\n      }\r\n\r\n      // prepare soap envelope xmlns definition string\r\n      self.xmlnsInEnvelope = self._xmlnsMap();\r\n      self.callback(null, self);\r\n    }).catch(err => self.callback(err));\r\n\r\n  });\r\n\r\n  // process.nextTick(function() {\r\n  //   try {\r\n  //     fromFunc.call(self, definition);\r\n  //   } catch (e) {\r\n  //     return self.callback(e.message);\r\n  //   }\r\n\r\n  //   self.processIncludes(function(err) {\r\n  //     let name;\r\n  //     if (err) {\r\n  //       return self.callback(err);\r\n  //     }\r\n\r\n  //     self.definitions.deleteFixedAttrs();\r\n  //     let services = self.services = self.definitions.services;\r\n  //     if (services) {\r\n  //       for (name in services) {\r\n  //         services[name].postProcess(self.definitions);\r\n  //       }\r\n  //     }\r\n  //     let complexTypes = self.definitions.complexTypes;\r\n  //     if (complexTypes) {\r\n  //       for (name in complexTypes) {\r\n  //         complexTypes[name].deleteFixedAttrs();\r\n  //       }\r\n  //     }\r\n\r\n  //     // for document style, for every binding, prepare input message element name to (methodName, output message element name) mapping\r\n  //     let bindings = self.definitions.bindings;\r\n  //     for (let bindingName in bindings) {\r\n  //       let binding = bindings[bindingName];\r\n  //       if (typeof binding.style === 'undefined') {\r\n  //         binding.style = 'document';\r\n  //       }\r\n  //       if (binding.style !== 'document')\r\n  //         continue;\r\n  //       let methods = binding.methods;\r\n  //       let topEls = binding.topElements = {};\r\n  //       for (let methodName in methods) {\r\n  //         if (methods[methodName].input) {\r\n  //           let inputName = methods[methodName].input.$name;\r\n  //           let outputName=\"\";\r\n  //           if(methods[methodName].output )\r\n  //             outputName = methods[methodName].output.$name;\r\n  //           topEls[inputName] = {\"methodName\": methodName, \"outputName\": outputName};\r\n  //         }\r\n  //       }\r\n  //     }\r\n\r\n  //     // prepare soap envelope xmlns definition string\r\n  //     self.xmlnsInEnvelope = self._xmlnsMap();\r\n\r\n  //     self.callback(err, self);\r\n  //   });\r\n\r\n  // });\r\n};\r\n\r\nWSDL.prototype.ignoredNamespaces = ['tns', 'targetNamespace', 'typedNamespace'];\r\n\r\nWSDL.prototype.ignoreBaseNameSpaces = false;\r\n\r\nWSDL.prototype.valueKey = '$value';\r\nWSDL.prototype.xmlKey = '$xml';\r\n\r\nWSDL.prototype._initializeOptions = function (options) {\r\n  this._originalIgnoredNamespaces = (options || {}).ignoredNamespaces;\r\n  this.options = {};\r\n\r\n  let ignoredNamespaces = options ? options.ignoredNamespaces : null;\r\n\r\n  if (ignoredNamespaces &&\r\n    (Array.isArray(ignoredNamespaces.namespaces) || typeof ignoredNamespaces.namespaces === 'string')) {\r\n    if (ignoredNamespaces.override) {\r\n      this.options.ignoredNamespaces = ignoredNamespaces.namespaces;\r\n    } else {\r\n      this.options.ignoredNamespaces = this.ignoredNamespaces.concat(ignoredNamespaces.namespaces);\r\n    }\r\n  } else {\r\n    this.options.ignoredNamespaces = this.ignoredNamespaces;\r\n  }\r\n\r\n  this.options.valueKey = options.valueKey || this.valueKey;\r\n  this.options.xmlKey = options.xmlKey || this.xmlKey;\r\n  if (options.escapeXML !== undefined) {\r\n    this.options.escapeXML = options.escapeXML;\r\n  } else {\r\n    this.options.escapeXML = true;\r\n  }\r\n  if (options.returnFault !== undefined) {\r\n    this.options.returnFault = options.returnFault;\r\n  } else {\r\n    this.options.returnFault = false;\r\n  }\r\n  this.options.handleNilAsNull = !!options.handleNilAsNull;\r\n\r\n  if (options.namespaceArrayElements !== undefined) {\r\n    this.options.namespaceArrayElements = options.namespaceArrayElements;\r\n  } else {\r\n    this.options.namespaceArrayElements = true;\r\n  }\r\n\r\n  // Allow any request headers to keep passing through\r\n  this.options.wsdl_headers = options.wsdl_headers;\r\n  this.options.wsdl_options = options.wsdl_options;\r\n  if (options.httpClient) {\r\n    this.options.httpClient = options.httpClient;\r\n  }\r\n\r\n  // The supplied request-object should be passed through\r\n  if (options.request) {\r\n    this.options.request = options.request;\r\n  }\r\n\r\n  let ignoreBaseNameSpaces = options ? options.ignoreBaseNameSpaces : null;\r\n  if (ignoreBaseNameSpaces !== null && typeof ignoreBaseNameSpaces !== 'undefined') {\r\n    this.options.ignoreBaseNameSpaces = ignoreBaseNameSpaces;\r\n  } else {\r\n    this.options.ignoreBaseNameSpaces = this.ignoreBaseNameSpaces;\r\n  }\r\n\r\n  // Works only in client\r\n  this.options.forceSoap12Headers = options.forceSoap12Headers;\r\n  this.options.customDeserializer = options.customDeserializer;\r\n\r\n  if (options.overrideRootElement !== undefined) {\r\n    this.options.overrideRootElement = options.overrideRootElement;\r\n  }\r\n\r\n  this.options.useEmptyTag = !!options.useEmptyTag;\r\n};\r\n\r\nWSDL.prototype.onReady = function (callback) {\r\n  if (callback)\r\n    this.callback = callback;\r\n};\r\n\r\nWSDL.prototype._processNextInclude = async function (includes) {\r\n  let self = this,\r\n    include = includes.shift(),\r\n    options;\r\n\r\n  if (!include)\r\n    return; // callback();\r\n\r\n  let includePath;\r\n  if (!/^https?:/.test(self.uri) && !/^https?:/.test(include.location)) {\r\n    // includePath = path.resolve(path.dirname(self.uri), include.location);\r\n  } else {\r\n    includePath = url.resolve(self.uri || '', include.location);\r\n  }\r\n\r\n  options = _.assign({}, this.options);\r\n  // follow supplied ignoredNamespaces option\r\n  options.ignoredNamespaces = this._originalIgnoredNamespaces || this.options.ignoredNamespaces;\r\n  options.WSDL_CACHE = this.WSDL_CACHE;\r\n\r\n  const wsdl = await open_wsdl_recursive(includePath, options)\r\n  self._includesWsdl.push(wsdl);\r\n\r\n  if (wsdl.definitions instanceof DefinitionsElement) {\r\n    _.mergeWith(self.definitions, wsdl.definitions, function (a, b) {\r\n      return (a instanceof SchemaElement) ? a.merge(b) : undefined;\r\n    });\r\n  } else {\r\n    self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\r\n  }\r\n\r\n  return self._processNextInclude(includes);\r\n\r\n  // open_wsdl_recursive(includePath, options, function(err, wsdl) {\r\n  //   if (err) {\r\n  //     return callback(err);\r\n  //   }\r\n\r\n  //   self._includesWsdl.push(wsdl);\r\n\r\n  //   if (wsdl.definitions instanceof DefinitionsElement) {\r\n  //     _.mergeWith(self.definitions, wsdl.definitions, function(a,b) {\r\n  //       return (a instanceof SchemaElement) ? a.merge(b) : undefined;\r\n  //     });\r\n  //   } else {\r\n  //     self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace] = deepMerge(self.definitions.schemas[include.namespace || wsdl.definitions.$targetNamespace], wsdl.definitions);\r\n  //   }\r\n  //   self._processNextInclude(includes, function(err) {\r\n  //     callback(err);\r\n  //   });\r\n  // });\r\n};\r\n\r\nWSDL.prototype.processIncludes = async function () {\r\n  let schemas = this.definitions.schemas,\r\n    includes = [];\r\n\r\n  for (let ns in schemas) {\r\n    let schema = schemas[ns];\r\n    includes = includes.concat(schema.includes || []);\r\n  }\r\n\r\n  return this._processNextInclude(includes);\r\n};\r\n\r\nWSDL.prototype.describeServices = function () {\r\n  let services = {};\r\n  for (let name in this.services) {\r\n    let service = this.services[name];\r\n    services[name] = service.description(this.definitions);\r\n  }\r\n  return services;\r\n};\r\n\r\nWSDL.prototype.toXML = function () {\r\n  return this.xml || '';\r\n};\r\n\r\nWSDL.prototype.xmlToObject = function (xml, callback) {\r\n  let self = this;\r\n  let p = typeof callback === 'function' ? {} : sax.parser(true);\r\n  let objectName = null;\r\n  let root: any = {};\r\n  let schema = {};\r\n  /*let schema = {\r\n    Envelope: {\r\n      Header: {\r\n        Security: {\r\n          UsernameToken: {\r\n            Username: 'string',\r\n            Password: 'string'\r\n          }\r\n        }\r\n      },\r\n      Body: {\r\n        Fault: {\r\n          faultcode: 'string',\r\n          faultstring: 'string',\r\n          detail: 'string'\r\n        }\r\n      }\r\n    }\r\n  };*/\r\n  if(!this.options.forceSoap12Headers){\r\n    schema ={\r\n      Envelope: {\r\n        Header: {\r\n          Security: {\r\n            UsernameToken: {\r\n              Username:'string',\r\n              Password:'string'\r\n            }\r\n          }\r\n        },\r\n        Body:{\r\n          Fault: {\r\n            faultcode: 'string',\r\n            faultstring: 'string',\r\n            detail:'string'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    schema = {\r\n      Envelope: {\r\n        Header: {\r\n          Security: {\r\n            UsernameToken: {\r\n              Username: 'string',\r\n              Password: 'string'\r\n            }\r\n          }\r\n        },\r\n        Body: {\r\n          Code: {\r\n            Value: 'string',\r\n            Subcode:\r\n                {\r\n                  Value: 'string'\r\n                }\r\n          },\r\n          Reason: {Text: 'string'},\r\n          statusCode: 'number',\r\n          Detail: 'object'\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n      let stack: any[] = [{ name: null, object: root, schema: schema }];\r\n  let xmlns: any = {};\r\n\r\n  let refs = {}, id; // {id:{hrefs:[],obj:}, ...}\r\n\r\n  p.onopentag = function (node) {\r\n    let nsName = node.name;\r\n    let attrs: any = node.attributes;\r\n    let name = splitQName(nsName).name,\r\n      attributeName,\r\n      top = stack[stack.length - 1],\r\n      topSchema = top.schema,\r\n      elementAttributes = {},\r\n      hasNonXmlnsAttribute = false,\r\n      hasNilAttribute = false,\r\n      obj = {};\r\n    let originalName = name;\r\n\r\n    if (!objectName && top.name === 'Body' && name !== 'Fault') {\r\n      let message = self.definitions.messages[name];\r\n      // Support RPC/literal messages where response body contains one element named\r\n      // after the operation + 'Response'. See http://www.w3.org/TR/wsdl#_names\r\n      if (!message) {\r\n        try {\r\n          // Determine if this is request or response\r\n          let isInput = false;\r\n          let isOutput = false;\r\n          if ((/Response$/).test(name)) {\r\n            isOutput = true;\r\n            name = name.replace(/Response$/, '');\r\n          } else if ((/Request$/).test(name)) {\r\n            isInput = true;\r\n            name = name.replace(/Request$/, '');\r\n          } else if ((/Solicit$/).test(name)) {\r\n            isInput = true;\r\n            name = name.replace(/Solicit$/, '');\r\n          }\r\n          // Look up the appropriate message as given in the portType's operations\r\n          let portTypes = self.definitions.portTypes;\r\n          let portTypeNames = Object.keys(portTypes);\r\n          // Currently this supports only one portType definition.\r\n          let portType = portTypes[portTypeNames[0]];\r\n          if (isInput) {\r\n            name = portType.methods[name].input.$name;\r\n          } else {\r\n            name = portType.methods[name].output.$name;\r\n          }\r\n          message = self.definitions.messages[name];\r\n          // 'cache' this alias to speed future lookups\r\n          self.definitions.messages[originalName] = self.definitions.messages[name];\r\n        } catch (e) {\r\n          if (self.options.returnFault) {\r\n            p.onerror(e);\r\n          }\r\n        }\r\n      }\r\n\r\n      topSchema = message.description(self.definitions);\r\n      objectName = originalName;\r\n    }\r\n\r\n    if (attrs.href) {\r\n      id = attrs.href.substr(1);\r\n      if (!refs[id]) {\r\n        refs[id] = { hrefs: [], obj: null };\r\n      }\r\n      refs[id].hrefs.push({ par: top.object, key: name, obj: obj });\r\n    }\r\n    if (id = attrs.id) {\r\n      if (!refs[id]) {\r\n        refs[id] = { hrefs: [], obj: null };\r\n      }\r\n    }\r\n\r\n    //Handle element attributes\r\n    for (attributeName in attrs) {\r\n      if (/^xmlns:|^xmlns$/.test(attributeName)) {\r\n        xmlns[splitQName(attributeName).name] = attrs[attributeName];\r\n        continue;\r\n      }\r\n      hasNonXmlnsAttribute = true;\r\n      elementAttributes[attributeName] = attrs[attributeName];\r\n    }\r\n\r\n    for (attributeName in elementAttributes) {\r\n      let res = splitQName(attributeName);\r\n      if (res.name === 'nil' && xmlns[res.prefix] === 'http://www.w3.org/2001/XMLSchema-instance' && elementAttributes[attributeName] &&\r\n        (elementAttributes[attributeName].toLowerCase() === 'true' || elementAttributes[attributeName] === '1')\r\n      ) {\r\n        hasNilAttribute = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (hasNonXmlnsAttribute) {\r\n      obj[self.options.attributesKey] = elementAttributes;\r\n    }\r\n\r\n    // Pick up the schema for the type specified in element's xsi:type attribute.\r\n    let xsiTypeSchema;\r\n    let xsiType = elementAttributes['xsi:type'];\r\n    if (xsiType) {\r\n      let type = splitQName(xsiType);\r\n      let typeURI;\r\n      if (type.prefix === TNS_PREFIX) {\r\n        // In case of xsi:type = \"MyType\"\r\n        typeURI = xmlns[type.prefix] || xmlns.xmlns;\r\n      } else {\r\n        typeURI = xmlns[type.prefix];\r\n      }\r\n      let typeDef = self.findSchemaObject(typeURI, type.name);\r\n      if (typeDef) {\r\n        xsiTypeSchema = typeDef.description(self.definitions);\r\n      }\r\n    }\r\n\r\n    if (topSchema && topSchema[name + '[]']) {\r\n      name = name + '[]';\r\n    }\r\n    stack.push({\r\n      name: originalName,\r\n      object: obj,\r\n      schema: (xsiTypeSchema || (topSchema && topSchema[name])),\r\n      id: attrs.id,\r\n      nil: hasNilAttribute\r\n    });\r\n  };\r\n\r\n  p.onclosetag = function (nsName) {\r\n    let cur: any = stack.pop(),\r\n      obj = cur.object,\r\n      top = stack[stack.length - 1],\r\n      topObject = top.object,\r\n      topSchema = top.schema,\r\n      name = splitQName(nsName).name;\r\n\r\n    if (typeof cur.schema === 'string' && (cur.schema === 'string' || (<string>cur.schema).split(':')[1] === 'string')) {\r\n      if (typeof obj === 'object' && Object.keys(obj).length === 0) obj = cur.object = '';\r\n    }\r\n\r\n    if (cur.nil === true) {\r\n      if (self.options.handleNilAsNull) {\r\n        obj = null;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (_.isPlainObject(obj) && !Object.keys(obj).length) {\r\n      obj = null;\r\n    }\r\n\r\n    if (topSchema && topSchema[name + '[]']) {\r\n      if (!topObject[name]) {\r\n        topObject[name] = [];\r\n      }\r\n      topObject[name].push(obj);\r\n    } else if (name in topObject) {\r\n      if (!Array.isArray(topObject[name])) {\r\n        topObject[name] = [topObject[name]];\r\n      }\r\n      topObject[name].push(obj);\r\n    } else {\r\n      topObject[name] = obj;\r\n    }\r\n\r\n    if (cur.id) {\r\n      refs[cur.id].obj = obj;\r\n    }\r\n  };\r\n\r\n  p.oncdata = function (text) {\r\n    let originalText = text;\r\n    text = trim(text);\r\n    if (!text.length) {\r\n      return;\r\n    }\r\n\r\n    if (/<\\?xml[\\s\\S]+\\?>/.test(text)) {\r\n      let top = stack[stack.length - 1];\r\n      let value = self.xmlToObject(text);\r\n      if (top.object[self.options.attributesKey]) {\r\n        top.object[self.options.valueKey] = value;\r\n      } else {\r\n        top.object = value;\r\n      }\r\n    } else {\r\n      p.ontext(originalText);\r\n    }\r\n  };\r\n\r\n  p.onerror = function (e) {\r\n    p.resume();\r\n    throw {\r\n      Fault: {\r\n        faultcode: 500,\r\n        faultstring: 'Invalid XML',\r\n        detail: new Error(e).message,\r\n        statusCode: 500\r\n      }\r\n    };\r\n  };\r\n\r\n  p.ontext = function (text) {\r\n    let originalText = text;\r\n    text = trim(text);\r\n    if (!text.length) {\r\n      return;\r\n    }\r\n\r\n    let top = stack[stack.length - 1];\r\n    let name = splitQName(top.schema).name,\r\n      value;\r\n    if (self.options && self.options.customDeserializer && self.options.customDeserializer[name]) {\r\n      value = self.options.customDeserializer[name](text, top);\r\n    }\r\n    else {\r\n      if (name === 'int' || name === 'integer') {\r\n        value = parseInt(text, 10);\r\n      } else if (name === 'bool' || name === 'boolean') {\r\n        value = text.toLowerCase() === 'true' || text === '1';\r\n      } else if (name === 'dateTime' || name === 'date') {\r\n        value = new Date(text);\r\n      } else {\r\n        if (self.options.preserveWhitespace) {\r\n          text = originalText;\r\n        }\r\n        // handle string or other types\r\n        if (typeof top.object !== 'string') {\r\n          value = text;\r\n        } else {\r\n          value = top.object + text;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (top.object[self.options.attributesKey]) {\r\n      top.object[self.options.valueKey] = value;\r\n    } else {\r\n      top.object = value;\r\n    }\r\n  };\r\n\r\n  if (typeof callback === 'function') {\r\n    // we be streaming\r\n    let saxStream = sax.createStream(true);\r\n    saxStream.on('opentag', p.onopentag);\r\n    saxStream.on('closetag', p.onclosetag);\r\n    saxStream.on('cdata', p.oncdata);\r\n    saxStream.on('text', p.ontext);\r\n    xml.pipe(saxStream)\r\n      .on('error', function (err) {\r\n        callback(err);\r\n      })\r\n      .on('end', function () {\r\n        let r;\r\n        try {\r\n          r = finish();\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        callback(null, r);\r\n      });\r\n    return;\r\n  }\r\n  p.write(xml).close();\r\n\r\n  return finish();\r\n\r\n  function finish() {\r\n    // MultiRef support: merge objects instead of replacing\r\n    for (let n in refs) {\r\n      let ref = refs[n];\r\n      for (let i = 0; i < ref.hrefs.length; i++) {\r\n        _.assign(ref.hrefs[i].obj, ref.obj);\r\n      }\r\n    }\r\n\r\n    if (root.Envelope) {\r\n      let body = root.Envelope.Body;\r\n      let error: any;\r\n      if (body && body.Fault) {\r\n        if(!body.Fault.Code) {\r\n          let code = body.Fault.faultcode && body.Fault.faultcode.$value;\r\n          let string = body.Fault.faultstring && body.Fault.faultstring.$value;\r\n          let detail = body.Fault.detail && body.Fault.detail.$value;\r\n\r\n          code = code || body.Fault.faultcode;\r\n          string = string || body.Fault.faultstring;\r\n          detail = detail || body.Fault.detail;\r\n\r\n          let error: any = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\r\n        } else {\r\n          let code = body.Fault.Code.Value;\r\n          let string = body.Fault.Reason.Text.$value;\r\n          let detail = body.Fault.Detail.info;\r\n          error = new Error(code + ': ' + string + (detail ? ': ' + detail : ''));\r\n        }\r\n\r\n        error.root = root;\r\n        throw body.Fault;\r\n      }\r\n      return root.Envelope;\r\n    }\r\n    return root;\r\n  }\r\n};\r\n\r\n/**\r\n * Look up a XSD type or element by namespace URI and name\r\n * @param {String} nsURI Namespace URI\r\n * @param {String} qname Local or qualified name\r\n * @returns {*} The XSD type/element definition\r\n */\r\nWSDL.prototype.findSchemaObject = function (nsURI, qname) {\r\n  if (!nsURI || !qname) {\r\n    return null;\r\n  }\r\n\r\n  let def = null;\r\n\r\n  if (this.definitions.schemas) {\r\n    let schema = this.definitions.schemas[nsURI];\r\n    if (schema) {\r\n      if (qname.indexOf(':') !== -1) {\r\n        qname = qname.substring(qname.indexOf(':') + 1, qname.length);\r\n      }\r\n\r\n      // if the client passed an input element which has a `$lookupType` property instead of `$type`\r\n      // the `def` is found in `schema.elements`.\r\n      def = schema.complexTypes[qname] || schema.types[qname] || schema.elements[qname];\r\n    }\r\n  }\r\n\r\n  return def;\r\n};\r\n\r\n/**\r\n * Create document style xml string from the parameters\r\n * @param {String} name\r\n * @param {*} params\r\n * @param {String} nsPrefix\r\n * @param {String} nsURI\r\n * @param {String} type\r\n */\r\nWSDL.prototype.objectToDocumentXML = function (name, params, nsPrefix, nsURI, type) {\r\n  //If user supplies XML already, just use that.  XML Declaration should not be present.\r\n  if (params && params._xml) {\r\n    return params._xml;\r\n  }\r\n  let args = {};\r\n  args[name] = params;\r\n  let parameterTypeObj = type ? this.findSchemaObject(nsURI, type) : null;\r\n  return this.objectToXML(args, null, nsPrefix, nsURI, true, null, parameterTypeObj);\r\n};\r\n\r\n/**\r\n * Create RPC style xml string from the parameters\r\n * @param {String} name\r\n * @param {*} params\r\n * @param {String} nsPrefix\r\n * @param {String} nsURI\r\n * @returns {string}\r\n */\r\nWSDL.prototype.objectToRpcXML = function (name, params, nsPrefix, nsURI, isParts) {\r\n  let parts = [];\r\n  let defs = this.definitions;\r\n  let nsAttrName = '_xmlns';\r\n\r\n  nsPrefix = nsPrefix || findPrefix(defs.xmlns, nsURI);\r\n\r\n  nsURI = nsURI || defs.xmlns[nsPrefix];\r\n  nsPrefix = nsPrefix === TNS_PREFIX ? '' : (nsPrefix + ':');\r\n\r\n  parts.push(['<', nsPrefix, name, '>'].join(''));\r\n\r\n  for (let key in params) {\r\n    if (!params.hasOwnProperty(key)) {\r\n      continue;\r\n    }\r\n    if (key !== nsAttrName) {\r\n      let value = params[key];\r\n      let prefixedKey = (isParts ? '' : nsPrefix) + key;\r\n      let attributes = [];\r\n      if (typeof value === 'object' && value.hasOwnProperty(this.options.attributesKey)) {\r\n        let attrs = value[this.options.attributesKey];\r\n        for (let n in attrs) {\r\n          attributes.push(' ' + n + '=' + '\"' + attrs[n] + '\"');\r\n        }\r\n      }\r\n      parts.push(['<', prefixedKey].concat(attributes).concat('>').join(''));\r\n      parts.push((typeof value === 'object') ? this.objectToXML(value, key, nsPrefix, nsURI) : xmlEscape(value));\r\n      parts.push(['</', prefixedKey, '>'].join(''));\r\n    }\r\n  }\r\n  parts.push(['</', nsPrefix, name, '>'].join(''));\r\n  return parts.join('');\r\n};\r\n\r\n\r\nfunction appendColon(ns) {\r\n  return (ns && ns.charAt(ns.length - 1) !== ':') ? ns + ':' : ns;\r\n}\r\n\r\nfunction noColonNameSpace(ns) {\r\n  return (ns && ns.charAt(ns.length - 1) === ':') ? ns.substring(0, ns.length - 1) : ns;\r\n}\r\n\r\nWSDL.prototype.isIgnoredNameSpace = function (ns) {\r\n  return this.options.ignoredNamespaces.indexOf(ns) > -1;\r\n};\r\n\r\nWSDL.prototype.filterOutIgnoredNameSpace = function (ns) {\r\n  let namespace = noColonNameSpace(ns);\r\n  return this.isIgnoredNameSpace(namespace) ? '' : namespace;\r\n};\r\n\r\n\r\n\r\n/**\r\n * Convert an object to XML.  This is a recursive method as it calls itself.\r\n *\r\n * @param {Object} obj the object to convert.\r\n * @param {String} name the name of the element (if the object being traversed is\r\n * an element).\r\n * @param {String} nsPrefix the namespace prefix of the object I.E. xsd.\r\n * @param {String} nsURI the full namespace of the object I.E. http://w3.org/schema.\r\n * @param {Boolean} isFirst whether or not this is the first item being traversed.\r\n * @param {?} xmlnsAttr\r\n * @param {?} parameterTypeObject\r\n * @param {NamespaceContext} nsContext Namespace context\r\n */\r\nWSDL.prototype.objectToXML = function (obj, name, nsPrefix, nsURI, isFirst, xmlnsAttr, schemaObject, nsContext) {\r\n  let self = this;\r\n  let schema = this.definitions.schemas[nsURI];\r\n\r\n  let parentNsPrefix = nsPrefix ? nsPrefix.parent : undefined;\r\n  if (typeof parentNsPrefix !== 'undefined') {\r\n    //we got the parentNsPrefix for our array. setting the namespace-letiable back to the current namespace string\r\n    nsPrefix = nsPrefix.current;\r\n  }\r\n\r\n  parentNsPrefix = noColonNameSpace(parentNsPrefix);\r\n  if (this.isIgnoredNameSpace(parentNsPrefix)) {\r\n    parentNsPrefix = '';\r\n  }\r\n\r\n  let soapHeader = !schema;\r\n  let qualified = schema && schema.$elementFormDefault === 'qualified';\r\n  let parts = [];\r\n  let prefixNamespace = (nsPrefix || qualified) && nsPrefix !== TNS_PREFIX;\r\n\r\n  let xmlnsAttrib = '';\r\n  if (nsURI && isFirst) {\r\n    if (self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes) {\r\n      self.options.overrideRootElement.xmlnsAttributes.forEach(function (attribute) {\r\n        xmlnsAttrib += ' ' + attribute.name + '=\"' + attribute.value + '\"';\r\n      });\r\n    } else {\r\n      if (prefixNamespace && !this.isIgnoredNameSpace(nsPrefix)) {\r\n        // resolve the prefix namespace\r\n        xmlnsAttrib += ' xmlns:' + nsPrefix + '=\"' + nsURI + '\"';\r\n      }\r\n      // only add default namespace if the schema elementFormDefault is qualified\r\n      if (qualified || soapHeader) xmlnsAttrib += ' xmlns=\"' + nsURI + '\"';\r\n    }\r\n  }\r\n\r\n  if (!nsContext) {\r\n    nsContext = new NamespaceContext();\r\n    nsContext.declareNamespace(nsPrefix, nsURI);\r\n  } else {\r\n    nsContext.pushContext();\r\n  }\r\n\r\n  // explicitly use xmlns attribute if available\r\n  if (xmlnsAttr && !(self.options.overrideRootElement && self.options.overrideRootElement.xmlnsAttributes)) {\r\n    xmlnsAttrib = xmlnsAttr;\r\n  }\r\n\r\n  let ns = '';\r\n\r\n  if (self.options.overrideRootElement && isFirst) {\r\n    ns = self.options.overrideRootElement.namespace;\r\n  } else if (prefixNamespace && (qualified || isFirst || soapHeader) && !this.isIgnoredNameSpace(nsPrefix)) {\r\n    ns = nsPrefix;\r\n  }\r\n\r\n  let i, n;\r\n  // start building out XML string.\r\n  if (Array.isArray(obj)) {\r\n    for (i = 0, n = obj.length; i < n; i++) {\r\n      let item = obj[i];\r\n      let arrayAttr = self.processAttributes(item, nsContext),\r\n        correctOuterNsPrefix = parentNsPrefix || ns; //using the parent namespace prefix if given\r\n\r\n      let body = self.objectToXML(item, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\r\n\r\n      let openingTagParts = ['<', appendColon(correctOuterNsPrefix), name, arrayAttr, xmlnsAttrib];\r\n\r\n      if (body === '' && self.options.useEmptyTag) {\r\n        // Use empty (self-closing) tags if no contents\r\n        openingTagParts.push(' />');\r\n        parts.push(openingTagParts.join(''));\r\n      } else {\r\n        openingTagParts.push('>');\r\n        if (self.options.namespaceArrayElements || i === 0) {\r\n          parts.push(openingTagParts.join(''));\r\n        }\r\n        parts.push(body);\r\n        if (self.options.namespaceArrayElements || i === n - 1) {\r\n          parts.push(['</', appendColon(correctOuterNsPrefix), name, '>'].join(''));\r\n        }\r\n      }\r\n    }\r\n  } else if (typeof obj === 'object') {\r\n    for (name in obj) {\r\n      if (!obj.hasOwnProperty(name)) continue;\r\n      //don't process attributes as element\r\n      if (name === self.options.attributesKey) {\r\n        continue;\r\n      }\r\n      //Its the value of a xml object. Return it directly.\r\n      if (name === self.options.xmlKey) {\r\n        nsContext.popContext();\r\n        return obj[name];\r\n      }\r\n      //Its the value of an item. Return it directly.\r\n      if (name === self.options.valueKey) {\r\n        nsContext.popContext();\r\n        return xmlEscape(obj[name]);\r\n      }\r\n\r\n      let child = obj[name];\r\n      if (typeof child === 'undefined') {\r\n        continue;\r\n      }\r\n\r\n      let attr = self.processAttributes(child, nsContext);\r\n\r\n      let value = '';\r\n      let nonSubNameSpace = '';\r\n      let emptyNonSubNameSpace = false;\r\n\r\n      let nameWithNsRegex = /^([^:]+):([^:]+)$/.exec(name);\r\n      if (nameWithNsRegex) {\r\n        nonSubNameSpace = nameWithNsRegex[1] + ':';\r\n        name = nameWithNsRegex[2];\r\n      } else if (name[0] === ':') {\r\n        emptyNonSubNameSpace = true;\r\n        name = name.substr(1);\r\n      }\r\n\r\n      if (isFirst) {\r\n        value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, schemaObject, nsContext);\r\n      } else {\r\n\r\n        if (self.definitions.schemas) {\r\n          if (schema) {\r\n            let childSchemaObject = self.findChildSchemaObject(schemaObject, name);\r\n            //find sub namespace if not a primitive\r\n            if (childSchemaObject &&\r\n              ((childSchemaObject.$type && (childSchemaObject.$type.indexOf('xsd:') === -1)) ||\r\n                childSchemaObject.$ref || childSchemaObject.$name)) {\r\n              /*if the base name space of the children is not in the ingoredSchemaNamspaces we use it.\r\n               This is because in some services the child nodes do not need the baseNameSpace.\r\n               */\r\n\r\n              let childNsPrefix: any = '';\r\n              let childName = '';\r\n              let childNsURI;\r\n              let childXmlnsAttrib = '';\r\n\r\n              let elementQName = childSchemaObject.$ref || childSchemaObject.$name;\r\n              if (elementQName) {\r\n                elementQName = splitQName(elementQName);\r\n                childName = elementQName.name;\r\n                if (elementQName.prefix === TNS_PREFIX) {\r\n                  // Local element\r\n                  childNsURI = childSchemaObject.$targetNamespace;\r\n                  childNsPrefix = nsContext.registerNamespace(childNsURI);\r\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\r\n                    childNsPrefix = nsPrefix;\r\n                  }\r\n                } else {\r\n                  childNsPrefix = elementQName.prefix;\r\n                  if (this.isIgnoredNameSpace(childNsPrefix)) {\r\n                    childNsPrefix = nsPrefix;\r\n                  }\r\n                  childNsURI = schema.xmlns[childNsPrefix] || self.definitions.xmlns[childNsPrefix];\r\n                }\r\n\r\n                let unqualified = false;\r\n                // Check qualification form for local elements\r\n                if (childSchemaObject.$name && childSchemaObject.targetNamespace === undefined) {\r\n                  if (childSchemaObject.$form === 'unqualified') {\r\n                    unqualified = true;\r\n                  } else if (childSchemaObject.$form === 'qualified') {\r\n                    unqualified = false;\r\n                  } else {\r\n                    unqualified = schema.$elementFormDefault !== 'qualified';\r\n                  }\r\n                }\r\n                if (unqualified) {\r\n                  childNsPrefix = '';\r\n                }\r\n\r\n                if (childNsURI && childNsPrefix) {\r\n                  if (nsContext.declareNamespace(childNsPrefix, childNsURI)) {\r\n                    childXmlnsAttrib = ' xmlns:' + childNsPrefix + '=\"' + childNsURI + '\"';\r\n                    xmlnsAttrib += childXmlnsAttrib;\r\n                  }\r\n                }\r\n              }\r\n\r\n              let resolvedChildSchemaObject;\r\n              if (childSchemaObject.$type) {\r\n                let typeQName = splitQName(childSchemaObject.$type);\r\n                let typePrefix = typeQName.prefix;\r\n                let typeURI = schema.xmlns[typePrefix] || self.definitions.xmlns[typePrefix];\r\n                childNsURI = typeURI;\r\n                if (typeURI !== 'http://www.w3.org/2001/XMLSchema' && typePrefix !== TNS_PREFIX) {\r\n                  // Add the prefix/namespace mapping, but not declare it\r\n                  nsContext.addNamespace(typePrefix, typeURI);\r\n                }\r\n                resolvedChildSchemaObject =\r\n                  self.findSchemaType(typeQName.name, typeURI) || childSchemaObject;\r\n              } else {\r\n                resolvedChildSchemaObject =\r\n                  self.findSchemaObject(childNsURI, childName) || childSchemaObject;\r\n              }\r\n\r\n              if (childSchemaObject.$baseNameSpace && this.options.ignoreBaseNameSpaces) {\r\n                childNsPrefix = nsPrefix;\r\n                childNsURI = nsURI;\r\n              }\r\n\r\n              if (this.options.ignoreBaseNameSpaces) {\r\n                childNsPrefix = '';\r\n                childNsURI = '';\r\n              }\r\n\r\n              ns = childNsPrefix;\r\n\r\n              if (Array.isArray(child)) {\r\n                //for arrays, we need to remember the current namespace\r\n                childNsPrefix = {\r\n                  current: childNsPrefix,\r\n                  parent: ns\r\n                };\r\n              } else {\r\n                //parent (array) already got the namespace\r\n                childXmlnsAttrib = null;\r\n              }\r\n\r\n              value = self.objectToXML(child, name, childNsPrefix, childNsURI,\r\n                false, childXmlnsAttrib, resolvedChildSchemaObject, nsContext);\r\n            } else if (obj[self.options.attributesKey] && obj[self.options.attributesKey].xsi_type) {\r\n              //if parent object has complex type defined and child not found in parent\r\n              let completeChildParamTypeObject = self.findChildSchemaObject(\r\n                obj[self.options.attributesKey].xsi_type.type,\r\n                obj[self.options.attributesKey].xsi_type.xmlns);\r\n\r\n              nonSubNameSpace = obj[self.options.attributesKey].xsi_type.prefix;\r\n              nsContext.addNamespace(obj[self.options.attributesKey].xsi_type.prefix,\r\n                obj[self.options.attributesKey].xsi_type.xmlns);\r\n              value = self.objectToXML(child, name, obj[self.options.attributesKey].xsi_type.prefix,\r\n                obj[self.options.attributesKey].xsi_type.xmlns, false, null, null, nsContext);\r\n            } else {\r\n              if (Array.isArray(child)) {\r\n                name = nonSubNameSpace + name;\r\n              }\r\n\r\n              value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\r\n            }\r\n          } else {\r\n            value = self.objectToXML(child, name, nsPrefix, nsURI, false, null, null, nsContext);\r\n          }\r\n        }\r\n      }\r\n\r\n      ns = noColonNameSpace(ns);\r\n      if (prefixNamespace && !qualified && isFirst && !self.options.overrideRootElement) {\r\n        ns = nsPrefix;\r\n      } else if (this.isIgnoredNameSpace(ns)) {\r\n        ns = '';\r\n      }\r\n\r\n      let useEmptyTag = !value && self.options.useEmptyTag;\r\n      if (!Array.isArray(child)) {\r\n        // start tag\r\n        parts.push(['<', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, attr, xmlnsAttrib,\r\n          (child === null ? ' xsi:nil=\"true\"' : ''),\r\n          useEmptyTag ? ' />' : '>'\r\n        ].join(''));\r\n      }\r\n\r\n      if (!useEmptyTag) {\r\n        parts.push(value);\r\n        if (!Array.isArray(child)) {\r\n          // end tag\r\n          parts.push(['</', emptyNonSubNameSpace ? '' : appendColon(nonSubNameSpace || ns), name, '>'].join(''));\r\n        }\r\n      }\r\n    }\r\n  } else if (obj !== undefined) {\r\n    parts.push((self.options.escapeXML) ? xmlEscape(obj) : obj);\r\n  }\r\n  nsContext.popContext();\r\n  return parts.join('');\r\n};\r\n\r\nWSDL.prototype.processAttributes = function (child, nsContext) {\r\n  let attr = '';\r\n\r\n  if (child === null) {\r\n    child = [];\r\n  }\r\n\r\n  let attrObj = child[this.options.attributesKey];\r\n  if (attrObj && attrObj.xsi_type) {\r\n    let xsiType = attrObj.xsi_type;\r\n\r\n    let prefix = xsiType.prefix || xsiType.namespace;\r\n    // Generate a new namespace for complex extension if one not provided\r\n    if (!prefix) {\r\n      prefix = nsContext.registerNamespace(xsiType.xmlns);\r\n    } else {\r\n      nsContext.declareNamespace(prefix, xsiType.xmlns);\r\n    }\r\n    xsiType.prefix = prefix;\r\n  }\r\n\r\n\r\n  if (attrObj) {\r\n    for (let attrKey in attrObj) {\r\n      //handle complex extension separately\r\n      if (attrKey === 'xsi_type') {\r\n        let attrValue = attrObj[attrKey];\r\n        attr += ' xsi:type=\"' + attrValue.prefix + ':' + attrValue.type + '\"';\r\n        attr += ' xmlns:' + attrValue.prefix + '=\"' + attrValue.xmlns + '\"';\r\n\r\n        continue;\r\n      } else {\r\n        attr += ' ' + attrKey + '=\"' + xmlEscape(attrObj[attrKey]) + '\"';\r\n      }\r\n    }\r\n  }\r\n\r\n  return attr;\r\n};\r\n\r\n/**\r\n * Look up a schema type definition\r\n * @param name\r\n * @param nsURI\r\n * @returns {*}\r\n */\r\nWSDL.prototype.findSchemaType = function (name, nsURI) {\r\n  if (!this.definitions.schemas || !name || !nsURI) {\r\n    return null;\r\n  }\r\n\r\n  let schema = this.definitions.schemas[nsURI];\r\n  if (!schema || !schema.complexTypes) {\r\n    return null;\r\n  }\r\n\r\n  return schema.complexTypes[name];\r\n};\r\n\r\nWSDL.prototype.findChildSchemaObject = function (parameterTypeObj, childName, backtrace) {\r\n  if (!parameterTypeObj || !childName) {\r\n    return null;\r\n  }\r\n\r\n  if (!backtrace) {\r\n    backtrace = [];\r\n  }\r\n\r\n  if (backtrace.indexOf(parameterTypeObj) >= 0) {\r\n    // We've recursed back to ourselves; break.\r\n    return null;\r\n  } else {\r\n    backtrace = backtrace.concat([parameterTypeObj]);\r\n  }\r\n\r\n  let found = null,\r\n    i = 0,\r\n    child,\r\n    ref;\r\n\r\n  if (Array.isArray(parameterTypeObj.$lookupTypes) && parameterTypeObj.$lookupTypes.length) {\r\n    let types = parameterTypeObj.$lookupTypes;\r\n\r\n    for (i = 0; i < types.length; i++) {\r\n      let typeObj = types[i];\r\n\r\n      if (typeObj.$name === childName) {\r\n        found = typeObj;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let object = parameterTypeObj;\r\n  if (object.$name === childName && object.name === 'element') {\r\n    return object;\r\n  }\r\n  if (object.$ref) {\r\n    ref = splitQName(object.$ref);\r\n    if (ref.name === childName) {\r\n      return object;\r\n    }\r\n  }\r\n\r\n  let childNsURI;\r\n\r\n  // want to avoid unecessary recursion to improve performance\r\n  if (object.$type && backtrace.length === 1) {\r\n    let typeInfo = splitQName(object.$type);\r\n    if (typeInfo.prefix === TNS_PREFIX) {\r\n      childNsURI = parameterTypeObj.$targetNamespace;\r\n    } else {\r\n      childNsURI = this.definitions.xmlns[typeInfo.prefix];\r\n    }\r\n    let typeDef = this.findSchemaType(typeInfo.name, childNsURI);\r\n    if (typeDef) {\r\n      return this.findChildSchemaObject(typeDef, childName, backtrace);\r\n    }\r\n  }\r\n\r\n  if (object.children) {\r\n    for (i = 0, child; child = object.children[i]; i++) {\r\n      found = this.findChildSchemaObject(child, childName, backtrace);\r\n      if (found) {\r\n        break;\r\n      }\r\n\r\n      if (child.$base) {\r\n        let baseQName = splitQName(child.$base);\r\n        let childNameSpace = baseQName.prefix === TNS_PREFIX ? '' : baseQName.prefix;\r\n        childNsURI = child.xmlns[baseQName.prefix] || this.definitions.xmlns[baseQName.prefix];\r\n\r\n        let foundBase = this.findSchemaType(baseQName.name, childNsURI);\r\n\r\n        if (foundBase) {\r\n          found = this.findChildSchemaObject(foundBase, childName, backtrace);\r\n\r\n          if (found) {\r\n            found.$baseNameSpace = childNameSpace;\r\n            found.$type = childNameSpace + ':' + childName;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  if (!found && object.$name === childName) {\r\n    return object;\r\n  }\r\n\r\n  return found;\r\n};\r\n\r\nWSDL.prototype._parse = function (xml) {\r\n  let self = this,\r\n    p = sax.parser(true),\r\n    stack = [],\r\n    root = null,\r\n    types = null,\r\n    schema = null,\r\n    options = self.options;\r\n\r\n  p.onopentag = function (node) {\r\n    let nsName = node.name;\r\n    let attrs = node.attributes;\r\n\r\n    let top = stack[stack.length - 1];\r\n    let name;\r\n    if (top) {\r\n      try {\r\n        top.startElement(stack, nsName, attrs, options);\r\n      } catch (e) {\r\n        if (self.options.strict) {\r\n          throw e;\r\n        } else {\r\n          stack.push(new Element(nsName, attrs, options));\r\n        }\r\n      }\r\n    } else {\r\n      name = splitQName(nsName).name;\r\n      if (name === 'definitions') {\r\n        root = new DefinitionsElement(nsName, attrs, options);\r\n        stack.push(root);\r\n      } else if (name === 'schema') {\r\n        // Shim a structure in here to allow the proper objects to be created when merging back.\r\n        root = new DefinitionsElement('definitions', {}, {});\r\n        types = new TypesElement('types', {}, {});\r\n        schema = new SchemaElement(nsName, attrs, options);\r\n        types.addChild(schema);\r\n        root.addChild(types);\r\n        stack.push(schema);\r\n      } else {\r\n        throw new Error('Unexpected root element of WSDL or include');\r\n      }\r\n    }\r\n  };\r\n\r\n  p.onclosetag = function (name) {\r\n    let top = stack[stack.length - 1];\r\n    assert(top, 'Unmatched close tag: ' + name);\r\n\r\n    top.endElement(stack, name);\r\n  };\r\n\r\n  p.write(xml).close();\r\n\r\n  return root;\r\n};\r\n\r\nWSDL.prototype._fromXML = function (xml) {\r\n  this.definitions = this._parse(xml);\r\n  this.definitions.descriptions = {\r\n    types: {}\r\n  };\r\n  this.xml = xml;\r\n};\r\n\r\nWSDL.prototype._fromServices = function (services) {\r\n\r\n};\r\n\r\n\r\n\r\nWSDL.prototype._xmlnsMap = function () {\r\n  let xmlns = this.definitions.xmlns;\r\n  let str = '';\r\n  for (let alias in xmlns) {\r\n    if (alias === '' || alias === TNS_PREFIX) {\r\n      continue;\r\n    }\r\n    let ns = xmlns[alias];\r\n    switch (ns) {\r\n      case \"http://xml.apache.org/xml-soap\": // apachesoap\r\n      case \"http://schemas.xmlsoap.org/wsdl/\": // wsdl\r\n      case \"http://schemas.xmlsoap.org/wsdl/soap/\": // wsdlsoap\r\n      case \"http://schemas.xmlsoap.org/wsdl/soap12/\": // wsdlsoap12\r\n      case \"http://schemas.xmlsoap.org/soap/encoding/\": // soapenc\r\n      case \"http://www.w3.org/2001/XMLSchema\": // xsd\r\n        continue;\r\n    }\r\n    if (~ns.indexOf('http://schemas.xmlsoap.org/')) {\r\n      continue;\r\n    }\r\n    if (~ns.indexOf('http://www.w3.org/')) {\r\n      continue;\r\n    }\r\n    if (~ns.indexOf('http://xml.apache.org/')) {\r\n      continue;\r\n    }\r\n    str += ' xmlns:' + alias + '=\"' + ns + '\"';\r\n  }\r\n  return str;\r\n};\r\n\r\n/*\r\n * Have another function to load previous WSDLs as we\r\n * don't want this to be invoked externally (expect for tests)\r\n * This will attempt to fix circular dependencies with XSD files,\r\n * Given\r\n * - file.wsdl\r\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\r\n * - A.xsd\r\n *   - xs:import namespace=\"B\" schemaLocation: B.xsd\r\n * - B.xsd\r\n *   - xs:import namespace=\"A\" schemaLocation: A.xsd\r\n * file.wsdl will start loading, import A, then A will import B, which will then import A\r\n * Because A has already started to load previously it will be returned right away and\r\n * have an internal circular reference\r\n * B would then complete loading, then A, then file.wsdl\r\n * By the time file A starts processing its includes its definitions will be already loaded,\r\n * this is the only thing that B will depend on when \"opening\" A\r\n */\r\nfunction open_wsdl_recursive(uri, options): Promise<any> {\r\n  let fromCache,\r\n    WSDL_CACHE;\r\n\r\n  // if (typeof options === 'function') {\r\n  //   callback = options;\r\n  //   options = {};\r\n  // }\r\n\r\n  WSDL_CACHE = options.WSDL_CACHE;\r\n\r\n  if (fromCache = WSDL_CACHE[uri]) {\r\n    // return callback.call(fromCache, null, fromCache);\r\n    return fromCache;\r\n  }\r\n\r\n  return open_wsdl(uri, options);\r\n}\r\n\r\nexport async function open_wsdl(uri, options): Promise<any> {\r\n  // if (typeof options === 'function') {\r\n  //   callback = options;\r\n  //   options = {};\r\n  // }\r\n\r\n  // initialize cache when calling open_wsdl directly\r\n  let WSDL_CACHE = options.WSDL_CACHE || {};\r\n  let request_headers = options.wsdl_headers;\r\n  let request_options = options.wsdl_options;\r\n\r\n  // let wsdl;\r\n  // if (!/^https?:/.test(uri)) {\r\n  //   // debug('Reading file: %s', uri);\r\n  //   // fs.readFile(uri, 'utf8', function(err, definition) {\r\n  //   //   if (err) {\r\n  //   //     callback(err);\r\n  //   //   }\r\n  //   //   else {\r\n  //   //     wsdl = new WSDL(definition, uri, options);\r\n  //   //     WSDL_CACHE[ uri ] = wsdl;\r\n  //   //     wsdl.WSDL_CACHE = WSDL_CACHE;\r\n  //   //     wsdl.onReady(callback);\r\n  //   //   }\r\n  //   // });\r\n  // }\r\n  // else {\r\n  //   debug('Reading url: %s', uri);\r\n  //   let httpClient = options.httpClient || new HttpClient(options);\r\n  //   httpClient.request(uri, null /* options */, function(err, response, definition) {\r\n  //     if (err) {\r\n  //       callback(err);\r\n  //     } else if (response && response.statusCode === 200) {\r\n  //       wsdl = new WSDL(definition, uri, options);\r\n  //       WSDL_CACHE[ uri ] = wsdl;\r\n  //       wsdl.WSDL_CACHE = WSDL_CACHE;\r\n  //       wsdl.onReady(callback);\r\n  //     } else {\r\n  //       callback(new Error('Invalid WSDL URL: ' + uri + \"\\n\\n\\r Code: \" + response.statusCode + \"\\n\\n\\r Response Body: \" + response.body));\r\n  //     }\r\n  //   }, request_headers, request_options);\r\n  // }\r\n  // return wsdl;\r\n\r\n  const httpClient: HttpClient = options.httpClient;\r\n  const wsdlDef = await httpClient.get(uri, { responseType: 'text' }).toPromise();\r\n  const wsdlObj = await new Promise((resolve) => {\r\n    const wsdl = new WSDL(wsdlDef, uri, options);\r\n    WSDL_CACHE[uri] = wsdl;\r\n    wsdl.WSDL_CACHE = WSDL_CACHE;\r\n    wsdl.onReady(resolve(wsdl));\r\n  });\r\n  return wsdlObj;\r\n}\r\n","import * as _ from 'lodash';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport function BasicAuthSecurity(username, password, defaults) {\r\n  this._username = username;\r\n  this._password = password;\r\n  this.defaults = {};\r\n  _.merge(this.defaults, defaults);\r\n}\r\n\r\nBasicAuthSecurity.prototype.addHeaders = function(headers) {\r\n  headers.Authorization = 'Basic ' + new Buffer((this._username + ':' + this._password) || '').toString('base64');\r\n};\r\n\r\nBasicAuthSecurity.prototype.toXML = function() {\r\n  return '';\r\n};\r\n\r\nBasicAuthSecurity.prototype.addOptions = function(options) {\r\n  _.merge(options, this.defaults);\r\n};\r\n","\"use strict\";\r\n\r\n// var crypto = require('crypto');\r\nimport sha1 from 'crypto-js/sha1';\r\nimport Base64 from 'crypto-js/enc-base64';\r\n\r\n// var passwordDigest = require('../utils').passwordDigest;\r\nimport { passwordDigest } from '../utils';\r\n\r\nvar validPasswordTypes = ['PasswordDigest', 'PasswordText'];\r\n\r\nexport function WSSecurity(username, password, options) {\r\n  options = options || {};\r\n  this._username = username;\r\n  this._password = password;\r\n  //must account for backward compatibility for passwordType String param as well as object options defaults: passwordType = 'PasswordText', hasTimeStamp = true   \r\n  if (typeof options === 'string') {\r\n    this._passwordType = options ? options : 'PasswordText';\r\n    options = {};\r\n  } else {\r\n    this._passwordType = options.passwordType ? options.passwordType : 'PasswordText';\r\n  }\r\n\r\n  if (validPasswordTypes.indexOf(this._passwordType) === -1) {\r\n    this._passwordType = 'PasswordText';\r\n  }\r\n\r\n  this._hasTimeStamp = options.hasTimeStamp || typeof options.hasTimeStamp === 'boolean' ? !!options.hasTimeStamp : true;\r\n  /*jshint eqnull:true */\r\n  if (options.hasNonce != null) {\r\n    this._hasNonce = !!options.hasNonce;\r\n  }\r\n  this._hasTokenCreated = options.hasTokenCreated || typeof options.hasTokenCreated === 'boolean' ? !!options.hasTokenCreated : true;\r\n  if (options.actor != null) {\r\n    this._actor = options.actor;\r\n  }\r\n  if (options.mustUnderstand != null) {\r\n    this._mustUnderstand = !!options.mustUnderstand;\r\n  }\r\n}\r\n\r\nWSSecurity.prototype.toXML = function() {\r\n  // avoid dependency on date formatting libraries\r\n  function getDate(d) {\r\n    function pad(n) {\r\n      return n < 10 ? '0' + n : n;\r\n    }\r\n    return d.getUTCFullYear() + '-'\r\n      + pad(d.getUTCMonth() + 1) + '-'\r\n      + pad(d.getUTCDate()) + 'T'\r\n      + pad(d.getUTCHours()) + ':'\r\n      + pad(d.getUTCMinutes()) + ':'\r\n      + pad(d.getUTCSeconds()) + 'Z';\r\n  }\r\n  var now = new Date();\r\n  var created = getDate(now);\r\n  var timeStampXml = '';\r\n  if (this._hasTimeStamp) {\r\n    var expires = getDate( new Date(now.getTime() + (1000 * 600)) );\r\n    timeStampXml = \"<wsu:Timestamp wsu:Id=\\\"Timestamp-\"+created+\"\\\">\" +\r\n      \"<wsu:Created>\"+created+\"</wsu:Created>\" +\r\n      \"<wsu:Expires>\"+expires+\"</wsu:Expires>\" +\r\n      \"</wsu:Timestamp>\";\r\n  }\r\n\r\n  var password, nonce;\r\n  if (this._hasNonce || this._passwordType !== 'PasswordText') {\r\n    // nonce = base64 ( sha1 ( created + random ) )\r\n    // var nHash = crypto.createHash('sha1');\r\n    // nHash.update(created + Math.random());\r\n    // nonce = nHash.digest('base64');\r\n    nonce = Base64.stringify(sha1(created + Math.random(), ''));\r\n  }\r\n  if (this._passwordType === 'PasswordText') {\r\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\\\">\" + this._password + \"</wsse:Password>\";\r\n    if (nonce) {\r\n      password += \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\r\n    }\r\n  } else {\r\n    password = \"<wsse:Password Type=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordDigest\\\">\" + passwordDigest(nonce, created, this._password) + \"</wsse:Password>\" +\r\n      \"<wsse:Nonce EncodingType=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\\\">\" + nonce + \"</wsse:Nonce>\";\r\n  }\r\n\r\n  return \"<wsse:Security \" + (this._actor ? \"soap:actor=\\\"\" + this._actor + \"\\\" \" : \"\") +\r\n    (this._mustUnderstand ? \"soap:mustUnderstand=\\\"1\\\" \" : \"\") +\r\n    \"xmlns:wsse=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\\\" xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\">\" +\r\n    timeStampXml +\r\n    \"<wsse:UsernameToken xmlns:wsu=\\\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\\\" wsu:Id=\\\"SecurityToken-\" + created + \"\\\">\" +\r\n    \"<wsse:Username>\" + this._username + \"</wsse:Username>\" +\r\n    password +\r\n    (this._hasTokenCreated ? \"<wsu:Created>\" + created + \"</wsu:Created>\" : \"\") +\r\n    \"</wsse:UsernameToken>\" +\r\n    \"</wsse:Security>\";\r\n};\r\n\r\n// module.exports = WSSecurity;\r\n","\"use strict\";\r\n\r\n// var _ = require('lodash');\r\nimport * as _ from 'lodash';\r\n\r\nexport function BearerSecurity(token, defaults) {\r\n\tthis._token = token;\r\n\tthis.defaults = {};\r\n\t_.merge(this.defaults, defaults);\r\n}\r\n\r\nBearerSecurity.prototype.addHeaders = function(headers) {\r\n\theaders.Authorization = \"Bearer \" + this._token;\r\n};\r\n\r\nBearerSecurity.prototype.toXML = function() {\r\n\treturn '';\r\n};\r\n\r\nBearerSecurity.prototype.addOptions = function(options) {\r\n  _.merge(options, this.defaults);\r\n};\r\n\r\n// module.exports = BearerSecurity;\r\n","\"use strict\";\r\n\r\n// var _ = require('lodash');\r\nimport * as _ from 'lodash';\r\n\r\nexport function NTLMSecurity(username, password, domain, workstation) {\r\n  if (typeof username === \"object\") {\r\n    this.defaults = username;\r\n    this.defaults.ntlm = true;\r\n  } else {\r\n    this.defaults = {\r\n      ntlm: true,\r\n      username: username,\r\n      password: password,\r\n      domain: domain,\r\n      workstation: workstation\r\n    };\r\n  }\r\n}\r\n\r\nNTLMSecurity.prototype.addHeaders = function (headers) {\r\n  headers.Connection = 'keep-alive';\r\n};\r\n\r\nNTLMSecurity.prototype.toXML = function () {\r\n  return '';\r\n};\r\n\r\nNTLMSecurity.prototype.addOptions = function (options) {\r\n  _.merge(options, this.defaults);\r\n};\r\n\r\n// module.exports = NTLMSecurity;\r\n","\"use strict\";\r\n\r\nimport {Â BasicAuthSecurity } from './BasicAuthSecurity';\r\nimport { WSSecurity } from './WSSecurity';\r\n// import { WSSecurityCert } from './WSSecurityCert';\r\nimport { BearerSecurity } from './BearerSecurity';\r\nimport { NTLMSecurity } from './NTLMSecurity';\r\n\r\nexport const security = { \r\n  BasicAuthSecurity,\r\n  BearerSecurity,\r\n  WSSecurity,\r\n  // WSSecurityCert,\r\n  NTLMSecurity,\r\n  // ClientSSLSecurity,\r\n  // ClientSSLSecurityPFX\r\n};","export class Multipart  {\r\n  preambleCRLF = true;\r\n  postambleCRLF = true;\r\n\r\n  build(parts, boundary) {\r\n    const body = [];\r\n\r\n    function add (part) {\r\n      if (typeof part === 'number') {\r\n        part = part.toString();\r\n      }\r\n      return body.push(part)\r\n    }\r\n\r\n    if (this.preambleCRLF) {\r\n      add('\\r\\n')\r\n    }\r\n\r\n    parts.forEach(function (part) {\r\n      let preamble = '--' + boundary + '\\r\\n';\r\n      Object.keys(part).forEach(function (key) {\r\n        if (key === 'body') { return }\r\n        preamble += key + ': ' + part[key] + '\\r\\n'\r\n      });\r\n      preamble += '\\r\\n';\r\n      add(preamble);\r\n      add(part.body);\r\n      add('\\r\\n');\r\n    });\r\n    add('--' + boundary + '--');\r\n\r\n    if (this.postambleCRLF) {\r\n      add('\\r\\n');\r\n    }\r\n\r\n    const size = body.map((part) => {\r\n      if (typeof part === 'string') {\r\n        return part.length\r\n      } else {\r\n        return part.byteLength;\r\n      }\r\n    }).reduce((a, b) => a + b, 0);\r\n\r\n    let uint8array = new Uint8Array(size);\r\n    let i = 0;\r\n    body.forEach((part) => {\r\n      if (typeof part === 'string') {\r\n        for (let j = 0; j < part.length; i++, j++) {\r\n          uint8array[i] = part.charCodeAt(j) & 0xff;\r\n        }\r\n      } else {\r\n        for (let j = 0; j < part.byteLength; i++, j++) {\r\n          uint8array[i] = part[j];\r\n        }\r\n      }\r\n    });\r\n    return uint8array.buffer;\r\n  }\r\n\r\n}\r\n","export class SoapAttachment {\r\n\r\n  constructor(\r\n    public mimetype: string,\r\n    public contentId: string,\r\n    public name: string,\r\n    public body: any\r\n  ) {\r\n\r\n  }\r\n\r\n  static fromFormFiles(files: FileList | File[] = []): Promise<any> {\r\n    if (files instanceof FileList) {\r\n      files = Array.from(files);\r\n    }\r\n\r\n    const promises = files.map((file: any) => {\r\n      return new Promise(function(resolve) {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(file);\r\n        reader.onload = function (e) {\r\n          const arrayBuffer = (e.target as any).result;\r\n          const bytes = new Uint8Array(arrayBuffer);\r\n          const attachment = new SoapAttachment(file.type, file.contentId || file.name, file.name, bytes);\r\n          resolve(attachment);\r\n        }\r\n      });\r\n    });\r\n\r\n   return Promise.all(promises);\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\r\n * MIT Licensed\r\n */\r\n\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport * as assert from 'assert';\r\nimport { findPrefix } from './utils';\r\nimport * as _ from 'lodash';\r\nimport uuid4 from 'uuid/v4';\r\nimport { from, Observable, throwError } from 'rxjs';\r\nimport { flatMap, map } from 'rxjs/operators';\r\nimport { Multipart } from './multipart';\r\nimport { SoapAttachment } from './soapAttachment';\r\n\r\nconst nonIdentifierChars = /[^a-z$_0-9]/i;\r\n\r\nexport const Client = function(wsdl, endpoint, options) {\r\n    options = options || {};\r\n    this.wsdl = wsdl;\r\n    this._initializeOptions(options);\r\n    this._initializeServices(endpoint);\r\n    this.httpClient = options.httpClient as HttpClient;\r\n    const promiseOptions: any = { multiArgs: true };\r\n    if (options.overridePromiseSuffix) {\r\n        promiseOptions.suffix = options.overridePromiseSuffix;\r\n    }\r\n    Promise.all([this, promiseOptions]);\r\n};\r\n\r\nClient.prototype.addSoapHeader = function(soapHeader, name, namespace, xmlns) {\r\n    if (!this.soapHeaders) {\r\n        this.soapHeaders = [];\r\n    }\r\n    if (typeof soapHeader === 'object') {\r\n        soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\r\n    }\r\n    return this.soapHeaders.push(soapHeader) - 1;\r\n};\r\n\r\nClient.prototype.changeSoapHeader = function(index, soapHeader, name, namespace, xmlns) {\r\n    if (!this.soapHeaders) {\r\n        this.soapHeaders = [];\r\n    }\r\n    if (typeof soapHeader === 'object') {\r\n        soapHeader = this.wsdl.objectToXML(soapHeader, name, namespace, xmlns, true);\r\n    }\r\n    this.soapHeaders[index] = soapHeader;\r\n};\r\n\r\nClient.prototype.getSoapHeaders = function() {\r\n    return this.soapHeaders;\r\n};\r\n\r\nClient.prototype.clearSoapHeaders = function() {\r\n    this.soapHeaders = null;\r\n};\r\n\r\nClient.prototype.addHttpHeader = function(name, value) {\r\n    if (!this.httpHeaders) {\r\n        this.httpHeaders = {};\r\n    }\r\n    this.httpHeaders[name] = value;\r\n};\r\n\r\nClient.prototype.getHttpHeaders = function() {\r\n    return this.httpHeaders;\r\n};\r\n\r\nClient.prototype.clearHttpHeaders = function() {\r\n    this.httpHeaders = {};\r\n};\r\n\r\nClient.prototype.addBodyAttribute = function(bodyAttribute, name, namespace, xmlns) {\r\n    if (!this.bodyAttributes) {\r\n        this.bodyAttributes = [];\r\n    }\r\n    if (typeof bodyAttribute === 'object') {\r\n        let composition = '';\r\n        Object.getOwnPropertyNames(bodyAttribute).forEach(function(prop, idx, array) {\r\n            composition += ' ' + prop + '=\"' + bodyAttribute[prop] + '\"';\r\n        });\r\n        bodyAttribute = composition;\r\n    }\r\n    if (bodyAttribute.substr(0, 1) !== ' ') bodyAttribute = ' ' + bodyAttribute;\r\n    this.bodyAttributes.push(bodyAttribute);\r\n};\r\n\r\nClient.prototype.getBodyAttributes = function() {\r\n    return this.bodyAttributes;\r\n};\r\n\r\nClient.prototype.clearBodyAttributes = function() {\r\n    this.bodyAttributes = null;\r\n};\r\n\r\nClient.prototype.setEndpoint = function(endpoint) {\r\n    this.endpoint = endpoint;\r\n    this._initializeServices(endpoint);\r\n};\r\n\r\nClient.prototype.describe = function() {\r\n    const types = this.wsdl.definitions.types;\r\n    return this.wsdl.describeServices();\r\n};\r\n\r\nClient.prototype.setSecurity = function(security) {\r\n    this.security = security;\r\n};\r\n\r\nClient.prototype.setSOAPAction = function(SOAPAction) {\r\n    this.SOAPAction = SOAPAction;\r\n};\r\n\r\nClient.prototype._initializeServices = function(endpoint) {\r\n    const definitions = this.wsdl.definitions,\r\n        services = definitions.services;\r\n    for (const name in services) {\r\n        this[name] = this._defineService(services[name], endpoint);\r\n    }\r\n};\r\n\r\nClient.prototype._initializeOptions = function(options) {\r\n    this.streamAllowed = options.stream;\r\n    this.normalizeNames = options.normalizeNames;\r\n    this.wsdl.options.attributesKey = options.attributesKey || 'attributes';\r\n    this.wsdl.options.envelopeKey = options.envelopeKey || 'soap';\r\n    this.wsdl.options.preserveWhitespace = !!options.preserveWhitespace;\r\n    if (options.ignoredNamespaces !== undefined) {\r\n        if (options.ignoredNamespaces.override !== undefined) {\r\n            if (options.ignoredNamespaces.override === true) {\r\n                if (options.ignoredNamespaces.namespaces !== undefined) {\r\n                    this.wsdl.options.ignoredNamespaces = options.ignoredNamespaces.namespaces;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (options.overrideRootElement !== undefined) {\r\n        this.wsdl.options.overrideRootElement = options.overrideRootElement;\r\n    }\r\n    this.wsdl.options.forceSoap12Headers = !!options.forceSoap12Headers;\r\n};\r\n\r\nClient.prototype._defineService = function(service, endpoint) {\r\n    const ports = service.ports,\r\n        def = {};\r\n    for (const name in ports) {\r\n        def[name] = this._definePort(ports[name], endpoint ? endpoint : ports[name].location);\r\n    }\r\n    return def;\r\n};\r\n\r\nClient.prototype._definePort = function(port, endpoint) {\r\n    const location = endpoint,\r\n        binding = port.binding,\r\n        methods = binding.methods,\r\n        def = {};\r\n    for (const name in methods) {\r\n        def[name] = this._defineMethod(methods[name], location);\r\n        const methodName = this.normalizeNames ? name.replace(nonIdentifierChars, '_') : name;\r\n        this[methodName] = def[name];\r\n    }\r\n    return def;\r\n};\r\n\r\nClient.prototype._defineMethod = function(method, location) {\r\n    const self = this;\r\n    let temp = null;\r\n    return function(args, options, extraHeaders): Observable<any> {\r\n        return self._invoke(method, args, location, options, extraHeaders);\r\n    };\r\n};\r\n\r\nClient.prototype._invoke = function(method, args, location, options, extraHeaders): Observable<any> {\r\n    let self = this,\r\n        name = method.$name,\r\n        input = method.input,\r\n        output = method.output,\r\n        style = method.style,\r\n        defs = this.wsdl.definitions,\r\n        envelopeKey = this.wsdl.options.envelopeKey,\r\n        ns = defs.$targetNamespace,\r\n        encoding = '',\r\n        message = '',\r\n        xml = null,\r\n        req = null,\r\n        soapAction = null,\r\n        alias = findPrefix(defs.xmlns, ns),\r\n        headers: any = {\r\n            'Content-Type': 'text/xml; charset=utf-8'\r\n        },\r\n        xmlnsSoap = 'xmlns:' + envelopeKey + '=\"http://schemas.xmlsoap.org/soap/envelope/\"';\r\n\r\n    if (this.wsdl.options.forceSoap12Headers) {\r\n        headers['Content-Type'] = 'application/soap+xml; charset=utf-8';\r\n        xmlnsSoap = 'xmlns:' + envelopeKey + '=\"http://www.w3.org/2003/05/soap-envelope\"';\r\n    }\r\n\r\n    if (this.SOAPAction) {\r\n        soapAction = this.SOAPAction;\r\n    } else if (method.soapAction !== undefined && method.soapAction !== null) {\r\n        soapAction = method.soapAction;\r\n    } else {\r\n        soapAction = (ns.lastIndexOf('/') !== ns.length - 1 ? ns + '/' : ns) + name;\r\n    }\r\n\r\n    if (!this.wsdl.options.forceSoap12Headers) {\r\n        headers.SOAPAction = '\"' + soapAction + '\"';\r\n    }\r\n\r\n    options = options || {};\r\n\r\n    //Add extra headers\r\n    for (const header in this.httpHeaders) {\r\n        headers[header] = this.httpHeaders[header];\r\n    }\r\n    for (const attr in extraHeaders) {\r\n        headers[attr] = extraHeaders[attr];\r\n    }\r\n\r\n    // Allow the security object to add headers\r\n    if (self.security && self.security.addHeaders) self.security.addHeaders(headers);\r\n    if (self.security && self.security.addOptions) self.security.addOptions(options);\r\n\r\n    if (style === 'rpc' && (input.parts || input.name === 'element' || args === null)) {\r\n        assert.ok(!style || style === 'rpc', 'invalid message definition for document style binding');\r\n        message = self.wsdl.objectToRpcXML(name, args, alias, ns, input.name !== 'element');\r\n        method.inputSoap === 'encoded' && (encoding = 'soap:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" ');\r\n    } else {\r\n        assert.ok(!style || style === 'document', 'invalid message definition for rpc style binding');\r\n        // pass `input.$lookupType` if `input.$type` could not be found\r\n        message = self.wsdl.objectToDocumentXML(input.$name, args, input.targetNSAlias, input.targetNamespace, input.$type || input.$lookupType);\r\n    }\r\n    xml =\r\n        '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\r\n        '<' +\r\n        envelopeKey +\r\n        ':Envelope ' +\r\n        xmlnsSoap +\r\n        ' ' +\r\n        'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\r\n        encoding +\r\n        this.wsdl.xmlnsInEnvelope +\r\n        '>' +\r\n        (self.soapHeaders || self.security\r\n            ? '<' +\r\n              envelopeKey +\r\n              ':Header>' +\r\n              (self.soapHeaders ? self.soapHeaders.join('\\n') : '') +\r\n              (self.security && !self.security.postProcess ? self.security.toXML() : '') +\r\n              '</' +\r\n              envelopeKey +\r\n              ':Header>'\r\n            : '') +\r\n        '<' +\r\n        envelopeKey +\r\n        ':Body' +\r\n        (self.bodyAttributes ? self.bodyAttributes.join(' ') : '') +\r\n        (self.security && self.security.postProcess ? ' Id=\"_0\"' : '') +\r\n        '>' +\r\n        message +\r\n        '</' +\r\n        envelopeKey +\r\n        ':Body>' +\r\n        '</' +\r\n        envelopeKey +\r\n        ':Envelope>';\r\n\r\n    if (self.security && self.security.postProcess) {\r\n        xml = self.security.postProcess(xml, envelopeKey);\r\n    }\r\n\r\n    if (options && options.postProcess) {\r\n        xml = options.postProcess(xml);\r\n    }\r\n\r\n    self.lastMessage = message;\r\n    self.lastRequest = xml;\r\n    self.lastEndpoint = location;\r\n\r\n    const tryJSONparse = function(body) {\r\n        try {\r\n            return JSON.parse(body);\r\n        } catch (err) {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    return from(SoapAttachment.fromFormFiles(options.attachments)).pipe(\r\n        map((soapAttachments: SoapAttachment[]) => {\r\n            if (!soapAttachments.length) {\r\n                return xml;\r\n            }\r\n\r\n            if (options.forceMTOM || soapAttachments.length > 0) {\r\n                const start = uuid4();\r\n                const boundry = uuid4();\r\n                let action = null;\r\n                if (headers['Content-Type'].indexOf('action') > -1) {\r\n                    for (const ct of headers['Content-Type'].split('; ')) {\r\n                        if (ct.indexOf('action') > -1) {\r\n                            action = ct;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                headers['Content-Type'] =\r\n                    'multipart/related; type=\"application/xop+xml\"; start=\"<' + start + '>\"; start-info=\"text/xml\"; boundary=\"' + boundry + '\"';\r\n                if (action) {\r\n                    headers['Content-Type'] = headers['Content-Type'] + '; ' + action;\r\n                }\r\n\r\n                const multipart: any[] = [\r\n                    {\r\n                        'Content-Type': 'application/xop+xml; charset=UTF-8; type=\"text/xml\"',\r\n                        'Content-ID': '<' + start + '>',\r\n                        body: xml\r\n                    }\r\n                ];\r\n\r\n                soapAttachments.forEach((attachment: SoapAttachment) => {\r\n                    multipart.push({\r\n                        'Content-Type': attachment.mimetype + ';',\r\n                        'Content-Transfer-Encoding': 'binary',\r\n                        'Content-ID': '<' + (attachment.contentId || attachment.name) + '>',\r\n                        'Content-Disposition': 'attachment; name=\"' + attachment.name + '\"; filename=\"' + attachment.name + '\"',\r\n                        body: attachment.body\r\n                    });\r\n                });\r\n\r\n                return new Multipart().build(multipart, boundry);\r\n            }\r\n        }),\r\n        flatMap((body: any) =>\r\n            (<HttpClient>self.httpClient)\r\n                .post(location, body, {\r\n                    headers: headers,\r\n                    responseType: 'text',\r\n                    observe: 'response'\r\n                })\r\n                .pipe(\r\n                    map((response: HttpResponse<any>) => {\r\n                        self.lastResponse = response.body;\r\n                        self.lastResponseHeaders = response && response.headers;\r\n                        return parseSync(response.body, response);\r\n                    })\r\n                )\r\n        )\r\n    );\r\n\r\n    function parseSync(body, response: HttpResponse<any>) {\r\n        let obj;\r\n        try {\r\n            obj = self.wsdl.xmlToObject(body);\r\n        } catch (error) {\r\n            //  When the output element cannot be looked up in the wsdl and the body is JSON\r\n            //  instead of sending the error, we pass the body in the response.\r\n            if (!output || !output.$lookupTypes) {\r\n                // debug('Response element is not present. Unable to convert response xml to json.');\r\n                //  If the response is JSON then return it as-is.\r\n                const json = _.isObject(body) ? body : tryJSONparse(body);\r\n                if (json) {\r\n                    return { err: null, response, responseBody: json, header: undefined, xml };\r\n                }\r\n            }\r\n            error.response = response;\r\n            error.body = body;\r\n            // self.emit('soapError', error, eid);\r\n            throw error;\r\n        }\r\n        return finish(obj, body, response);\r\n    }\r\n\r\n    function finish(obj, responseBody, response) {\r\n        let result = null;\r\n\r\n        if (!output) {\r\n            // one-way, no output expected\r\n            return { err: null, response: null, responseBody, header: obj.Header, xml };\r\n        }\r\n\r\n        // If it's not HTML and Soap Body is empty\r\n        if (!obj.html && !obj.Body) {\r\n            return { err: null, obj, responseBody, header: obj.Header, xml };\r\n        }\r\n\r\n        if (typeof obj.Body !== 'object') {\r\n            const error: any = new Error('Cannot parse response');\r\n            error.response = response;\r\n            error.body = responseBody;\r\n            return { err: error, obj, responseBody, header: undefined, xml };\r\n        }\r\n\r\n        result = obj.Body[output.$name];\r\n        // RPC/literal response body may contain elements with added suffixes I.E.\r\n        // 'Response', or 'Output', or 'Out'\r\n        // This doesn't necessarily equal the ouput message name. See WSDL 1.1 Section 2.4.5\r\n        if (!result) {\r\n            result = obj.Body[output.$name.replace(/(?:Out(?:put)?|Response)$/, '')];\r\n        }\r\n        if (!result) {\r\n            ['Response', 'Out', 'Output'].forEach(function(term) {\r\n                if (obj.Body.hasOwnProperty(name + term)) {\r\n                    return (result = obj.Body[name + term]);\r\n                }\r\n            });\r\n        }\r\n\r\n        return { err: null, result, responseBody, header: obj.Header, xml };\r\n    }\r\n};\r\n\r\nClient.prototype.call = function(method: string, body: any, options?: any, extraHeaders?: any): Observable<any> {\r\n    if (!this[method]) {\r\n        return throwError(`Method ${method} not found`);\r\n    }\r\n\r\n    return (<Function>this[method]).call(this, body, options, extraHeaders);\r\n};\r\n","/*\r\n * Copyright (c) 2011 Vinay Pulim <vinay@milewise.com>\r\n * MIT Licensed\r\n */\r\n\r\nimport * as wsdl from './wsdl';\r\nimport { security } from './security/security';\r\nimport { Client } from './client';\r\nexport { Client } from './client';\r\nexport { security  } from './security/security';\r\n\r\nexport { passwordDigest } from './utils'\r\nexport const WSDL = wsdl.WSDL;\r\n\r\nconst cache = {}; // TODO some caching?\r\n\r\nconst getFromCache = async (url, options) => {\r\n  // console.log('Getting from cache', url);\r\n  // console.log('Cache', cache)\r\n  if (cache[url]) {\r\n    // console.log('Found in cache', url);\r\n    return cache[url];\r\n  } else {\r\n    return wsdl.open_wsdl(url, options).then(wsdl => {\r\n      cache[url] = wsdl;\r\n      return wsdl;\r\n    })\r\n  }\r\n};\r\n\r\nasync function _requestWSDL(url, options) {\r\n  if (options.disableCache === true) {\r\n    return wsdl.open_wsdl(url, options);\r\n  } else {\r\n    return getFromCache(url, options);\r\n  }\r\n\r\n}\r\n\r\nexport async function createClient(url, options, endpoint): Promise<any> {\r\n  if (typeof options === 'undefined') {\r\n    options = {};\r\n  }\r\n  // console.log(\"createClient\", options)\r\n  endpoint = options.endpoint || endpoint;\r\n  \r\n  const wsdl = await _requestWSDL(url, options);\r\n  const client = new Client(wsdl, endpoint, options);\r\n  return client;\r\n}\r\n\r\nexport const BasicAuthSecurity = security.BasicAuthSecurity;\r\nexport const NTLMSecurity = security.NTLMSecurity;\r\nexport const WSSecurity = security.WSSecurity;\r\n// export const WSSecurityCert = security.WSSecurityCert;\r\nexport const BearerSecurity = security.BearerSecurity;\r\n// export const ClientSSLSecurity = security.ClientSSLSecurity;\r\n// export const ClientSSLSecurityPFX = security.ClientSSLSecurityPFX;\r\n","import { Injectable } from '@angular/core';\r\nimport { createClient } from './soap/soap';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Client } from './soap/interfaces';\r\n\r\nexport {\r\n  Client,\r\n  WSDL,\r\n  ISoapMethod,\r\n  ISoapMethodResponse,\r\n  BasicAuthSecurity,\r\n  BearerSecurity,\r\n  // WSSecurityCert,\r\n  WSSecurity,\r\n  NTLMSecurity\r\n} from './soap/interfaces';\r\n\r\nexport { security } from './soap/security/security'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxSoapService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createClient(wsdlUrl: string, options: any = {}, endpoint?: string): Promise<Client> {\r\n    options.httpClient = this.http;\r\n    return createClient(wsdlUrl, options, endpoint) ;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class NgxSoapModule { }\r\n"]}