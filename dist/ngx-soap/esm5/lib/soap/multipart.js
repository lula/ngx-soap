var Multipart = /** @class */ (function () {
    function Multipart() {
        this.preambleCRLF = true;
        this.postambleCRLF = true;
    }
    Multipart.prototype.build = function (parts, boundary) {
        var body = [];
        function add(part) {
            if (typeof part === 'number') {
                part = part.toString();
            }
            return body.push(part);
        }
        if (this.preambleCRLF) {
            add('\r\n');
        }
        parts.forEach(function (part) {
            var preamble = '--' + boundary + '\r\n';
            Object.keys(part).forEach(function (key) {
                if (key === 'body') {
                    return;
                }
                preamble += key + ': ' + part[key] + '\r\n';
            });
            preamble += '\r\n';
            add(preamble);
            add(part.body);
            add('\r\n');
        });
        add('--' + boundary + '--');
        if (this.postambleCRLF) {
            add('\r\n');
        }
        var size = body.map(function (part) {
            if (typeof part === 'string') {
                return part.length;
            }
            else {
                return part.byteLength;
            }
        }).reduce(function (a, b) { return a + b; }, 0);
        var uint8array = new Uint8Array(size);
        var i = 0;
        body.forEach(function (part) {
            if (typeof part === 'string') {
                for (var j = 0; j < part.length; i++, j++) {
                    uint8array[i] = part.charCodeAt(j) & 0xff;
                }
            }
            else {
                for (var j = 0; j < part.byteLength; i++, j++) {
                    uint8array[i] = part[j];
                }
            }
        });
        return uint8array.buffer;
    };
    return Multipart;
}());
export { Multipart };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwYXJ0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNvYXAvIiwic291cmNlcyI6WyJsaWIvc29hcC9tdWx0aXBhcnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFBQTtRQUNFLGlCQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLGtCQUFhLEdBQUcsSUFBSSxDQUFDO0lBeUR2QixDQUFDO0lBdkRDLHlCQUFLLEdBQUwsVUFBTSxLQUFLLEVBQUUsUUFBUTtRQUNuQixJQUFNLElBQUksR0FBRyxFQUFFLENBQUM7UUFFaEIsU0FBUyxHQUFHLENBQUUsSUFBSTtZQUNoQixJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtnQkFDNUIsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQzthQUN4QjtZQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUN4QixDQUFDO1FBRUQsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3JCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtTQUNaO1FBRUQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLElBQUk7WUFDMUIsSUFBSSxRQUFRLEdBQUcsSUFBSSxHQUFHLFFBQVEsR0FBRyxNQUFNLENBQUM7WUFDeEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBVSxHQUFHO2dCQUNyQyxJQUFJLEdBQUcsS0FBSyxNQUFNLEVBQUU7b0JBQUUsT0FBTTtpQkFBRTtnQkFDOUIsUUFBUSxJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQTtZQUM3QyxDQUFDLENBQUMsQ0FBQztZQUNILFFBQVEsSUFBSSxNQUFNLENBQUM7WUFDbkIsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2QsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNmLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFDO1FBQ0gsR0FBRyxDQUFDLElBQUksR0FBRyxRQUFRLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFFNUIsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3RCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNiO1FBRUQsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFDLElBQUk7WUFDekIsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7Z0JBQzVCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQTthQUNuQjtpQkFBTTtnQkFDTCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7YUFDeEI7UUFDSCxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQyxJQUFLLE9BQUEsQ0FBQyxHQUFHLENBQUMsRUFBTCxDQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFOUIsSUFBSSxVQUFVLEdBQUcsSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1YsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUk7WUFDaEIsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLEVBQUU7Z0JBQzVCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFO29CQUN6QyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUM7aUJBQzNDO2FBQ0Y7aUJBQU07Z0JBQ0wsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQzdDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7aUJBQ3pCO2FBQ0Y7UUFDSCxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sVUFBVSxDQUFDLE1BQU0sQ0FBQztJQUMzQixDQUFDO0lBRUgsZ0JBQUM7QUFBRCxDQUFDLEFBM0RELElBMkRDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIE11bHRpcGFydCAge1xyXG4gIHByZWFtYmxlQ1JMRiA9IHRydWU7XHJcbiAgcG9zdGFtYmxlQ1JMRiA9IHRydWU7XHJcblxyXG4gIGJ1aWxkKHBhcnRzLCBib3VuZGFyeSkge1xyXG4gICAgY29uc3QgYm9keSA9IFtdO1xyXG5cclxuICAgIGZ1bmN0aW9uIGFkZCAocGFydCkge1xyXG4gICAgICBpZiAodHlwZW9mIHBhcnQgPT09ICdudW1iZXInKSB7XHJcbiAgICAgICAgcGFydCA9IHBhcnQudG9TdHJpbmcoKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gYm9keS5wdXNoKHBhcnQpXHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRoaXMucHJlYW1ibGVDUkxGKSB7XHJcbiAgICAgIGFkZCgnXFxyXFxuJylcclxuICAgIH1cclxuXHJcbiAgICBwYXJ0cy5mb3JFYWNoKGZ1bmN0aW9uIChwYXJ0KSB7XHJcbiAgICAgIGxldCBwcmVhbWJsZSA9ICctLScgKyBib3VuZGFyeSArICdcXHJcXG4nO1xyXG4gICAgICBPYmplY3Qua2V5cyhwYXJ0KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICBpZiAoa2V5ID09PSAnYm9keScpIHsgcmV0dXJuIH1cclxuICAgICAgICBwcmVhbWJsZSArPSBrZXkgKyAnOiAnICsgcGFydFtrZXldICsgJ1xcclxcbidcclxuICAgICAgfSk7XHJcbiAgICAgIHByZWFtYmxlICs9ICdcXHJcXG4nO1xyXG4gICAgICBhZGQocHJlYW1ibGUpO1xyXG4gICAgICBhZGQocGFydC5ib2R5KTtcclxuICAgICAgYWRkKCdcXHJcXG4nKTtcclxuICAgIH0pO1xyXG4gICAgYWRkKCctLScgKyBib3VuZGFyeSArICctLScpO1xyXG5cclxuICAgIGlmICh0aGlzLnBvc3RhbWJsZUNSTEYpIHtcclxuICAgICAgYWRkKCdcXHJcXG4nKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBzaXplID0gYm9keS5tYXAoKHBhcnQpID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBwYXJ0ID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHJldHVybiBwYXJ0Lmxlbmd0aFxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBwYXJ0LmJ5dGVMZW5ndGg7XHJcbiAgICAgIH1cclxuICAgIH0pLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApO1xyXG5cclxuICAgIGxldCB1aW50OGFycmF5ID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XHJcbiAgICBsZXQgaSA9IDA7XHJcbiAgICBib2R5LmZvckVhY2goKHBhcnQpID0+IHtcclxuICAgICAgaWYgKHR5cGVvZiBwYXJ0ID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcGFydC5sZW5ndGg7IGkrKywgaisrKSB7XHJcbiAgICAgICAgICB1aW50OGFycmF5W2ldID0gcGFydC5jaGFyQ29kZUF0KGopICYgMHhmZjtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBwYXJ0LmJ5dGVMZW5ndGg7IGkrKywgaisrKSB7XHJcbiAgICAgICAgICB1aW50OGFycmF5W2ldID0gcGFydFtqXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHVpbnQ4YXJyYXkuYnVmZmVyO1xyXG4gIH1cclxuXHJcbn1cclxuIl19