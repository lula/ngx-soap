//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"interfaces.js","sourceRoot":"ng://ngx-soap/","sources":["lib/soap/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { EventEmitter } from 'events';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface IXmlAttribute {\n    name: string;\n    value: string;\n}\n\nexport interface IWsdlBaseOptions {\n    attributesKey?: string;\n    valueKey?: string;\n    xmlKey?: string;\n    overrideRootElement?: { namespace: string; xmlnsAttributes?: IXmlAttribute[]; };\n    ignoredNamespaces?: boolean | string[] | { namespaces?: string[]; override?: boolean; };\n    ignoreBaseNameSpaces?: boolean;\n    escapeXML?: boolean;\n    returnFault?: boolean;\n    handleNilAsNull?: boolean;\n    wsdl_headers?: { [key: string]: any };\n    wsdl_options?: { [key: string]: any };\n}\n\nexport interface Definitions {\n    descriptions: object;\n    ignoredNamespaces: string[];\n    messages: WsdlMessages;\n    portTypes: WsdlPortTypes;\n    bindings: WsdlBindings;\n    services: WsdlServices;\n    schemas: WsdlSchemas;\n    valueKey: string;\n    xmlKey: string;\n    xmlns: WsdlXmlns;\n    '$targetNamespace': string;\n    '$name': string;\n}\n\n\nexport interface WsdlSchemas {\n    [prop: string]: WsdlSchema;\n}\nexport interface WsdlSchema extends XsdTypeBase {\n    children: any[];\n    complexTypes?: WsdlElements;\n    elements?: WsdlElements;\n    includes: any[];\n    name: string;\n    nsName: string;\n    prefix: string;\n    types?: WsdlElements;\n    xmlns: WsdlXmlns;\n}\nexport interface WsdlElements {\n    [prop: string]: XsdElement;\n}\nexport type XsdElement = XsdElementType | XsdComplexType;\n\nexport interface WsdlXmlns {\n    wsu?: string;\n    wsp?: string;\n    wsam?: string;\n    soap?: string;\n    tns?: string;\n    xsd?: string;\n    __tns__?: string;\n    [prop: string]: string | void;\n}\n\nexport interface XsdComplexType extends XsdTypeBase {\n    children: XsdElement[] | void;\n    name: string;\n    nsName: string;\n    prefix: string;\n    '$name': string;\n    [prop: string]: any;\n}\n\nexport interface XsdElementType extends XsdTypeBase {\n    children: XsdElement[] | void;\n    name: string;\n    nsName: string;\n    prefix: string;\n    targetNSAlias: string;\n    targetNamespace: string;\n    '$lookupType': string;\n    '$lookupTypes': any[];\n    '$name': string;\n    '$type': string;\n    [prop: string]: any;\n}\n\nexport interface WsdlMessages {\n    [prop: string]: WsdlMessage;\n}\nexport interface WsdlMessage extends XsdTypeBase {\n    element: XsdElement;\n    parts: { [prop: string]: any };\n    '$name': string;\n}\n\nexport interface WsdlPortTypes {\n    [prop: string]: WsdlPortType;\n}\nexport interface WsdlPortType extends XsdTypeBase {\n    methods: { [prop: string]: XsdElement }\n}\n\nexport interface WsdlBindings {\n    [prop: string]: WsdlBinding;\n}\nexport interface WsdlBinding extends XsdTypeBase {\n    methods: WsdlElements;\n    style: string;\n    transport: string;\n    topElements: {[prop: string]: any};\n}\n\nexport interface WsdlServices {\n    [prop: string]: WsdlService;\n}\nexport interface WsdlService extends XsdTypeBase {\n    ports: {[prop: string]: any};\n}\n\nexport interface XsdTypeBase {\n    ignoredNamespaces: string[];\n    valueKey: string;\n    xmlKey: string;\n    xmlns?: WsdlXmlns,\n}\n\nexport interface IOptions extends IWsdlBaseOptions {\n    disableCache?: boolean;\n    endpoint?: string;\n    envelopeKey?: string;\n    httpClient?: HttpClient;\n    // request?: (options: any, callback?: (error: any, res: any, body: any) => void) => void;\n    stream?: boolean;\n    // wsdl options that only work for client\n    forceSoap12Headers?: boolean;\n    customDeserializer?: any;\n    [key: string]: any;\n}\n\nexport interface WSDL {\n    constructor(definition: any, uri: string, options?: IOptions);\n    ignoredNamespaces: string[];\n    ignoreBaseNameSpaces: boolean;\n    valueKey: string;\n    xmlKey: string;\n    xmlnsInEnvelope: string;\n    onReady(callback: (err:Error) => void): void;\n    processIncludes(callback: (err:Error) => void): void;\n    describeServices(): { [k: string]: any };\n    toXML(): string;\n    xmlToObject(xml: any, callback?: (err:Error, result:any) => void): any;\n    findSchemaObject(nsURI: string, qname: string): XsdElement | null | undefined;\n    objectToDocumentXML(name: string, params: any, nsPrefix?: string, nsURI?: string, type?: string): any;\n    objectToRpcXML(name: string, params: any, nsPrefix?: string, nsURI?: string, isParts?: any): string;\n    isIgnoredNameSpace(ns: string): boolean;\n    filterOutIgnoredNameSpace(ns: string): string;\n    objectToXML(obj: any, name: string, nsPrefix?: any, nsURI?: string, isFirst?: boolean, xmlnsAttr?: any, schemaObject?: any, nsContext?: any): string;\n    processAttributes(child: any, nsContext: any): string;\n    findSchemaType(name: any, nsURI: any): any;\n    findChildSchemaObject(parameterTypeObj: any, childName: any, backtrace?: any): any;\n    uri: string;\n    definitions: Definitions;\n}\n\nexport interface Client extends EventEmitter {\n    constructor(wsdl: WSDL, endpoint?: string, options?: IOptions);\n    addBodyAttribute(bodyAttribute: any, name?: string, namespace?: string, xmlns?: string): void;\n    addHttpHeader(name: string, value: any): void;\n    addSoapHeader(soapHeader: any, name?: string, namespace?: any, xmlns?: string): number;\n    changeSoapHeader(index: number, soapHeader: any, name?: string, namespace?: string, xmlns?: string): void;\n    clearBodyAttributes(): void;\n    clearHttpHeaders(): void;\n    clearSoapHeaders(): void;\n    describe(): any;\n    getBodyAttributes(): any[];\n    getHttpHeaders(): { [k:string]: string };\n    getSoapHeaders(): string[];\n    setEndpoint(endpoint: string): void;\n    setSOAPAction(action: string): void;\n    setSecurity(security: ISecurity): void;\n    wsdl: WSDL;\n    [method: string]: ISoapMethod | WSDL | Function;\n    call(method: string, body: any, options?: any, extraHeaders?: any): Observable<ISoapMethodResponse>;\n}\n\nexport interface ISoapMethod {\n    (args: any, options?: any, extraHeaders?: any): Observable<ISoapMethodResponse>;\n}\n\nexport interface ISoapMethodResponse {\n    err: any,\n    header: any,\n    responseBody: string,\n    xml: string;\n    result: any;\n}\n\nexport interface ISecurity {\n    addOptions(options: any): void;\n    toXML(): string;\n}\n\nexport interface BasicAuthSecurity extends ISecurity {\n    constructor(username: string, password: string, defaults?: any);\n    addHeaders(headers: any): void;\n    addOptions(options: any): void;\n    toXML(): string;\n}\n\nexport interface BearerSecurity extends ISecurity {\n    constructor(token: string, defaults?: any);\n    addHeaders(headers: any): void;\n    addOptions(options: any): void;\n    toXML(): string;\n}\n\nexport interface WSSecurity extends ISecurity {\n    constructor(username: string, password: string, options?: any);\n    addOptions(options: any): void;\n    toXML(): string;\n}\n\nexport interface WSSecurityCert extends ISecurity {\n    constructor(privatePEM: any, publicP12PEM: any, password: any);\n    addOptions(options: any): void;\n    toXML(): string;\n}\n\nexport interface NTLMSecurity extends ISecurity {\n    constructor(username: string, password: string, domain: string, workstation);\n    addHeaders(headers: any): void;\n    addOptions(options: any): void;\n    toXML(): string;\n}\n"]}